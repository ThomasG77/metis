{"version":3,"sources":["webpack:///webpack/bootstrap 5b2bdeb4f6ec45b29f16","webpack:///./packages/data-layer/es/parser/create-parser.js","webpack:///./examples/dc/src/services.js","webpack:///./packages/data-layer/es/parser/parse-filter.js","webpack:///./packages/data-layer/es/parser/parse-source.js","webpack:///./packages/data-layer/~/invariant/browser.js","webpack:///./packages/view-layer/src/index.js","webpack:///./packages/view-layer/src/registry.js","webpack:///./packages/view-layer/src/renderer.js","webpack:///./~/script-loader/addScript.js","webpack:///./examples/dc/index.js","webpack:///./examples/dc/~/d3/d3.js?36f0","webpack:///./examples/dc/~/dc/dc.js?897f","webpack:///./examples/dc/src/count.js","webpack:///./examples/dc/src/pie.js","webpack:///./examples/dc/src/stack-utils.js","webpack:///./examples/dc/src/stacked-bar.js","webpack:///./examples/config.js","webpack:///./packages/data-layer/es/create-data-graph.js","webpack:///./packages/data-layer/es/create-data-node.js","webpack:///./packages/data-layer/es/helpers/expression-builders.js","webpack:///./packages/data-layer/es/helpers/transform-builders.js","webpack:///./packages/data-layer/es/index.js","webpack:///./packages/data-layer/es/parser/parse-aggregate.js","webpack:///./packages/data-layer/es/parser/parse-bin.js","webpack:///./packages/data-layer/es/parser/parse-crossfilter.js","webpack:///./packages/data-layer/es/parser/parse-datastate.js","webpack:///./packages/data-layer/es/parser/parse-expression.js","webpack:///./packages/data-layer/es/parser/parse-limit.js","webpack:///./packages/data-layer/es/parser/parse-project.js","webpack:///./packages/data-layer/es/parser/parse-resolvefilter.js","webpack:///./packages/data-layer/es/parser/parse-sample.js","webpack:///./packages/data-layer/es/parser/parse-sort.js","webpack:///./packages/data-layer/es/parser/parse-transform.js","webpack:///./packages/data-layer/es/parser/write-sql.js","webpack:///./packages/data-layer/es/utils.js","webpack:///./packages/thrift-layer/index.js","webpack:///./packages/thrift-layer/src/client-proxy.js","webpack:///./packages/thrift-layer/src/thrifty.js","webpack:///./packages/thrift-layer/src/utils/log-query-results.js","webpack:///./packages/thrift-layer/src/utils/process-query-results.js","webpack:///./packages/view-layer/~/d3-dispatch/index.js","webpack:///./packages/view-layer/~/d3-dispatch/src/dispatch.js","webpack:///./packages/view-layer/src/chart.js","webpack:///./packages/view-layer/src/view.js","webpack:///./~/process/browser.js","webpack:///./examples/dc/~/d3/d3.js","webpack:///./examples/dc/~/dc/dc.js","webpack:///./packages/thrift-layer/lib/mapd.thrift.js","webpack:///./packages/thrift-layer/lib/mapd_types.js","webpack:///./packages/thrift-layer/lib/thrift.js"],"names":["createParser","transformParsers","expressionParsers","parser","parseExpression","parseTransform","parseDataState","parseSource","writeSQL","write","registerParser","definition","typeParser","meta","type","expression","sql","transform","data","sourceTransforms","state","parseFilter","_typeof","Symbol","iterator","obj","constructor","prototype","arguments","length","undefined","where","push","expr","joinRelation","transforms","reduce","stmt","index","table","concat","right","pop","left","joinType","joinStmt","aliasStmt","as","subquery","join","invariant","condition","format","a","b","c","d","e","f","process","env","NODE_ENV","Error","error","args","argIndex","replace","name","framesToPop","module","exports","default","chartGroups","Map","DEFAULT_GROUP_NAME","Registry","chart","groupName","group","get","set","id","delete","Array","from","values","renderAsync","then","render","redrawAsync","redraw","Renderer","redrawAll","charts","redrawing","debounced","Promise","resolve","all","map","pie","bar","count","DCChart","dataNode","doRender","doRedraw","connect","pieChart","document","getElementById","dispatch","barChart","countChart","renderAll","protocol","host","port","dbName","user","password","logging","createDataGraph","_extends","Object","assign","target","i","source","key","hasOwnProperty","call","connector","query","context","childNodes","graphAPI","children","typeDef","isArray","createDataNode","initialState","dataNodeAPI","getState","toSQL","setter","childState","alias","avg","min","max","sum","approxCount","countStar","extract","dateTrunc","inExpr","not","caseExpr","between","field","distinct","approx","unit","cond","end","else","range","project","aggregate","filter","filterRange","filterIn","bin","limit","sort","top","bottom","getAggs","agg","fields","ops","getGroupBy","groupby","aggs","extent","maxbins","row","offset","order","_expr","_rel","rel","parseAggregate","AGGREGATES","average","forEach","parseGroupBy","select","aggregateField","op","str","parseBin","_ref","having","parseCrossfilter","unresolved","signal","keys","ignore","indexOf","initialSQL","orderby","t","toUpperCase","x","y","parseLimit","parseProject","parseResolvefilter","_defineProperty","value","defineProperty","enumerable","configurable","writable","sample","GOLDEN_RATIO","THIRTY_TWO_BITS","method","size","ratio","Math","threshold","floor","parseSort","ORDERINGS","ascending","descending","writeSelect","writeFrom","writeWhere","writeGroupby","writeHaving","writeOrderBy","writeLimit","writeOffset","traverse","reduceToSQL","identity","node","xform","accum","rightNode","require","window","TDatumEnum","TDatumType","methodName","originalMethod","callback","result","Thrift","TException","CLIENT_KEY","CONFIG_KEY","SESSION_KEY","NONCE_KEY","LOGGER_KEY","Thrifty","config","options","columnar","reject","client","sql_execute","session","curNonce","url","transport","Transport","Protocol","MapDClient","Proxy","toString","logger","logQueryResults","console","log","execution_time_ms","total_time_ms","processQueryResults","eliminateNullRows","returnTiming","formattedResult","processColumnarResults","row_set","timing","results","numCols","row_desc","numRows","columns","nulls","col_name","col_type","is_array","r","rowHasNull","fieldName","fieldType","fieldIsArray","isNull","arrayNumElems","arr_col","int_col","real_col","str_col","Date","noop","n","_","Dispatch","parseTypenames","typenames","types","trim","split","slice","on","typename","T","copy","that","apply","CHART_ID_COUNTER","Chart","event","handler","updater","createView","d3","BASE_EVENTS","registry","renderer","list","filterAll","events","listener","Set","setup","register","remove","deregister"],"mappings":"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iBAAKG,SAAL;AACD,CALD,E;;;;;;AClBA,+C;;;;;;ACAA,+C;;;;;;;;ACAA;AAAA;AAC4B;;AAE5B;AAAA;AAAA;;AAEA,8CAA8C,QAAQ;AACtD;AACA,oBAAoB,sBAAsB;AAC1C;AACA,CAAC;;AAED,8CAA8C,QAAQ;AACtD,wBAAwB,qBAAqB;AAC7C,oBAAoB,sBAAsB;;AAE1C;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;AC1C2B;;AAE5B;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;AC3ED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,iBAAiB;AACjB;AACA;AACA,GAAG,IAAI;;AAEP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;AC1D4B;AAC5B;;AAEA;AAAA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;kBC/Hc;AACbC,YAAU,OADG;AAEbC,QAAM,gBAFO;AAGbC,QAAM,KAHO;AAIbC,UAAQ,MAJK;AAKbC,QAAM,MALO;AAMbC,YAAU,kBANG;AAObC,WAAS;AAPI,C;;;;;;;;;;;;kBCWSC,e;;AATxB;;;;AACA;;AACA;;;;;;AAJA,IAAIC,WAAWC,OAAOC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAInG,UAAUC,MAA9B,EAAsCkG,GAAtC,EAA2C;AAAE,QAAIC,SAASpG,UAAUmG,CAAV,CAAb,CAA2B,KAAK,IAAIE,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIJ,OAAOjG,SAAP,CAAiBuG,cAAjB,CAAgCC,IAAhC,CAAqCH,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEH,eAAOG,GAAP,IAAcD,OAAOC,GAAP,CAAd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A;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;ACvLtC,+BAA+B,cAAc,+BAA+B,6DAA6D,sCAAsC,MAAM,oCAAoC,uCAAuC,mFAAmF,KAAK,8BAA8B,yHAAyH,KAAK,sBAAsB,WAAW,qEAAqE,OAAO,YAAY,mCAAmC,oDAAoD,yCAAyC,uBAAuB,UAAU,OAAO,KAAK,0CAA0C,yBAAyB,MAAM,sBAAsB,WAAW,mFAAmF,OAAO,gBAAgB,wSAAwS,mEAAmE,iEAAiE,UAAU,6EAA6E,2EAA2E,UAAU,0EAA0E,wEAAwE,UAAU,OAAO,KAAK,gCAAgC,iCAAiC,uDAAuD,KAAK,oCAAoC,uDAAuD,MAAM,iCAAiC,yCAAyC,mCAAmC,+DAA+D,gBAAgB,gBAAgB,SAAS,mEAAmE,OAAO,O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ACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChyBAAyB,cAAc;AACveAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkkBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC75IA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa;AACb,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,aAAa,6BAA6B,EAAE,aAAa;AACzD,aAAa,4CAA4C,EAAE,aAAa;AACxE,aAAa,+CAA+C,EAAE,aAAa;;AAE3E;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sEAAsE;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA,gFAAgF;AAChF,sFAAsF;AACtF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,yBAAyB;AACzB,0BAA0B;AAC1B,6BAA6B;AAC7B,yBAAyB;AACzB,yBAAyB;AACzB,uBAAuB;AACvB,uBAAuB;AACvB,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,WAAW;AACX;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,mBAAmB;AAClC,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,2BAA2B;AAC3B,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA,iBAAiB;AACjB;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,qBAAqB;AACpC,eAAe,OAAO;AACtB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;;AAET,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,mEAAmE;AACnE,kDAAkD;AAClD;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,gBAAgB;AAC3C,uCAAuC;AACvC;AACA,4CAA4C;AAC5C,iBAAiB,wBAAwB;AACzC,4CAA4C;AAC5C,iBAAiB,wBAAwB;AACzC,2CAA2C;AAC3C,iBAAiB,wBAAwB;AACzC,2CAA2C;AAC3C,iBAAiB,wBAAwB;AACzC,2CAA2C;AAC3C,iBAAiB,wBAAwB;AACzC,2CAA2C;AAC3C,iBAAiB,wBAAwB;AACzC,2CAA2C;AAC3C,iBAAiB;AACjB,wCAAwC;AACxC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,mBAAmB;AACrC,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,YAAY;AAC9B,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B,kBAAkB,YAAY;AAC9B,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;;AAEA,aAAa,WAAW;;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,WAAW;;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5b2bdeb4f6ec45b29f16","import parseExpressionDefault from \"./parse-expression\";\nimport parseDataStateDefault from \"./parse-datastate\";\nimport parseTransformDefault from \"./parse-transform\";\nimport parseSourceDefault from \"./parse-source\";\nimport writeSQLDefault, { write } from \"./write-sql\";\n\n/**\n * Creates a parser than can parse expressions, transforms, and intermediary\n * SQL representations. This parser is used internally by the data graph.\n * @see {@link Parser} for further information.\n * @memberof API\n */\nexport function createParser() {\n  var transformParsers = {};\n  var expressionParsers = {};\n\n  /**\n   * A collection of functions used for parsing expressions, transforms, and\n   * intermediary SQL representations\n   * @namespace Parser\n   */\n  var parser = {\n    parseExpression: parseExpression,\n    parseTransform: parseTransform,\n    parseDataState: parseDataState,\n    parseSource: parseSource,\n    writeSQL: writeSQL,\n    write: write,\n    registerParser: registerParser\n  };\n\n  /**\n   * Returns all child data node instances of the graph.\n   * @memberof Parser\n   * @inner\n   */\n  function registerParser(definition, typeParser) {\n    if (definition.meta === \"expression\") {\n      expressionParsers[definition.type] = typeParser;\n    } else if (definition.meta === \"transform\") {\n      transformParsers[definition.type] = typeParser;\n    }\n  }\n\n  /**\n   * Parses expressions and returns a valid SQL expression string\n   * @memberof Parser\n   * @inner\n   * @see {@link Expression} for further information.\n   */\n  function parseExpression(expression) {\n    if (expressionParsers[expression.type]) {\n      return expressionParsers[expression.type](expression, parser);\n    }\n    return parseExpressionDefault(expression, parser);\n  }\n\n  /**\n   * Parses transforms and returns an intermediary SQL representation\n   * @memberof Parser\n   * @inner\n   * @see {@link Transform} for further information.\n   */\n  function parseTransform(sql, transform) {\n    if (transformParsers[transform.type]) {\n      return transformParsers[transform.type](sql, transform, parser);\n    }\n    return parseTransformDefault(sql, transform, parser);\n  }\n\n  /**\n   * Parses a data node state and returns an intermediary SQL representation\n   * @memberof Parser\n   * @inner\n   */\n  function parseDataState(data, sql) {\n    return parseDataStateDefault(data, parser, sql);\n  }\n\n  /**\n   * Parses a source transform and returns a valid SQL FROM clause\n   * @memberof Parser\n   * @inner\n   */\n  function parseSource(sourceTransforms) {\n    return parseSourceDefault(sourceTransforms, parser);\n  }\n\n  /**\n  * Parses a data node state and returns a valid SQL string\n   * @memberof Parser\n   * @inner\n   */\n  function writeSQL(state) {\n    return writeSQLDefault(state, parser);\n  }\n\n  return parser;\n}\n\nexport default createParser();\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/create-parser.js","import {Thrifty} from \"../../../packages/thrift-layer\";\nimport { createView } from \"../../../packages/view-layer/src\";\nimport { createDataGraph } from \"../../../packages/data-layer\";\nimport config from \"../../config\";\n\nexport const view = createView();\nexport const connector = new Thrifty(config);\nconst dataGraph = createDataGraph(connector);\nconst flightsDataGraph = dataGraph.data(\"tweets_nov_feb\");\nexport const xfilterNode = flightsDataGraph.data({\n  name: \"xfilter\",\n  transform: [\n    {\n      type: \"crossfilter\",\n      signal: \"XFILTER\",\n      filter: {}\n    }\n  ]\n});\n\nconnector.logger = (query, result) => {\n  const loggingDiv = document.getElementById(\"logging\")\n  var newDiv = document.createElement(\"div\")\n\n  newDiv.className = \"query\"\n  newDiv.innerHTML = `\n    <span class=\"stmt\">${query}</span>\n    executed in\n    <span class=\"time\">${result.execution_time_ms}</span>\n     ms\n    `\n\n  Array.from(loggingDiv.children).forEach(child => {\n    child.className = \"fade query\"\n  })\n\n  setTimeout(() => {\n    if (loggingDiv.children.length === 3) {\n      loggingDiv.innerHTML = \"\"\n    }\n    loggingDiv.appendChild(newDiv);\n\n  }, 600)\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/dc/src/services.js\n// module id = 1\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport Parser from \"./create-parser\";\n\n\nexport default function parseFilter(sql, transform) {\n  var parser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Parser;\n\n  switch (transform.type) {\n    case \"filter\":\n      sql.where.push(\"(\" + (_typeof(transform.expr) === \"object\" ? parser.parseExpression(transform.expr) : transform.expr) + \")\");\n    default:\n      return sql;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-filter.js","import defaultParser from \"./create-parser\";\n\nfunction joinRelation(type) {\n  switch (type) {\n    case \"join.left\":\n      return \"LEFT JOIN\";\n    case \"join.right\":\n      return \"RIGHT JOIN\";\n    case \"join.inner\":\n      return \"INNER JOIN\";\n    case \"join\":\n    default:\n      return \"JOIN\";\n  }\n}\n\nexport default function parseSource(transforms) {\n  var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultParser;\n\n  return transforms.reduce(function (stmt, transform, index) {\n    if (typeof transform.table === \"string\" && transform.type === \"scan\") {\n      return stmt.concat(transform.table);\n    } else if (transform.type === \"join\" || transform.type === \"join.inner\" || transform.type === \"join.left\" || transform.type === \"join.right\") {\n      var right = stmt.pop();\n      var left = stmt.pop();\n      var joinType = typeof transform.type === \"string\" ? transform.type : \"join\";\n      // $FlowFixMe\n      var joinStmt = left + \" \" + joinRelation(joinType) + \" \" + right;\n      var aliasStmt = typeof transform.as === \"string\" ? \" as \" + transform.as : \"\";\n      return stmt.concat(joinStmt + aliasStmt);\n    } else if (transform.type === \"data\" || transform.type === \"root\") {\n      // $FlowFixMe\n      var subquery = parser.writeSQL(transform);\n      return stmt.concat(\"(\" + subquery + \")\");\n    } else {\n      return stmt;\n    }\n  }, []).join();\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-source.js","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/~/invariant/browser.js","// @flow\nexport {default as Chart} from \"./chart\"\nexport {default as Registry} from \"./registry\"\nexport {default as Renderer} from \"./renderer\"\nexport {default as createView} from \"./view\"\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/src/index.js","// @flow\nimport type { ChartType, DispatchType } from \"./chart\";\n\nexport interface RegistryType {\n  register(\n    chart: ChartType<HTMLElement, DispatchType, string>,\n    groupName: string\n  ): void,\n  deregister(\n    chart: ChartType<HTMLElement, DispatchType, string>,\n    groupName: string\n  ): void,\n  list(groupName: string): Array<ChartType<HTMLElement, DispatchType, string>>\n}\n\nconst chartGroups = new Map();\nconst DEFAULT_GROUP_NAME = \"DEFAULT_GROUP_NAME\";\n\nexport default class Registry implements RegistryType {\n  register(\n    chart: ChartType<HTMLElement, DispatchType, string>,\n    groupName: string = DEFAULT_GROUP_NAME\n  ) {\n    const group = chartGroups.get(groupName);\n    typeof group !== \"undefined\" && group instanceof Map\n      ? group.set(chart.id, chart)\n      : chartGroups.set(groupName, new Map().set(chart.id, chart));\n  }\n\n  deregister(\n    chart: ChartType<HTMLElement, DispatchType, string>,\n    groupName: string = DEFAULT_GROUP_NAME\n  ) {\n    const group = chartGroups.get(groupName);\n    if (group) {\n      group.delete(chart.id);\n    }\n  }\n\n  list(groupName: string = DEFAULT_GROUP_NAME) {\n    const group = chartGroups.get(groupName);\n    return typeof group !== \"undefined\" && group instanceof Map\n      ? Array.from(group.values())\n      : [];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/src/registry.js","// @flow\nimport type { ChartType, DispatchType } from \"./chart\";\n\nconst renderAsync = chart => chart.data().then(chart.render);\nconst redrawAsync = chart => chart.data().then(chart.redraw);\n\nexport default class Renderer {\n  redrawing: boolean;\n  debounced: boolean;\n\n  constructor() {\n    this.redrawing = false;\n    this.debounced = false;\n  }\n\n  redrawAll = (\n    charts: Array<ChartType<HTMLElement, DispatchType, string>>\n  ): Promise<any> => {\n    if (this.redrawing) {\n      this.debounced = true;\n      return Promise.resolve();\n    } else {\n      this.redrawing = true;\n      return Promise.all(charts.map(redrawAsync)).then(() => {\n        this.redrawing = false;\n        if (this.debounced) {\n          this.debounced = false;\n          return Promise.all(charts.map(redrawAsync));\n        }\n      });\n    }\n  };\n\n  renderAll(\n    charts: Array<ChartType<HTMLElement, DispatchType, string>>\n  ): Promise<any> {\n    return Promise.all(charts.map(renderAsync));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/src/renderer.js","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\ttry {\n\t\tif (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else if (typeof execScript !== \"undefined\") {\n\t\t\texecScript(src);\n\t\t} else {\n\t\t\tconsole.error(\"[Script Loader] EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"[Script Loader] \", error.message);\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader/addScript.js\n// module id = 8\n// module chunks = 0","import { Chart } from \"../../packages/view-layer/src\";\nimport { connector, view } from \"./src/services\";\nimport * as pie from \"./src/pie\";\nimport * as bar from \"./src/stacked-bar\";\nimport * as count from \"./src/count\"\n\nclass DCChart extends Chart {\n  data = () => {\n    return this.dataNode.values();\n  };\n  doRender = () => {\n    this.chart.render();\n  };\n  doRedraw = () => {\n    this.chart.redraw();\n  };\n}\n\nconnector.connect().then(() => {\n  const pieChart = new DCChart(document.getElementById(\"chart\"), pie.dispatch);\n  const barChart = new DCChart(document.getElementById(\"chart\"), bar.dispatch);\n  const countChart = new DCChart(document.getElementById(\"chart\"), count.dispatch);\n  view.renderAll();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./examples/dc/index.js","require(\"!!/home/travis/build/mapd/mapd-data-layer/examples/node_modules/script-loader/addScript.js\")(require(\"!!/home/travis/build/mapd/mapd-data-layer/examples/node_modules/raw-loader/index.js!/home/travis/build/mapd/mapd-data-layer/examples/examples/dc/node_modules/d3/d3.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./examples/dc/~/d3/d3.js\n// module id = 10\n// module chunks = 0","require(\"!!/home/travis/build/mapd/mapd-data-layer/examples/node_modules/script-loader/addScript.js\")(require(\"!!/home/travis/build/mapd/mapd-data-layer/examples/node_modules/raw-loader/index.js!/home/travis/build/mapd/mapd-data-layer/examples/examples/dc/node_modules/dc/dc.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./examples/dc/~/dc/dc.js\n// module id = 11\n// module chunks = 0","// var nasdaqCount = dc.dataCount('#count-widget');\nimport { view, xfilterNode } from \"./services\";\n\nexport const dispatch = view.dispatch();\n\ndispatch.on(\"preRedraw\", function preRender([{records}]) {\n  console.log(records)\n  this.chart.group({value: () => records })\n  this.chart.data(() => records);\n});\n\ndispatch.on(\"preRender\", function preRender([{records}]) {\n  this.chart.dimension({size: () => records })\n  this.chart.group({value: () => records })\n\n  this.chart.data(() => records);\n});\n\ndispatch.on(\"setup\", function setup() {\n  this.chart = dc\n    .dataCount('#count-widget')\n    ._mandatoryAttributes([])\n    .html({\n      some: '<strong>%filter-count</strong> selected out of <strong>%total-count</strong> records' +\n          ' | <a href=\\'javascript:dc.filterAll(); dc.renderAll();\\'>Reset All</a>',\n      all: 'All records selected. Cick on the graphs to apply filters.'\n    });\n\n  this.dataNode = xfilterNode.data({\n    name: \"pie\",\n    transform: [\n      {\n        type: \"project\",\n        expr: \"COUNT(*)\",\n        as: \"records\"\n      },\n      {\n        type: \"resolvefilter\",\n        filter: { signal: \"XFILTER\" }\n      }\n    ]\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/dc/src/count.js\n// module id = 12\n// module chunks = 0","import { view, xfilterNode } from \"./services\";\n\nexport const dispatch = view.dispatch();\n\nconst dataTransforms = [\n  {\n    type: \"aggregate\",\n    fields: [\"*\"],\n    ops: [\"count\"],\n    as: [\"records\"],\n    groupby: \"country\"\n  },\n  {\n    type: \"sort\",\n    field: [\"records\"],\n    order: [\"descending\"]\n  },\n  {\n    type: \"limit\",\n    row: 10\n  },\n  {\n    type: \"resolvefilter\",\n    filter: { signal: \"XFILTER\" },\n    ignore: \"PIE\"\n  }\n];\n\nfunction filterHandler(chart) {\n  const filters = chart.filters();\n  xfilterNode.transform(transforms => {\n    if (filters.length) {\n      transforms[0].filter[\"PIE\"] = {\n        type: \"filter\",\n        expr: {\n          type: \"in\",\n          expr: \"country\",\n          set: [...new Set(filters)]\n        }\n      };\n    } else {\n      delete transforms[0].filter[\"PIE\"];\n    }\n\n    return transforms;\n  });\n  dispatch.call(\"filter\", this);\n}\n\ndispatch.on(\"preRedraw\", function preRender(data) {\n  this.chart.data(() => data);\n});\n\ndispatch.on(\"preRender\", function preRender(data) {\n  this.chart.data(() => data);\n});\n\ndispatch.on(\"setup\", function setup() {\n  this.chart = dc\n    .pieChart(\"#chart\")\n    ._mandatoryAttributes([])\n    .width(420)\n    .height(270)\n    .slicesCap(4)\n    .innerRadius(100)\n    .colorAccessor(d => d.country)\n    .keyAccessor(d => d.country)\n    .valueAccessor(p => p.records);\n\n  this.chart.on(\"filtered\", filterHandler.bind(this));\n\n  this.dataNode = xfilterNode.data({\n    name: \"pie\",\n    transform: dataTransforms\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/dc/src/pie.js\n// module id = 13\n// module chunks = 0","export function multikey(x, y) {\n  return x + \"x\" + y;\n}\n\nexport function prepareDataForStack(data) {\n  const dataMap = data.reduce((next, d) => {\n    const x = d.key0;\n    if (d.key1 === \"other\") {\n      // noop\n    } else if (next.hasOwnProperty(x)) {\n      next[x][d.key1] = d.val;\n    } else {\n      next[x] = { [d.key1]: d.val };\n    }\n    return next;\n  }, {});\n\n  return Object.keys(dataMap).map(key => ({\n    key: parseInt(key),\n    value: dataMap[key]\n  }));\n}\n\nexport function prepareStack(chart, layerName, data, index) {\n  const params = [{ all: () => data }, layerName, a => a.value[layerName]];\n  if (index === 0) {\n    chart.group(...params);\n  } else {\n    chart.stack(...params);\n  }\n}\n\nexport function fadeDeselectedAreaOverride() {\n  var bars = this.chart.chartBodyG().selectAll(\"rect.bar\");\n  if (this.chart.hasFilter()) {\n    bars.classed(dc.constants.SELECTED_CLASS, d => {\n      return this.chart.hasFilter(multikey(d.x, d.layer));\n    });\n    bars.classed(dc.constants.DESELECTED_CLASS, d => {\n      return !this.chart.hasFilter(multikey(d.x, d.layer));\n    });\n  } else {\n    bars.classed(dc.constants.SELECTED_CLASS, false);\n    bars.classed(dc.constants.DESELECTED_CLASS, false);\n  }\n}\n\nexport function handleBarSelection(chart) {\n  chart\n    .selectAll(\"rect.bar\")\n    .classed(\"stack-deselected\", function(d) {\n      var key = multikey(d.x, d.layer);\n      return chart.filter() && chart.filters().indexOf(key) === -1;\n    })\n    .on(\"click\", function(d) {\n      chart.filter(multikey(d.x, d.layer));\n      chart.fadeDeselectedArea();\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/dc/src/stack-utils.js\n// module id = 14\n// module chunks = 0","import { view, xfilterNode } from \"./services\";\nimport * as utils from \"./stack-utils\";\n\nexport const dispatch = view.dispatch();\n\nconst STACKS = [\"en\", \"fr\", \"es\", \"it\"];\n\nconst dataTransforms = [\n  {\n    type: \"aggregate\",\n    fields: [\"*\"],\n    ops: [\"count\"],\n    as: [\"val\"],\n    groupby: [\n      {\n        type: \"project\",\n        expr: {\n          type: \"extract\",\n          unit: \"hour\",\n          field: \"tweet_time\"\n        },\n        as: \"key0\"\n      },\n      {\n        type: \"project\",\n        expr: {\n          type: \"case\",\n          cond: [\n            [\n              {\n                type: \"in\",\n                expr: \"lang\",\n                set: STACKS\n              },\n              \"lang\"\n            ]\n          ],\n          else: \"other\"\n        },\n        as: \"key1\"\n      }\n    ]\n  },\n  {\n    type: \"sort\",\n    field: [\"key0\"]\n  },\n  {\n    type: \"resolvefilter\",\n    filter: { signal: \"XFILTER\" },\n    ignore: [\"BAR.lang\", \"BAR.extract\"]\n  }\n];\nfunction filterTransform(lang, extract) {\n  return function transform(transforms) {\n    if (lang.length) {\n      transforms[0].filter[\"BAR.lang\"] = {\n        type: \"filter\",\n        expr: {\n          type: \"in\",\n          expr: \"lang\",\n          set: [...new Set(lang)]\n        }\n      };\n    } else {\n      delete transforms[0].filter[\"BAR.lang\"];\n    }\n\n    if (extract.length) {\n      transforms[0].filter[\"BAR.extract\"] = {\n        type: \"filter\",\n        expr: {\n          type: \"in\",\n          expr: \"extract(hour from tweet_time)\",\n          set: [...new Set(extract)]\n        }\n      };\n    } else {\n      delete transforms[0].filter[\"BAR.extract\"];\n    }\n\n    return transforms;\n  };\n}\n\nfunction filterHandler(chart) {\n  const filters = chart.filters().map(f => f.split(\"x\")[1]);\n  const extract = chart.filters().map(f => parseInt(f.split(\"x\")[0]));\n  xfilterNode.transform(filterTransform(filters, extract));\n  dispatch.call(\"filter\", this);\n}\n\ndispatch.on(\"preRender\", function(data) {\n  const preparedData = utils.prepareDataForStack(data);\n  STACKS.forEach((stack, index) => {\n    utils.prepareStack(this.chart, stack, preparedData, index);\n  });\n});\n\ndispatch.on(\"preRedraw\", function(data) {\n  const preparedData = utils.prepareDataForStack(data);\n  STACKS.forEach((stack, index) => {\n    utils.prepareStack(this.chart, stack, preparedData, index);\n  });\n});\ndispatch.on(\"setup\", function setup() {\n  this.chart = dc.barChart(\"#chart2\");\n  this.dataNode = xfilterNode.data({\n    name: \"stacked\",\n    transform: dataTransforms\n  });\n\n  this.chart\n    ._mandatoryAttributes([])\n    .controlsUseVisibility(true)\n    .width(400)\n    .height(320)\n    .x(d3.scale.linear().domain([1, 21]))\n    .margins({ left: 80, top: 20, right: 10, bottom: 20 })\n    .brushOn(false)\n    .keyAccessor(a => a.key);\n\n  this.chart.legend(dc.legend());\n  this.chart.fadeDeselectedArea = utils.fadeDeselectedAreaOverride.bind(this);\n  this.chart.on(\"pretransition\", utils.handleBarSelection);\n\n  this.chart.on(\"filtered\", filterHandler.bind(this));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/dc/src/stacked-bar.js\n// module id = 15\n// module chunks = 0","export default {\n  protocol: \"https\",\n  host: \"metis.mapd.com\",\n  port: \"443\",\n  dbName: \"mapd\",\n  user: \"mapd\",\n  password: \"HyperInteractive\",\n  logging: true\n}\n\n\n\n// WEBPACK FOOTER //\n// ./examples/config.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport createDataNode from \"./create-data-node\";\nimport { createParser } from \"./parser/create-parser\";\nimport invariant from \"invariant\";\n\n/**\n * Creates a data graph instance. Must pass in a connector object that implements a query method.\n * @see {@link Graph} for further information.\n * @memberof API\n */\nexport default function createDataGraph(connector) {\n  invariant(typeof connector.query === \"function\", \"invalid connector\");\n\n  var context = {\n    connector: connector,\n    parser: createParser()\n  };\n\n  var childNodes = [];\n\n  /**\n   * An instance of a data graph. A data graph is basically a tree, where each\n   * node represents a\n   * @namespace Graph\n   */\n  var graphAPI = {\n    registerParser: registerParser,\n    children: children,\n    data: data\n  };\n\n  /**\n   * Registers a custom expression or transform parser. The `typeDef` argument\n   * must be a valid type definition and the `typeParser` argument must be a\n   * function that matches the type of an ExpressionParser or TransformParser\n   * @see {@link https://github.com/mapd/mapd-data-layer/tree/master/src/parser/createParser.js|createParser.js}\n   * @memberof Graph\n   * @inner\n   */\n  function registerParser(typeDef, typeParser) {\n    context.parser.registerParser(typeDef, typeParser);\n  }\n\n  /**\n   * Returns all child data node instances of the graph.\n   * @memberof Graph\n   * @inner\n   */\n  function children() {\n    return childNodes;\n  }\n\n  /**\n   * Creates a root data node instance. The source must be specific in the\n   * initial state. An example of a source, is a string pointing to a tables\n   * or an array of source transformations.\n   * @memberof Graph\n   * @inner\n   */\n  function data(state) {\n    var dataNode = createDataNode(context, typeof state === \"string\" || Array.isArray(state) ? { source: state, type: \"root\" } : _extends({}, state, { type: \"root\" }));\n    childNodes.push(dataNode);\n    return dataNode;\n  }\n\n  return graphAPI;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/create-data-graph.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport invariant from \"invariant\";\nimport { reduceToSQL } from \"./utils\";\n\nexport default function createDataNode(context) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var state = {\n    type: initialState.type || \"data\",\n    source: initialState.source,\n    transform: initialState.transform || [],\n    children: initialState.children || []\n  };\n\n  /**\n   * A node in the graph that represents a set of data transformations.\n   * @namespace Data\n   * @see {@link https://github.com/mapd/mapd-data-layer/tree/master/src/create-data-node.js|create-data-node.js}\n   */\n  var dataNodeAPI = {\n    getState: getState,\n    transform: transform,\n    toSQL: toSQL,\n    values: values,\n    data: data\n  };\n\n  /**\n   * Returns the state of the data node.\n   * @memberof Data\n   * @inner\n   */\n  function getState() {\n    return state;\n  }\n\n  /**\n   * Sets the transform state of the data node. Either takes in an array of\n   * transforms or a function that takes and returns an array of transforms\n   * @memberof Data\n   * @inner\n   */\n  function transform(setter) {\n    state.transform = typeof setter === \"function\" ? setter(state.transform) : setter;\n    return dataNodeAPI;\n  }\n\n  /**\n   * Returns the SQL string representation of the set of transforms from\n   * the node instance to its source root in the graph\n   * @memberof Data\n   * @inner\n   */\n  function toSQL() {\n    return context.parser.write(reduceToSQL(context, dataNodeAPI));\n  }\n\n  /**\n   * Uses the `connector` in the graph context to execute data node's\n   * SQL query representation and returns queried data as a promise.\n   * @memberof Data\n   * @inner\n   */\n  function values() {\n    return context.connector.query(context.parser.write(reduceToSQL(context, dataNodeAPI)));\n  }\n\n  /**\n   * Creates a data node instance and sets it as a child of the parent.\n   * @memberof Data\n   * @inner\n   */\n  function data(childState) {\n    var dataNode = createDataNode(context, _extends({}, childState, {\n      source: dataNodeAPI\n    }));\n    state.children.push(dataNode);\n    return dataNode;\n  }\n\n  return dataNodeAPI;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/create-data-node.js","\n\n/**\n * Creates an alias expression\n * @memberof Expression\n */\nexport function alias(as, expr) {\n  return {\n    expr: expr,\n    as: as\n  };\n}\n\n/**\n * Creates an average expression\n * @memberof Expression\n */\n\n/**\n * Expression builders. These are helper functions to create expression objects\n * @name expr\n * @memberof API\n * @see {@link Expression}\n */\n\n/**\n * Expression builder module.\n * @name Expression\n * @see {@link https://github.com/mapd/mapd-data-layer/tree/master/src/types/expression-type.js|Expression Types}\n */\nexport function avg(alias, field) {\n  return {\n    type: \"average\",\n    field: field,\n    as: alias\n  };\n}\n\n/**\n * creates a min expression\n * @memberof Expression\n */\nexport function min(alias, field) {\n  return {\n    type: \"min\",\n    field: field,\n    as: alias\n  };\n}\n\n/**\n * creates a max expression\n * @memberof Expression\n */\nexport function max(alias, field) {\n  return {\n    type: \"max\",\n    field: field,\n    as: alias\n  };\n}\n\n/**\n * creates a sum expression\n * @memberof Expression\n */\nexport function sum(alias, field) {\n  return {\n    type: \"sum\",\n    field: field,\n    as: alias\n  };\n}\n\n/**\n * creates a count expression\n * @memberof Expression\n */\nexport function count(distinct, alias, field) {\n  return {\n    type: \"count\",\n    distinct: distinct,\n    approx: false,\n    field: field,\n    as: alias\n  };\n}\n\n/**\n * creates an approx count expression\n * @memberof Expression\n */\nexport function approxCount(distinct, alias, field) {\n  return {\n    type: \"count\",\n    distinct: distinct,\n    approx: true,\n    field: field,\n    as: alias\n  };\n}\n\n/**\n * creates a count star expression\n * @memberof Expression\n */\nexport function countStar(alias) {\n  return {\n    type: \"count\",\n    distinct: false,\n    approx: false,\n    field: \"*\",\n    as: alias\n  };\n}\n\n/**\n * creates an extract function expression\n * @memberof Expression\n */\nexport function extract(unit, field) {\n  return {\n    type: \"extract\",\n    unit: unit,\n    field: field\n  };\n}\n\n/**\n * creates a date_trunc function expression\n * @memberof Expression\n */\nexport function dateTrunc(unit, field) {\n  return {\n    type: \"date_trunc\",\n    unit: unit,\n    field: field\n  };\n}\n\n/**\n * creates an in expression\n * @memberof Expression\n */\nexport function inExpr(expr, set) {\n  return {\n    type: \"in\",\n    expr: expr,\n    set: set\n  };\n}\n\n/**\n * Creates a not expression\n * @memberof Expression\n */\nexport function not(expr) {\n  return {\n    type: \"not\",\n    expr: expr\n  };\n}\n\n/**\n * Creates a case expression\n * @memberof Expression\n */\nexport function caseExpr(cond, end) {\n  return {\n    type: \"case\",\n    cond: cond,\n    else: end\n  };\n}\n\n/**\n * Creates a between expression\n * @memberof Expression\n */\nexport function between(field, range) {\n  return {\n    type: \"between\",\n    field: field,\n    left: range[0],\n    right: range[1]\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/helpers/expression-builders.js","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Creates a Project transform\n * @memberof Transform\n */\nexport function project(expr) {\n  // $FlowFixMe\n  return {\n    type: \"project\",\n    expr: typeof expr === \"string\" ? expr : expr.expr,\n    as: typeof expr === \"string\" ? null : expr.as\n  };\n}\n/**\n * Transform builders. These are helpers function to create transform objects.\n * @name rel\n * @memberof API\n * @see {@link #transform-1|Transform}\n */\n\n/**\n * Transsform builder module.\n * @name Transform\n * @see {@link https://github.com/mapd/mapd-data-layer/tree/master/src/types/transform-type.js|Transform Types}\n */\n\n\nfunction getAggs(agg) {\n  if (Array.isArray(agg)) {\n    return {\n      fields: agg.map(function (a) {\n        return a.field;\n      }),\n      ops: agg.map(function (a) {\n        return a.type;\n      }),\n      // $FlowFixMe\n      as: agg.map(function (a) {\n        return a.as;\n      })\n    };\n  } else {\n    return {\n      fields: [agg.field],\n      ops: [agg.type],\n      as: [agg.as || \"\"]\n    };\n  }\n}\n\nfunction getGroupBy(groupby) {\n  if (Array.isArray(groupby)) {\n    return groupby.map(function (group) {\n      if ((typeof group === \"undefined\" ? \"undefined\" : _typeof(group)) === \"object\") {\n        return {\n          type: \"project\",\n          expr: group.expr,\n          as: group.as\n        };\n      } else {\n        return group;\n      }\n    });\n  } else if ((typeof groupby === \"undefined\" ? \"undefined\" : _typeof(groupby)) === \"object\") {\n    return {\n      type: \"project\",\n      expr: groupby.expr,\n      as: groupby.as\n    };\n  } else {\n    return groupby;\n  }\n}\n\n/**\n * Creates an Aggregate transform\n * @memberof Transform\n */\nexport function aggregate(groupby, agg) {\n  var aggs = getAggs(agg);\n  var group = getGroupBy(groupby);\n  return {\n    type: \"aggregate\",\n    fields: aggs.fields,\n    ops: aggs.ops,\n    as: aggs.as,\n    groupby: group\n  };\n}\n\n/**\n * Creates an Filter transform\n * @memberof Transform\n */\nexport function filter(expr) {\n  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  return {\n    type: \"filter\",\n    id: id,\n    expr: expr\n  };\n}\n\n/**\n * Creates an Filter transform that uses a between expression\n * @memberof Transform\n */\nexport function filterRange(field, range) {\n  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  return {\n    type: \"filter\",\n    id: id,\n    expr: {\n      type: \"between\",\n      field: field,\n      left: range[0],\n      right: range[1]\n    }\n  };\n}\n\n/**\n * Creates an Filter transform that uses an in expression\n * @memberof Transform\n */\nexport function filterIn(field, set) {\n  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  return {\n    type: \"filter\",\n    id: id,\n    expr: {\n      type: \"in\",\n      expr: field,\n      set: set\n    }\n  };\n}\n\n/**\n * Creates a Bin tranform\n * @memberof Transform\n */\nexport function bin(alias, field, extent, maxbins) {\n  return {\n    type: \"bin\",\n    field: field,\n    extent: extent,\n    maxbins: maxbins,\n    as: alias\n  };\n}\n\n/**\n * Creates a Limit transform\n * @memberof Transform\n */\nexport function limit(row, offset) {\n  return {\n    type: \"limit\",\n    row: row,\n    offset: offset\n  };\n}\n\n/**\n * Creates a Sort transform\n * @memberof Transform\n */\nexport function sort(field, order) {\n  return {\n    type: \"sort\",\n    field: typeof field === \"string\" ? [field] : field,\n    order: typeof order === \"string\" ? [order] : order\n  };\n}\n\n/**\n * Creates a Sort transform ordered by descending and a Limit transform\n * @memberof Transform\n */\nexport function top(field, limit, offset) {\n  return [{\n    type: \"sort\",\n    field: [field],\n    order: [\"descending\"]\n  }, {\n    type: \"limit\",\n    row: limit,\n    offset: offset\n  }];\n}\n\n/**\n* Creates a Sort transform ordered by ascending and a Limit transform\n * @memberof Transform\n */\nexport function bottom(field, limit, offset) {\n  return [{\n    type: \"sort\",\n    field: [field],\n    order: [\"ascending\"]\n  }, {\n    type: \"limit\",\n    row: limit,\n    offset: offset\n  }];\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/helpers/transform-builders.js","/**\n * The exported `mapd-data-layer` module. Consists of a graph constructor and\n * helper functions to build expressions and transforms and to parse them\n * @namespace API\n */\n\nexport { createParser } from \"./parser/create-parser\";\nimport _createDataGraph from \"./create-data-graph\";\nexport { _createDataGraph as createDataGraph };\nimport * as _expr from \"./helpers/expression-builders\";\nexport { _expr as expr };\nimport * as _rel from \"./helpers/transform-builders\";\nexport { _rel as rel };\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/index.js","import Parser from \"./create-parser\";\n\nvar AGGREGATES = {\n  average: \"AVG\",\n  count: \"COUNT\",\n  min: \"MIN\",\n  max: \"MAX\",\n  sum: \"SUM\"\n};\n\nexport default function parseAggregate(sql, transform) {\n  var parser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Parser;\n\n  if (Array.isArray(transform.groupby)) {\n    transform.groupby.forEach(function (group) {\n      sql = parseGroupBy(sql, group, parser);\n    });\n  } else {\n    sql = parseGroupBy(sql, transform.groupby, parser);\n  }\n\n  transform.fields.forEach(function (field, index) {\n    var as = transform.as[index];\n    sql.select.push(aggregateField(transform.ops[index], field, as));\n  });\n\n  return sql;\n}\n\nfunction aggregateField(op, field, as) {\n  var str = \"\";\n  if (op === null) {\n    str += field;\n  } else if (AGGREGATES[op]) {\n    str += AGGREGATES[op] + \"(\" + field + \")\";\n  }\n  return str + (\"\" + (as ? \" as \" + as : \"\"));\n}\n\nfunction parseGroupBy(sql, groupby, parser) {\n  if (typeof groupby === \"string\") {\n    sql.select.push(groupby);\n    sql.groupby.push(groupby);\n  } else if (groupby.type === \"bin\") {\n    sql = parser.parseTransform(sql, groupby);\n    sql.groupby.push(groupby.as);\n  } else if (groupby.type === \"project\") {\n    sql.select.push(parser.parseExpression(groupby.expr) + (groupby.as ? \" as \" + groupby.as : \"\"));\n    if (groupby.as) {\n      sql.groupby.push(groupby.as);\n    }\n  }\n  return sql;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-aggregate.js","\n\nexport default function parseBin(sql, _ref) {\n  var field = _ref.field,\n      as = _ref.as,\n      extent = _ref.extent,\n      maxbins = _ref.maxbins;\n\n  sql.select.push(\"cast((cast(\" + field + \" as float) - \" + extent[0] + \") * \" + maxbins / (extent[1] - extent[0]) + \" as int) as \" + as);\n  sql.where.push(\"((\" + field + \" >= \" + extent[0] + \" AND \" + field + \" <= \" + extent[1] + \") OR (\" + field + \" IS NULL))\");\n  sql.having.push(\"(\" + as + \" >= 0 AND \" + as + \" < \" + maxbins + \" OR \" + as + \" IS NULL)\");\n  return sql;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-bin.js","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport Parser from \"./create-parser\";\nimport parseFilter from \"./parse-filter\";\n\nexport default function parseCrossfilter(sql, transform) {\n  var parser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Parser;\n\n  switch (transform.type) {\n    case \"crossfilter\":\n      if (_typeof(sql.unresolved) === \"object\") {\n        if (sql.unresolved.hasOwnProperty(transform.signal)) {\n          Object.keys(transform.filter).forEach(function (key) {\n            var filter = transform.filter[key];\n            if (sql.unresolved) {\n              var ignore = sql.unresolved[transform.signal].ignore;\n\n              if (Array.isArray(ignore) ? ignore.indexOf(key) === -1 : key !== ignore) {\n                parseFilter(sql, filter, parser);\n              }\n            }\n          });\n        }\n      }\n    default:\n      return sql;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-crossfilter.js","\n\nexport default function parseDataState(state, parser) {\n  var initialSQL = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    select: [],\n    from: \"\",\n    where: [],\n    groupby: [],\n    having: [],\n    orderby: [],\n    limit: \"\",\n    offset: \"\",\n    unresolved: {}\n  };\n\n  return state.transform.reduce(function (sql, t) {\n    return parser.parseTransform(sql, t);\n  }, {\n    select: initialSQL.select,\n    from: state.type === \"root\" ? typeof state.source === \"string\" ? state.source : parser.parseSource(state.source) : initialSQL.from,\n    where: initialSQL.where,\n    groupby: initialSQL.groupby,\n    having: initialSQL.having,\n    orderby: initialSQL.orderby,\n    limit: initialSQL.limit,\n    offset: initialSQL.offset,\n    unresolved: initialSQL.unresolved\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-datastate.js","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport Parser from \"./create-parser\";\n\nexport default function parseExpression(expression) {\n  var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Parser;\n\n  if (typeof expression === \"string\" || !(typeof expression === \"undefined\" ? \"undefined\" : _typeof(expression)) === \"object\") {\n    return expression;\n  }\n\n  switch (expression.type) {\n    case \"=\":\n    case \"<>\":\n    case \"<\":\n    case \">\":\n    case \"<=\":\n    case \">=\":\n      return expression.left + \" \" + expression.type + \" \" + (typeof expression.right === \"string\" ? \"'\" + expression.right + \"'\" : expression.right);\n    case \"between\":\n    case \"not between\":\n      return expression.field + \" \" + expression.type.toUpperCase() + \" \" + expression.left + \" AND \" + expression.right;\n    case \"is null\":\n    case \"is not null\":\n      return expression.field + \" \" + expression.type.toUpperCase();\n    case \"ilike\":\n    case \"like\":\n    case \"not like\":\n      return expression.left + \" \" + expression.type.toUpperCase() + \" \" + (\"'%\" + expression.right + \"%'\");\n    case \"coalesce\":\n      return \"COALESCE(\" + expression.values.map(function (field) {\n        return \"'\" + field + \"'\";\n      }).join(\", \") + \")\";\n    case \"in\":\n    case \"not in\":\n      if (Array.isArray(expression.set)) {\n        return expression.expr + \" \" + expression.type.toUpperCase() + \" (\" + expression.set.map(function (field) {\n          return typeof field === \"number\" ? field : \"'\" + field + \"'\";\n        }).join(\", \") + \")\";\n      } else if (_typeof(expression.set) === \"object\" && (expression.set.type === \"data\" || expression.set.type === \"root\")) {\n        return expression.expr + \" \" + expression.type.toUpperCase() + \" (\" + parser.writeSQL(expression.set) + \")\";\n      } else {\n        return expression;\n      }\n    case \"not\":\n      return \"NOT(\" + parseExpression(expression.expr) + \")\";\n    case \"and\":\n    case \"or\":\n      return \"(\" + parseExpression(expression.left) + \" \" + expression.type.toUpperCase() + \" \" + parseExpression(expression.right) + \")\";\n    case \"case\":\n      return \"CASE WHEN \" + expression.cond.map(function (cond) {\n        return parseExpression(cond[0]) + \" THEN \" + cond[1];\n      }).join(\" \") + \" ELSE '\" + expression.else + \"' END\";\n    case \"date_trunc\":\n      return \"date_trunc(\" + expression.unit + \", \" + expression.field + \")\";\n    case \"extract\":\n      return \"extract(\" + expression.unit + \" from \" + expression.field + \")\";\n    case \"root\":\n      return \"(\" + parser.writeSQL(expression) + \")\";\n    case \"count\":\n      if (expression.distinct && expression.approx) {\n        return \"approx_count_distinct(\" + expression.field + \")\";\n      } else if (expression.distinct) {\n        return \"count(distinct \" + expression.field + \" )\";\n      } else {\n        return \"count(\" + expression.field + \")\";\n      }\n    case \"stddev\":\n    case \"stddev_pop\":\n    case \"stddev_samp\":\n    case \"var_pop\":\n    case \"var_samp\":\n      return expression.type + \"(\" + expression.x + \")\";\n    case \"corr\":\n    case \"covar_pop\":\n    case \"covar_samp\":\n      return expression.type + \"(\" + expression.x + \", \" + expression.y + \")\";\n    case \"min\":\n    case \"max\":\n    case \"sum\":\n      return expression.type + \"(\" + expression.field + \")\";\n    case \"average\":\n      return \"avg(\" + expression.field + \")\";\n    default:\n      return expression;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-expression.js","\n\nexport default function parseLimit(sql, transform) {\n  sql.limit += transform.row;\n  sql.offset += transform.offset || sql.offset;\n  return sql;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-limit.js","import defaultParser from \"./create-parser\";\n\n\nexport default function parseProject(sql, transform) {\n  var parser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultParser;\n\n  sql.select.push(parser.parseExpression(transform.expr) + (transform.as ? \" as \" + transform.as : \"\"));\n  return sql;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-project.js","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default function parseResolvefilter(sql, transform) {\n  switch (transform.type) {\n    case \"resolvefilter\":\n      if (_typeof(sql.unresolved) === \"object\") {\n        sql.unresolved[transform.filter.signal] = transform;\n      } else {\n        sql.unresolved = _defineProperty({}, transform.filter.signal, transform);\n      }\n    default:\n      return sql;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-resolvefilter.js","\n\nvar GOLDEN_RATIO = 265445761;\n\nvar THIRTY_TWO_BITS = 4294967296;\n\nexport default function sample(sql, transform) {\n  /* istanbul ignore else */\n  if (transform.method === \"multiplicative\") {\n    var size = transform.size,\n        limit = transform.limit;\n\n    var ratio = Math.min(limit / size, 1.0);\n    if (ratio < 1) {\n      var threshold = Math.floor(THIRTY_TWO_BITS * ratio);\n      sql.where.push(\"MOD(\" + sql.from + \".rowid * \" + GOLDEN_RATIO + \", \" + THIRTY_TWO_BITS + \") < \" + threshold);\n    }\n  }\n\n  return sql;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-sample.js","\n\nvar ORDERINGS = {\n  ascending: \"ASC\",\n  descending: \"DESC\"\n};\n\n\nexport default function parseSort(sql, transform) {\n  transform.field.forEach(function (field, index) {\n    sql.orderby.push(field + (Array.isArray(transform.order) ? \" \" + ORDERINGS[transform.order[index]] : \"\"));\n  });\n  return sql;\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-sort.js","import parseAggregate from \"./parse-aggregate\";\nimport parseBin from \"./parse-bin\";\nimport parseCrossfilter from \"./parse-crossfilter\";\nimport parseSort from \"./parse-sort\";\nimport parseLimit from \"./parse-limit\";\nimport parseFilter from \"./parse-filter\";\nimport parseProject from \"./parse-project\";\nimport parseResolvefilter from \"./parse-resolvefilter\";\nimport parseSample from \"./parse-sample\";\nimport parseSource from \"./parse-source\";\n\nexport default function parseTransform(sql, t, parser) {\n  switch (t.type) {\n    case \"aggregate\":\n      return parseAggregate(sql, t, parser);\n    case \"bin\":\n      return parseBin(sql, t);\n    case \"sort\":\n      return parseSort(sql, t);\n    case \"limit\":\n      return parseLimit(sql, t);\n    case \"filter\":\n      return parseFilter(sql, t, parser);\n    case \"project\":\n      return parseProject(sql, t, parser);\n    case \"sample\":\n      return parseSample(sql, t);\n    case \"resolvefilter\":\n      return parseResolvefilter(sql, t);\n    case \"crossfilter\":\n      return parseCrossfilter(sql, t);\n    /* istanbul ignore next */\n    default:\n      return sql;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/parse-transform.js","\n\nexport default function writeSQL(state, parser) {\n  return write(parser.parseDataState(state));\n}\n\n\nexport function write(sql) {\n  return writeSelect(sql.select) + writeFrom(sql.from) + writeWhere(sql.where) + writeGroupby(sql.groupby) + writeHaving(sql.having) + writeOrderBy(sql.orderby) + writeLimit(sql.limit) + writeOffset(sql.offset);\n}\n\nfunction writeSelect(select) {\n  return select.length ? \"SELECT \" + select.join(\", \") : \"SELECT *\";\n}\n\nfunction writeFrom(from) {\n  return \" FROM \" + from;\n}\n\nfunction writeWhere(where) {\n  return where.length ? \" WHERE \" + where.join(\" AND \") : \"\";\n}\n\nfunction writeGroupby(groupby) {\n  return groupby.length ? \" GROUP BY \" + groupby.join(\", \") : \"\";\n}\n\nfunction writeHaving(having) {\n  return having.length ? \" HAVING \" + having.join(\" AND \") : \"\";\n}\n\nfunction writeOrderBy(orderby) {\n  return orderby.length ? \" ORDER BY \" + orderby.join(\", \") : \"\";\n}\n\nfunction writeLimit(limit) {\n  return limit.length ? \" LIMIT \" + limit : \"\";\n}\n\nfunction writeOffset(offset) {\n  return offset.length ? \" OFFSET \" + offset : \"\";\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/parser/write-sql.js","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar identity = function identity(a) {\n  return a;\n};\n\n\nexport function traverse(node, iterator, xform, accum) {\n  accum = xform(accum, iterator(node));\n  var source = node.getState().source;\n  return (typeof source === \"undefined\" ? \"undefined\" : _typeof(source)) === \"object\" && !Array.isArray(source) ? traverse(source, iterator, xform, accum) : accum;\n}\n\nexport function reduceToSQL(context, node) {\n  var initialSQL = {\n    select: [],\n    from: \"\",\n    where: [],\n    groupby: [],\n    having: [],\n    orderby: [],\n    limit: \"\",\n    offset: \"\",\n    unresolved: {}\n  };\n\n  function toSQL(accum, rightNode) {\n    return context.parser.parseDataState(rightNode.getState(), accum);\n  }\n\n  return traverse(node, identity, toSQL, initialSQL);\n}\n\n\n// WEBPACK FOOTER //\n// ./packages/data-layer/es/utils.js","require(\"./lib/thrift.js\")\nrequire(\"./lib/mapd_types.js\")\nrequire(\"./lib/mapd.thrift.js\")\n\nwindow.TDatumEnum = {}\n\nfor (const key in TDatumType) {\n  if (TDatumType.hasOwnProperty(key)) {\n    window.TDatumEnum[TDatumType[key]] = key;\n  }\n}\n\nexport {default as Thrifty} from \"./src/thrifty\"\n\n\n\n// WEBPACK FOOTER //\n// ./packages/thrift-layer/index.js","export default {\n  get(target, methodName) {\n    const originalMethod = target[methodName];\n    return function(...args) {\n      const callback = args.pop();\n      if (typeof callback === \"function\") {\n        return originalMethod.call(target, ...args, result => {\n          if (result instanceof Thrift.TException) {\n            callback(result);\n          } else {\n            callback(null, result);\n          }\n        });\n      } else {\n        originalMethod.call(target, ...args, callback);\n      }\n    };\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/thrift-layer/src/client-proxy.js","import proxy from \"./client-proxy\";\nimport processQueryResults from \"./utils/process-query-results\";\nimport logQueryResults from \"./utils/log-query-results\";\n\nconst CLIENT_KEY = Symbol(\"CLIENT_KEY\");\nconst CONFIG_KEY = Symbol(\"CONFIG_KEY\");\nconst SESSION_KEY = Symbol(\"SESSION_KEY\");\nconst NONCE_KEY = Symbol(\"NONCE_KEY\");\nconst LOGGER_KEY = Symbol(\"LOGGER_KEY\")\n\nexport default class Thrifty {\n  constructor(config) {\n    const url = `${config.protocol}://${config.host}:${config.port}`;\n    const transport = new Thrift.Transport(url);\n    const protocol = new Thrift.Protocol(transport);\n    const client = new MapDClient(protocol);\n    this[NONCE_KEY] = 0;\n    this[CONFIG_KEY] = config;\n    this[CLIENT_KEY] = new Proxy(client, proxy);\n    this[LOGGER_KEY] = logQueryResults\n  }\n\n  get curNonce() {\n    return (this[NONCE_KEY]++).toString();\n  }\n\n  get config() {\n    return this[CONFIG_KEY];\n  }\n\n  get client() {\n    return this[CLIENT_KEY];\n  }\n\n  get session() {\n    return this[SESSION_KEY];\n  }\n\n  set logging (logging) {\n    this[CONFIG_KEY].logging = logging\n  }\n\n  set logger(logger) {\n    this[LOGGER_KEY] = logger\n  }\n\n  query = (\n    stmt,\n    options = {\n      id: null,\n      limit: -1,\n      columnar: true,\n      logging: this.logging\n    }\n  ) => {\n    return new Promise((resolve, reject) => {\n      this.client.sql_execute(\n        this.session,\n        stmt,\n        options.columnar,\n        this.curNonce,\n        options.limit,\n        (error, result) => {\n          if (error) {\n            reject(error);\n          } else {\n            if (this.config.logging) {\n              this[LOGGER_KEY](stmt, result)\n            }\n            resolve(processQueryResults(result));\n          }\n        }\n      );\n    });\n  };\n\n  connect = () => {\n    return new Promise((resolve, reject) => {\n      const { user, password, dbName } = this.config;\n      this.client.connect(user, password, dbName, (error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          this[SESSION_KEY] = result;\n          resolve(this);\n        }\n      });\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/thrift-layer/src/thrifty.js","export default function logQueryResults (query, result) {\n  console.log(\n    query,\n    \"- Execution Time:\",\n    result.execution_time_ms,\n    \" ms, Total Time:\",\n    result.total_time_ms + \"ms\"\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/thrift-layer/src/utils/log-query-results.js","// TDatumEnum global\n\nexport default function processQueryResults(\n  result,\n  options = {\n    eliminateNullRows: false,\n    returnTiming: false\n  }\n) {\n  const formattedResult = processColumnarResults(\n    result.row_set,\n    options.eliminateNullRows\n  );\n\n  formattedResult.timing = {\n    execution_time_ms: result.execution_time_ms,\n    total_time_ms: result.total_time_ms\n  };\n\n  return options.returnTiming ? formattedResult : formattedResult.results;\n}\n\nfunction processColumnarResults(data, eliminateNullRows) {\n  const formattedResult = { fields: [], results: [] };\n  const numCols = data.row_desc.length;\n  const numRows =\n    data.columns[0] !== undefined ? data.columns[0].nulls.length : 0;\n\n  formattedResult.fields = data.row_desc.map(field => {\n    return {\n      name: field.col_name,\n      type: TDatumEnum[field.col_type.type],\n      is_array: field.col_type.is_array\n    };\n  });\n\n  for (let r = 0; r < numRows; r++) {\n    if (eliminateNullRows) {\n      let rowHasNull = false;\n      for (let c = 0; c < numCols; c++) {\n        if (data.columns[c].nulls[r]) {\n          rowHasNull = true;\n          break;\n        }\n      }\n      if (rowHasNull) {\n        continue;\n      }\n    }\n    const row = {};\n    for (let c = 0; c < numCols; c++) {\n      const fieldName = formattedResult.fields[c].name;\n      const fieldType = formattedResult.fields[c].type;\n      const fieldIsArray = formattedResult.fields[c].is_array;\n      const isNull = data.columns[c].nulls[r];\n      if (isNull) {\n        // row[fieldName] = \"NULL\";\n        row[fieldName] = null;\n        continue;\n      }\n      if (fieldIsArray) {\n        row[fieldName] = [];\n        const arrayNumElems = data.columns[c].data.arr_col[r].nulls.length;\n        for (let e = 0; e < arrayNumElems; e++) {\n          if (data.columns[c].data.arr_col[r].nulls[e]) {\n            row[fieldName].push(\"NULL\");\n            continue;\n          }\n          switch (fieldType) {\n            case \"BOOL\":\n              row[fieldName].push(\n                data.columns[c].data.arr_col[r].data.int_col[e] ? true : false\n              );\n              break;\n            case \"SMALLINT\":\n            case \"INT\":\n            case \"BIGINT\":\n              row[fieldName].push(\n                data.columns[c].data.arr_col[r].data.int_col[e]\n              );\n              break;\n            case \"FLOAT\":\n            case \"DOUBLE\":\n            case \"DECIMAL\":\n              row[fieldName].push(\n                data.columns[c].data.arr_col[r].data.real_col[e]\n              );\n              break;\n            case \"STR\":\n              row[fieldName].push(\n                data.columns[c].data.arr_col[r].data.str_col[e]\n              );\n              break;\n            case \"TIME\":\n            case \"TIMESTAMP\":\n            case \"DATE\":\n              row[fieldName].push(\n                data.columns[c].data.arr_col[r].data.int_col[e] * 1000\n              );\n              break;\n            default:\n              break;\n          }\n        }\n      } else {\n        switch (fieldType) {\n          case \"BOOL\":\n            row[fieldName] = data.columns[c].data.int_col[r] ? true : false;\n            break;\n          case \"SMALLINT\":\n          case \"INT\":\n          case \"BIGINT\":\n            row[fieldName] = data.columns[c].data.int_col[r];\n            break;\n          case \"FLOAT\":\n          case \"DOUBLE\":\n          case \"DECIMAL\":\n            row[fieldName] = data.columns[c].data.real_col[r];\n            break;\n          case \"STR\":\n            row[fieldName] = data.columns[c].data.str_col[r];\n            break;\n          case \"TIME\":\n          case \"TIMESTAMP\":\n          case \"DATE\":\n            row[fieldName] = new Date(data.columns[c].data.int_col[r] * 1000);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    formattedResult.results.push(row);\n  }\n  return formattedResult;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/thrift-layer/src/utils/process-query-results.js","export {default as dispatch} from \"./src/dispatch\";\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/~/d3-dispatch/index.js","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/~/d3-dispatch/src/dispatch.js","// @flow\nlet CHART_ID_COUNTER = 0;\n\nexport interface DispatchType {\n  on(event: string, handler: Function): void,\n  call(event: string, context: any, value: any): void\n}\n\nexport interface ChartType<A, B, C> {\n  id: number,\n  node: A,\n  dispatch: B,\n  group: C,\n  on(...params: any): void,\n  data(): Promise<any>,\n  render(data: any): void,\n  doRender(data: any, updater: any): void,\n  redraw(data: any): void,\n  doRedraw(data: any, updater: any): void\n}\n\nexport default class Chart<A: HTMLElement, B: DispatchType, C: string>\n  implements ChartType<A, B, C> {\n  id: number;\n  node: A;\n  dispatch: B;\n  group: C;\n\n  constructor(node: A, dispatch: B, group: C) {\n    this.id = CHART_ID_COUNTER++;\n    this.node = node;\n    this.group = group;\n    this.dispatch = dispatch;\n    dispatch.call(\"setup\", this);\n  }\n\n  on = (event: string, handler: () => void) => {\n    this.dispatch.on(event, handler);\n  };\n\n  data(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  render = (data: any): void => {\n    this.dispatch.call(\"preRender\", this, data);\n    this.doRender(data, this.dispatch);\n    this.dispatch.call(\"postRender\", this, data);\n  };\n\n  doRender(data: any, updater: any): void {\n    return;\n  }\n\n  redraw = (data: any): void => {\n    this.dispatch.call(\"preRedraw\", this, data);\n    this.doRedraw(data, this.dispatch);\n    this.dispatch.call(\"postRedraw\", this, data);\n  };\n\n  doRedraw(data: any, updater: any): void {\n    return;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/src/chart.js","// @flow\nimport * as d3 from \"d3-dispatch\";\nimport DefaultRegistry from \"./registry\";\nimport DefaultRenderer from \"./renderer\";\nimport type { DispatchType } from \"./chart\";\nimport type { RegistryType } from \"./registry\";\n\nconst BASE_EVENTS = [\n  \"setup\",\n  \"remove\",\n  \"filter\",\n  \"filterAll\",\n  \"preRender\",\n  \"postRender\",\n  \"preRedraw\",\n  \"postRedraw\"\n];\n\nexport interface ViewType {\n  registry: RegistryType,\n  renderAll(group: string): Promise<any>,\n  redrawAll(group: string): Promise<any>\n}\n\nexport default function createView(\n  Registry: Class<DefaultRegistry> = DefaultRegistry,\n  Renderer: Class<DefaultRenderer> = DefaultRenderer\n): ViewType {\n  const registry = new Registry();\n  const renderer = new Renderer();\n\n  function redrawAll(group: string) {\n    return renderer.redrawAll(registry.list(group));\n  }\n\n  function renderAll(group: string) {\n    return renderer.renderAll(registry.list(group));\n  }\n\n  function filterAll(group: string) {\n    registry.list(group).forEach(chart => {\n      chart.dispatch.call(\"filterAll\", this);\n    });\n    redrawAll(group);\n  }\n\n  function dispatch(events = []) {\n    const listener = d3.dispatch(\n      ...Array.from(new Set([...BASE_EVENTS, ...events]))\n    );\n    listener.on(\"setup.register\", function setup() {\n      registry.register(this, this.group);\n    });\n    listener.on(\"remove.deregister\", function remove() {\n      registry.deregister(this, this.group);\n    });\n    listener.on(\"filter.redraw\", function filter() {\n      redrawAll(this.group);\n    });\n    return listener;\n  }\n\n  return {\n    dispatch,\n    registry,\n    renderAll,\n    redrawAll,\n    filterAll\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/view-layer/src/view.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 44\n// module chunks = 0","module.exports = \"!function() {\\n  var d3 = {\\n    version: \\\"3.5.17\\\"\\n  };\\n  var d3_arraySlice = [].slice, d3_array = function(list) {\\n    return d3_arraySlice.call(list);\\n  };\\n  var d3_document = this.document;\\n  function d3_documentElement(node) {\\n    return node && (node.ownerDocument || node.document || node).documentElement;\\n  }\\n  function d3_window(node) {\\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\\n  }\\n  if (d3_document) {\\n    try {\\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\\n    } catch (e) {\\n      d3_array = function(list) {\\n        var i = list.length, array = new Array(i);\\n        while (i--) array[i] = list[i];\\n        return array;\\n      };\\n    }\\n  }\\n  if (!Date.now) Date.now = function() {\\n    return +new Date();\\n  };\\n  if (d3_document) {\\n    try {\\n      d3_document.createElement(\\\"DIV\\\").style.setProperty(\\\"opacity\\\", 0, \\\"\\\");\\n    } catch (error) {\\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\\n      d3_element_prototype.setAttribute = function(name, value) {\\n        d3_element_setAttribute.call(this, name, value + \\\"\\\");\\n      };\\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\\n        d3_element_setAttributeNS.call(this, space, local, value + \\\"\\\");\\n      };\\n      d3_style_prototype.setProperty = function(name, value, priority) {\\n        d3_style_setProperty.call(this, name, value + \\\"\\\", priority);\\n      };\\n    }\\n  }\\n  d3.ascending = d3_ascending;\\n  function d3_ascending(a, b) {\\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n  }\\n  d3.descending = function(a, b) {\\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n  };\\n  d3.min = function(array, f) {\\n    var i = -1, n = array.length, a, b;\\n    if (arguments.length === 1) {\\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\\n    } else {\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\\n    }\\n    return a;\\n  };\\n  d3.max = function(array, f) {\\n    var i = -1, n = array.length, a, b;\\n    if (arguments.length === 1) {\\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\\n    } else {\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\\n        a = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\\n    }\\n    return a;\\n  };\\n  d3.extent = function(array, f) {\\n    var i = -1, n = array.length, a, b, c;\\n    if (arguments.length === 1) {\\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\\n        a = c = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = array[i]) != null) {\\n        if (a > b) a = b;\\n        if (c < b) c = b;\\n      }\\n    } else {\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\\n        a = c = b;\\n        break;\\n      }\\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\\n        if (a > b) a = b;\\n        if (c < b) c = b;\\n      }\\n    }\\n    return [ a, c ];\\n  };\\n  function d3_number(x) {\\n    return x === null ? NaN : +x;\\n  }\\n  function d3_numeric(x) {\\n    return !isNaN(x);\\n  }\\n  d3.sum = function(array, f) {\\n    var s = 0, n = array.length, a, i = -1;\\n    if (arguments.length === 1) {\\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\\n    } else {\\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\\n    }\\n    return s;\\n  };\\n  d3.mean = function(array, f) {\\n    var s = 0, n = array.length, a, i = -1, j = n;\\n    if (arguments.length === 1) {\\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\\n    } else {\\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\\n    }\\n    if (j) return s / j;\\n  };\\n  d3.quantile = function(values, p) {\\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\\n    return e ? v + e * (values[h] - v) : v;\\n  };\\n  d3.median = function(array, f) {\\n    var numbers = [], n = array.length, a, i = -1;\\n    if (arguments.length === 1) {\\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\\n    } else {\\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\\n    }\\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\\n  };\\n  d3.variance = function(array, f) {\\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\\n    if (arguments.length === 1) {\\n      while (++i < n) {\\n        if (d3_numeric(a = d3_number(array[i]))) {\\n          d = a - m;\\n          m += d / ++j;\\n          s += d * (a - m);\\n        }\\n      }\\n    } else {\\n      while (++i < n) {\\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\\n          d = a - m;\\n          m += d / ++j;\\n          s += d * (a - m);\\n        }\\n      }\\n    }\\n    if (j > 1) return s / (j - 1);\\n  };\\n  d3.deviation = function() {\\n    var v = d3.variance.apply(this, arguments);\\n    return v ? Math.sqrt(v) : v;\\n  };\\n  function d3_bisector(compare) {\\n    return {\\n      left: function(a, x, lo, hi) {\\n        if (arguments.length < 3) lo = 0;\\n        if (arguments.length < 4) hi = a.length;\\n        while (lo < hi) {\\n          var mid = lo + hi >>> 1;\\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\\n        }\\n        return lo;\\n      },\\n      right: function(a, x, lo, hi) {\\n        if (arguments.length < 3) lo = 0;\\n        if (arguments.length < 4) hi = a.length;\\n        while (lo < hi) {\\n          var mid = lo + hi >>> 1;\\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\\n        }\\n        return lo;\\n      }\\n    };\\n  }\\n  var d3_bisect = d3_bisector(d3_ascending);\\n  d3.bisectLeft = d3_bisect.left;\\n  d3.bisect = d3.bisectRight = d3_bisect.right;\\n  d3.bisector = function(f) {\\n    return d3_bisector(f.length === 1 ? function(d, x) {\\n      return d3_ascending(f(d), x);\\n    } : f);\\n  };\\n  d3.shuffle = function(array, i0, i1) {\\n    if ((m = arguments.length) < 3) {\\n      i1 = array.length;\\n      if (m < 2) i0 = 0;\\n    }\\n    var m = i1 - i0, t, i;\\n    while (m) {\\n      i = Math.random() * m-- | 0;\\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\\n    }\\n    return array;\\n  };\\n  d3.permute = function(array, indexes) {\\n    var i = indexes.length, permutes = new Array(i);\\n    while (i--) permutes[i] = array[indexes[i]];\\n    return permutes;\\n  };\\n  d3.pairs = function(array) {\\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\\n    return pairs;\\n  };\\n  d3.transpose = function(matrix) {\\n    if (!(n = matrix.length)) return [];\\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\\n        row[j] = matrix[j][i];\\n      }\\n    }\\n    return transpose;\\n  };\\n  function d3_transposeLength(d) {\\n    return d.length;\\n  }\\n  d3.zip = function() {\\n    return d3.transpose(arguments);\\n  };\\n  d3.keys = function(map) {\\n    var keys = [];\\n    for (var key in map) keys.push(key);\\n    return keys;\\n  };\\n  d3.values = function(map) {\\n    var values = [];\\n    for (var key in map) values.push(map[key]);\\n    return values;\\n  };\\n  d3.entries = function(map) {\\n    var entries = [];\\n    for (var key in map) entries.push({\\n      key: key,\\n      value: map[key]\\n    });\\n    return entries;\\n  };\\n  d3.merge = function(arrays) {\\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\\n    while (++i < n) j += arrays[i].length;\\n    merged = new Array(j);\\n    while (--n >= 0) {\\n      array = arrays[n];\\n      m = array.length;\\n      while (--m >= 0) {\\n        merged[--j] = array[m];\\n      }\\n    }\\n    return merged;\\n  };\\n  var abs = Math.abs;\\n  d3.range = function(start, stop, step) {\\n    if (arguments.length < 3) {\\n      step = 1;\\n      if (arguments.length < 2) {\\n        stop = start;\\n        start = 0;\\n      }\\n    }\\n    if ((stop - start) / step === Infinity) throw new Error(\\\"infinite range\\\");\\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\\n    start *= k, stop *= k, step *= k;\\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\\n    return range;\\n  };\\n  function d3_range_integerScale(x) {\\n    var k = 1;\\n    while (x * k % 1) k *= 10;\\n    return k;\\n  }\\n  function d3_class(ctor, properties) {\\n    for (var key in properties) {\\n      Object.defineProperty(ctor.prototype, key, {\\n        value: properties[key],\\n        enumerable: false\\n      });\\n    }\\n  }\\n  d3.map = function(object, f) {\\n    var map = new d3_Map();\\n    if (object instanceof d3_Map) {\\n      object.forEach(function(key, value) {\\n        map.set(key, value);\\n      });\\n    } else if (Array.isArray(object)) {\\n      var i = -1, n = object.length, o;\\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\\n    } else {\\n      for (var key in object) map.set(key, object[key]);\\n    }\\n    return map;\\n  };\\n  function d3_Map() {\\n    this._ = Object.create(null);\\n  }\\n  var d3_map_proto = \\\"__proto__\\\", d3_map_zero = \\\"\\\\x00\\\";\\n  d3_class(d3_Map, {\\n    has: d3_map_has,\\n    get: function(key) {\\n      return this._[d3_map_escape(key)];\\n    },\\n    set: function(key, value) {\\n      return this._[d3_map_escape(key)] = value;\\n    },\\n    remove: d3_map_remove,\\n    keys: d3_map_keys,\\n    values: function() {\\n      var values = [];\\n      for (var key in this._) values.push(this._[key]);\\n      return values;\\n    },\\n    entries: function() {\\n      var entries = [];\\n      for (var key in this._) entries.push({\\n        key: d3_map_unescape(key),\\n        value: this._[key]\\n      });\\n      return entries;\\n    },\\n    size: d3_map_size,\\n    empty: d3_map_empty,\\n    forEach: function(f) {\\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\\n    }\\n  });\\n  function d3_map_escape(key) {\\n    return (key += \\\"\\\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\\n  }\\n  function d3_map_unescape(key) {\\n    return (key += \\\"\\\")[0] === d3_map_zero ? key.slice(1) : key;\\n  }\\n  function d3_map_has(key) {\\n    return d3_map_escape(key) in this._;\\n  }\\n  function d3_map_remove(key) {\\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\\n  }\\n  function d3_map_keys() {\\n    var keys = [];\\n    for (var key in this._) keys.push(d3_map_unescape(key));\\n    return keys;\\n  }\\n  function d3_map_size() {\\n    var size = 0;\\n    for (var key in this._) ++size;\\n    return size;\\n  }\\n  function d3_map_empty() {\\n    for (var key in this._) return false;\\n    return true;\\n  }\\n  d3.nest = function() {\\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\\n    function map(mapType, array, depth) {\\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\\n      while (++i < n) {\\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\\n          values.push(object);\\n        } else {\\n          valuesByKey.set(keyValue, [ object ]);\\n        }\\n      }\\n      if (mapType) {\\n        object = mapType();\\n        setter = function(keyValue, values) {\\n          object.set(keyValue, map(mapType, values, depth));\\n        };\\n      } else {\\n        object = {};\\n        setter = function(keyValue, values) {\\n          object[keyValue] = map(mapType, values, depth);\\n        };\\n      }\\n      valuesByKey.forEach(setter);\\n      return object;\\n    }\\n    function entries(map, depth) {\\n      if (depth >= keys.length) return map;\\n      var array = [], sortKey = sortKeys[depth++];\\n      map.forEach(function(key, keyMap) {\\n        array.push({\\n          key: key,\\n          values: entries(keyMap, depth)\\n        });\\n      });\\n      return sortKey ? array.sort(function(a, b) {\\n        return sortKey(a.key, b.key);\\n      }) : array;\\n    }\\n    nest.map = function(array, mapType) {\\n      return map(mapType, array, 0);\\n    };\\n    nest.entries = function(array) {\\n      return entries(map(d3.map, array, 0), 0);\\n    };\\n    nest.key = function(d) {\\n      keys.push(d);\\n      return nest;\\n    };\\n    nest.sortKeys = function(order) {\\n      sortKeys[keys.length - 1] = order;\\n      return nest;\\n    };\\n    nest.sortValues = function(order) {\\n      sortValues = order;\\n      return nest;\\n    };\\n    nest.rollup = function(f) {\\n      rollup = f;\\n      return nest;\\n    };\\n    return nest;\\n  };\\n  d3.set = function(array) {\\n    var set = new d3_Set();\\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\\n    return set;\\n  };\\n  function d3_Set() {\\n    this._ = Object.create(null);\\n  }\\n  d3_class(d3_Set, {\\n    has: d3_map_has,\\n    add: function(key) {\\n      this._[d3_map_escape(key += \\\"\\\")] = true;\\n      return key;\\n    },\\n    remove: d3_map_remove,\\n    values: d3_map_keys,\\n    size: d3_map_size,\\n    empty: d3_map_empty,\\n    forEach: function(f) {\\n      for (var key in this._) f.call(this, d3_map_unescape(key));\\n    }\\n  });\\n  d3.behavior = {};\\n  function d3_identity(d) {\\n    return d;\\n  }\\n  d3.rebind = function(target, source) {\\n    var i = 1, n = arguments.length, method;\\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\\n    return target;\\n  };\\n  function d3_rebind(target, source, method) {\\n    return function() {\\n      var value = method.apply(source, arguments);\\n      return value === source ? target : value;\\n    };\\n  }\\n  function d3_vendorSymbol(object, name) {\\n    if (name in object) return name;\\n    name = name.charAt(0).toUpperCase() + name.slice(1);\\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\\n      var prefixName = d3_vendorPrefixes[i] + name;\\n      if (prefixName in object) return prefixName;\\n    }\\n  }\\n  var d3_vendorPrefixes = [ \\\"webkit\\\", \\\"ms\\\", \\\"moz\\\", \\\"Moz\\\", \\\"o\\\", \\\"O\\\" ];\\n  function d3_noop() {}\\n  d3.dispatch = function() {\\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\\n    return dispatch;\\n  };\\n  function d3_dispatch() {}\\n  d3_dispatch.prototype.on = function(type, listener) {\\n    var i = type.indexOf(\\\".\\\"), name = \\\"\\\";\\n    if (i >= 0) {\\n      name = type.slice(i + 1);\\n      type = type.slice(0, i);\\n    }\\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\\n    if (arguments.length === 2) {\\n      if (listener == null) for (type in this) {\\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\\n      }\\n      return this;\\n    }\\n  };\\n  function d3_dispatch_event(dispatch) {\\n    var listeners = [], listenerByName = new d3_Map();\\n    function event() {\\n      var z = listeners, i = -1, n = z.length, l;\\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\\n      return dispatch;\\n    }\\n    event.on = function(name, listener) {\\n      var l = listenerByName.get(name), i;\\n      if (arguments.length < 2) return l && l.on;\\n      if (l) {\\n        l.on = null;\\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\\n        listenerByName.remove(name);\\n      }\\n      if (listener) listeners.push(listenerByName.set(name, {\\n        on: listener\\n      }));\\n      return dispatch;\\n    };\\n    return event;\\n  }\\n  d3.event = null;\\n  function d3_eventPreventDefault() {\\n    d3.event.preventDefault();\\n  }\\n  function d3_eventSource() {\\n    var e = d3.event, s;\\n    while (s = e.sourceEvent) e = s;\\n    return e;\\n  }\\n  function d3_eventDispatch(target) {\\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\\n    dispatch.of = function(thiz, argumentz) {\\n      return function(e1) {\\n        try {\\n          var e0 = e1.sourceEvent = d3.event;\\n          e1.target = target;\\n          d3.event = e1;\\n          dispatch[e1.type].apply(thiz, argumentz);\\n        } finally {\\n          d3.event = e0;\\n        }\\n      };\\n    };\\n    return dispatch;\\n  }\\n  d3.requote = function(s) {\\n    return s.replace(d3_requote_re, \\\"\\\\\\\\$&\\\");\\n  };\\n  var d3_requote_re = /[\\\\\\\\\\\\^\\\\$\\\\*\\\\+\\\\?\\\\|\\\\[\\\\]\\\\(\\\\)\\\\.\\\\{\\\\}]/g;\\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\\n    object.__proto__ = prototype;\\n  } : function(object, prototype) {\\n    for (var property in prototype) object[property] = prototype[property];\\n  };\\n  function d3_selection(groups) {\\n    d3_subclass(groups, d3_selectionPrototype);\\n    return groups;\\n  }\\n  var d3_select = function(s, n) {\\n    return n.querySelector(s);\\n  }, d3_selectAll = function(s, n) {\\n    return n.querySelectorAll(s);\\n  }, d3_selectMatches = function(n, s) {\\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \\\"matchesSelector\\\")];\\n    d3_selectMatches = function(n, s) {\\n      return d3_selectMatcher.call(n, s);\\n    };\\n    return d3_selectMatches(n, s);\\n  };\\n  if (typeof Sizzle === \\\"function\\\") {\\n    d3_select = function(s, n) {\\n      return Sizzle(s, n)[0] || null;\\n    };\\n    d3_selectAll = Sizzle;\\n    d3_selectMatches = Sizzle.matchesSelector;\\n  }\\n  d3.selection = function() {\\n    return d3.select(d3_document.documentElement);\\n  };\\n  var d3_selectionPrototype = d3.selection.prototype = [];\\n  d3_selectionPrototype.select = function(selector) {\\n    var subgroups = [], subgroup, subnode, group, node;\\n    selector = d3_selection_selector(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      subgroups.push(subgroup = []);\\n      subgroup.parentNode = (group = this[j]).parentNode;\\n      for (var i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\\n          if (subnode && \\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        } else {\\n          subgroup.push(null);\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  function d3_selection_selector(selector) {\\n    return typeof selector === \\\"function\\\" ? selector : function() {\\n      return d3_select(selector, this);\\n    };\\n  }\\n  d3_selectionPrototype.selectAll = function(selector) {\\n    var subgroups = [], subgroup, node;\\n    selector = d3_selection_selectorAll(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\\n          subgroup.parentNode = node;\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  function d3_selection_selectorAll(selector) {\\n    return typeof selector === \\\"function\\\" ? selector : function() {\\n      return d3_selectAll(selector, this);\\n    };\\n  }\\n  var d3_nsXhtml = \\\"http://www.w3.org/1999/xhtml\\\";\\n  var d3_nsPrefix = {\\n    svg: \\\"http://www.w3.org/2000/svg\\\",\\n    xhtml: d3_nsXhtml,\\n    xlink: \\\"http://www.w3.org/1999/xlink\\\",\\n    xml: \\\"http://www.w3.org/XML/1998/namespace\\\",\\n    xmlns: \\\"http://www.w3.org/2000/xmlns/\\\"\\n  };\\n  d3.ns = {\\n    prefix: d3_nsPrefix,\\n    qualify: function(name) {\\n      var i = name.indexOf(\\\":\\\"), prefix = name;\\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \\\"xmlns\\\") name = name.slice(i + 1);\\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\\n        space: d3_nsPrefix[prefix],\\n        local: name\\n      } : name;\\n    }\\n  };\\n  d3_selectionPrototype.attr = function(name, value) {\\n    if (arguments.length < 2) {\\n      if (typeof name === \\\"string\\\") {\\n        var node = this.node();\\n        name = d3.ns.qualify(name);\\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\\n      }\\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\\n      return this;\\n    }\\n    return this.each(d3_selection_attr(name, value));\\n  };\\n  function d3_selection_attr(name, value) {\\n    name = d3.ns.qualify(name);\\n    function attrNull() {\\n      this.removeAttribute(name);\\n    }\\n    function attrNullNS() {\\n      this.removeAttributeNS(name.space, name.local);\\n    }\\n    function attrConstant() {\\n      this.setAttribute(name, value);\\n    }\\n    function attrConstantNS() {\\n      this.setAttributeNS(name.space, name.local, value);\\n    }\\n    function attrFunction() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\\n    }\\n    function attrFunctionNS() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\\n    }\\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \\\"function\\\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\\n  }\\n  function d3_collapse(s) {\\n    return s.trim().replace(/\\\\s+/g, \\\" \\\");\\n  }\\n  d3_selectionPrototype.classed = function(name, value) {\\n    if (arguments.length < 2) {\\n      if (typeof name === \\\"string\\\") {\\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\\n        if (value = node.classList) {\\n          while (++i < n) if (!value.contains(name[i])) return false;\\n        } else {\\n          value = node.getAttribute(\\\"class\\\");\\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\\n        }\\n        return true;\\n      }\\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\\n      return this;\\n    }\\n    return this.each(d3_selection_classed(name, value));\\n  };\\n  function d3_selection_classedRe(name) {\\n    return new RegExp(\\\"(?:^|\\\\\\\\s+)\\\" + d3.requote(name) + \\\"(?:\\\\\\\\s+|$)\\\", \\\"g\\\");\\n  }\\n  function d3_selection_classes(name) {\\n    return (name + \\\"\\\").trim().split(/^|\\\\s+/);\\n  }\\n  function d3_selection_classed(name, value) {\\n    name = d3_selection_classes(name).map(d3_selection_classedName);\\n    var n = name.length;\\n    function classedConstant() {\\n      var i = -1;\\n      while (++i < n) name[i](this, value);\\n    }\\n    function classedFunction() {\\n      var i = -1, x = value.apply(this, arguments);\\n      while (++i < n) name[i](this, x);\\n    }\\n    return typeof value === \\\"function\\\" ? classedFunction : classedConstant;\\n  }\\n  function d3_selection_classedName(name) {\\n    var re = d3_selection_classedRe(name);\\n    return function(node, value) {\\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\\n      var c = node.getAttribute(\\\"class\\\") || \\\"\\\";\\n      if (value) {\\n        re.lastIndex = 0;\\n        if (!re.test(c)) node.setAttribute(\\\"class\\\", d3_collapse(c + \\\" \\\" + name));\\n      } else {\\n        node.setAttribute(\\\"class\\\", d3_collapse(c.replace(re, \\\" \\\")));\\n      }\\n    };\\n  }\\n  d3_selectionPrototype.style = function(name, value, priority) {\\n    var n = arguments.length;\\n    if (n < 3) {\\n      if (typeof name !== \\\"string\\\") {\\n        if (n < 2) value = \\\"\\\";\\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\\n        return this;\\n      }\\n      if (n < 2) {\\n        var node = this.node();\\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\\n      }\\n      priority = \\\"\\\";\\n    }\\n    return this.each(d3_selection_style(name, value, priority));\\n  };\\n  function d3_selection_style(name, value, priority) {\\n    function styleNull() {\\n      this.style.removeProperty(name);\\n    }\\n    function styleConstant() {\\n      this.style.setProperty(name, value, priority);\\n    }\\n    function styleFunction() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\\n    }\\n    return value == null ? styleNull : typeof value === \\\"function\\\" ? styleFunction : styleConstant;\\n  }\\n  d3_selectionPrototype.property = function(name, value) {\\n    if (arguments.length < 2) {\\n      if (typeof name === \\\"string\\\") return this.node()[name];\\n      for (value in name) this.each(d3_selection_property(value, name[value]));\\n      return this;\\n    }\\n    return this.each(d3_selection_property(name, value));\\n  };\\n  function d3_selection_property(name, value) {\\n    function propertyNull() {\\n      delete this[name];\\n    }\\n    function propertyConstant() {\\n      this[name] = value;\\n    }\\n    function propertyFunction() {\\n      var x = value.apply(this, arguments);\\n      if (x == null) delete this[name]; else this[name] = x;\\n    }\\n    return value == null ? propertyNull : typeof value === \\\"function\\\" ? propertyFunction : propertyConstant;\\n  }\\n  d3_selectionPrototype.text = function(value) {\\n    return arguments.length ? this.each(typeof value === \\\"function\\\" ? function() {\\n      var v = value.apply(this, arguments);\\n      this.textContent = v == null ? \\\"\\\" : v;\\n    } : value == null ? function() {\\n      this.textContent = \\\"\\\";\\n    } : function() {\\n      this.textContent = value;\\n    }) : this.node().textContent;\\n  };\\n  d3_selectionPrototype.html = function(value) {\\n    return arguments.length ? this.each(typeof value === \\\"function\\\" ? function() {\\n      var v = value.apply(this, arguments);\\n      this.innerHTML = v == null ? \\\"\\\" : v;\\n    } : value == null ? function() {\\n      this.innerHTML = \\\"\\\";\\n    } : function() {\\n      this.innerHTML = value;\\n    }) : this.node().innerHTML;\\n  };\\n  d3_selectionPrototype.append = function(name) {\\n    name = d3_selection_creator(name);\\n    return this.select(function() {\\n      return this.appendChild(name.apply(this, arguments));\\n    });\\n  };\\n  function d3_selection_creator(name) {\\n    function create() {\\n      var document = this.ownerDocument, namespace = this.namespaceURI;\\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\\n    }\\n    function createNS() {\\n      return this.ownerDocument.createElementNS(name.space, name.local);\\n    }\\n    return typeof name === \\\"function\\\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\\n  }\\n  d3_selectionPrototype.insert = function(name, before) {\\n    name = d3_selection_creator(name);\\n    before = d3_selection_selector(before);\\n    return this.select(function() {\\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\\n    });\\n  };\\n  d3_selectionPrototype.remove = function() {\\n    return this.each(d3_selectionRemove);\\n  };\\n  function d3_selectionRemove() {\\n    var parent = this.parentNode;\\n    if (parent) parent.removeChild(this);\\n  }\\n  d3_selectionPrototype.data = function(value, key) {\\n    var i = -1, n = this.length, group, node;\\n    if (!arguments.length) {\\n      value = new Array(n = (group = this[0]).length);\\n      while (++i < n) {\\n        if (node = group[i]) {\\n          value[i] = node.__data__;\\n        }\\n      }\\n      return value;\\n    }\\n    function bind(group, groupData) {\\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\\n      if (key) {\\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\\n        for (i = -1; ++i < n; ) {\\n          if (node = group[i]) {\\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\\n              exitNodes[i] = node;\\n            } else {\\n              nodeByKeyValue.set(keyValue, node);\\n            }\\n            keyValues[i] = keyValue;\\n          }\\n        }\\n        for (i = -1; ++i < m; ) {\\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\\n            enterNodes[i] = d3_selection_dataNode(nodeData);\\n          } else if (node !== true) {\\n            updateNodes[i] = node;\\n            node.__data__ = nodeData;\\n          }\\n          nodeByKeyValue.set(keyValue, true);\\n        }\\n        for (i = -1; ++i < n; ) {\\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\\n            exitNodes[i] = group[i];\\n          }\\n        }\\n      } else {\\n        for (i = -1; ++i < n0; ) {\\n          node = group[i];\\n          nodeData = groupData[i];\\n          if (node) {\\n            node.__data__ = nodeData;\\n            updateNodes[i] = node;\\n          } else {\\n            enterNodes[i] = d3_selection_dataNode(nodeData);\\n          }\\n        }\\n        for (;i < m; ++i) {\\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\\n        }\\n        for (;i < n; ++i) {\\n          exitNodes[i] = group[i];\\n        }\\n      }\\n      enterNodes.update = updateNodes;\\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\\n      enter.push(enterNodes);\\n      update.push(updateNodes);\\n      exit.push(exitNodes);\\n    }\\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\\n    if (typeof value === \\\"function\\\") {\\n      while (++i < n) {\\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\\n      }\\n    } else {\\n      while (++i < n) {\\n        bind(group = this[i], value);\\n      }\\n    }\\n    update.enter = function() {\\n      return enter;\\n    };\\n    update.exit = function() {\\n      return exit;\\n    };\\n    return update;\\n  };\\n  function d3_selection_dataNode(data) {\\n    return {\\n      __data__: data\\n    };\\n  }\\n  d3_selectionPrototype.datum = function(value) {\\n    return arguments.length ? this.property(\\\"__data__\\\", value) : this.property(\\\"__data__\\\");\\n  };\\n  d3_selectionPrototype.filter = function(filter) {\\n    var subgroups = [], subgroup, group, node;\\n    if (typeof filter !== \\\"function\\\") filter = d3_selection_filter(filter);\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      subgroups.push(subgroup = []);\\n      subgroup.parentNode = (group = this[j]).parentNode;\\n      for (var i = 0, n = group.length; i < n; i++) {\\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\\n          subgroup.push(node);\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  function d3_selection_filter(selector) {\\n    return function() {\\n      return d3_selectMatches(this, selector);\\n    };\\n  }\\n  d3_selectionPrototype.order = function() {\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\\n        if (node = group[i]) {\\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\\n          next = node;\\n        }\\n      }\\n    }\\n    return this;\\n  };\\n  d3_selectionPrototype.sort = function(comparator) {\\n    comparator = d3_selection_sortComparator.apply(this, arguments);\\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\\n    return this.order();\\n  };\\n  function d3_selection_sortComparator(comparator) {\\n    if (!arguments.length) comparator = d3_ascending;\\n    return function(a, b) {\\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\\n    };\\n  }\\n  d3_selectionPrototype.each = function(callback) {\\n    return d3_selection_each(this, function(node, i, j) {\\n      callback.call(node, node.__data__, i, j);\\n    });\\n  };\\n  function d3_selection_each(groups, callback) {\\n    for (var j = 0, m = groups.length; j < m; j++) {\\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\\n        if (node = group[i]) callback(node, i, j);\\n      }\\n    }\\n    return groups;\\n  }\\n  d3_selectionPrototype.call = function(callback) {\\n    var args = d3_array(arguments);\\n    callback.apply(args[0] = this, args);\\n    return this;\\n  };\\n  d3_selectionPrototype.empty = function() {\\n    return !this.node();\\n  };\\n  d3_selectionPrototype.node = function() {\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\\n        var node = group[i];\\n        if (node) return node;\\n      }\\n    }\\n    return null;\\n  };\\n  d3_selectionPrototype.size = function() {\\n    var n = 0;\\n    d3_selection_each(this, function() {\\n      ++n;\\n    });\\n    return n;\\n  };\\n  function d3_selection_enter(selection) {\\n    d3_subclass(selection, d3_selection_enterPrototype);\\n    return selection;\\n  }\\n  var d3_selection_enterPrototype = [];\\n  d3.selection.enter = d3_selection_enter;\\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\\n  d3_selection_enterPrototype.select = function(selector) {\\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      upgroup = (group = this[j]).update;\\n      subgroups.push(subgroup = []);\\n      subgroup.parentNode = group.parentNode;\\n      for (var i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\\n          subnode.__data__ = node.__data__;\\n        } else {\\n          subgroup.push(null);\\n        }\\n      }\\n    }\\n    return d3_selection(subgroups);\\n  };\\n  d3_selection_enterPrototype.insert = function(name, before) {\\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\\n    return d3_selectionPrototype.insert.call(this, name, before);\\n  };\\n  function d3_selection_enterInsertBefore(enter) {\\n    var i0, j0;\\n    return function(d, i, j) {\\n      var group = enter[j].update, n = group.length, node;\\n      if (j != j0) j0 = j, i0 = 0;\\n      if (i >= i0) i0 = i + 1;\\n      while (!(node = group[i0]) && ++i0 < n) ;\\n      return node;\\n    };\\n  }\\n  d3.select = function(node) {\\n    var group;\\n    if (typeof node === \\\"string\\\") {\\n      group = [ d3_select(node, d3_document) ];\\n      group.parentNode = d3_document.documentElement;\\n    } else {\\n      group = [ node ];\\n      group.parentNode = d3_documentElement(node);\\n    }\\n    return d3_selection([ group ]);\\n  };\\n  d3.selectAll = function(nodes) {\\n    var group;\\n    if (typeof nodes === \\\"string\\\") {\\n      group = d3_array(d3_selectAll(nodes, d3_document));\\n      group.parentNode = d3_document.documentElement;\\n    } else {\\n      group = d3_array(nodes);\\n      group.parentNode = null;\\n    }\\n    return d3_selection([ group ]);\\n  };\\n  d3_selectionPrototype.on = function(type, listener, capture) {\\n    var n = arguments.length;\\n    if (n < 3) {\\n      if (typeof type !== \\\"string\\\") {\\n        if (n < 2) listener = false;\\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\\n        return this;\\n      }\\n      if (n < 2) return (n = this.node()[\\\"__on\\\" + type]) && n._;\\n      capture = false;\\n    }\\n    return this.each(d3_selection_on(type, listener, capture));\\n  };\\n  function d3_selection_on(type, listener, capture) {\\n    var name = \\\"__on\\\" + type, i = type.indexOf(\\\".\\\"), wrap = d3_selection_onListener;\\n    if (i > 0) type = type.slice(0, i);\\n    var filter = d3_selection_onFilters.get(type);\\n    if (filter) type = filter, wrap = d3_selection_onFilter;\\n    function onRemove() {\\n      var l = this[name];\\n      if (l) {\\n        this.removeEventListener(type, l, l.$);\\n        delete this[name];\\n      }\\n    }\\n    function onAdd() {\\n      var l = wrap(listener, d3_array(arguments));\\n      onRemove.call(this);\\n      this.addEventListener(type, this[name] = l, l.$ = capture);\\n      l._ = listener;\\n    }\\n    function removeAll() {\\n      var re = new RegExp(\\\"^__on([^.]+)\\\" + d3.requote(type) + \\\"$\\\"), match;\\n      for (var name in this) {\\n        if (match = name.match(re)) {\\n          var l = this[name];\\n          this.removeEventListener(match[1], l, l.$);\\n          delete this[name];\\n        }\\n      }\\n    }\\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\\n  }\\n  var d3_selection_onFilters = d3.map({\\n    mouseenter: \\\"mouseover\\\",\\n    mouseleave: \\\"mouseout\\\"\\n  });\\n  if (d3_document) {\\n    d3_selection_onFilters.forEach(function(k) {\\n      if (\\\"on\\\" + k in d3_document) d3_selection_onFilters.remove(k);\\n    });\\n  }\\n  function d3_selection_onListener(listener, argumentz) {\\n    return function(e) {\\n      var o = d3.event;\\n      d3.event = e;\\n      argumentz[0] = this.__data__;\\n      try {\\n        listener.apply(this, argumentz);\\n      } finally {\\n        d3.event = o;\\n      }\\n    };\\n  }\\n  function d3_selection_onFilter(listener, argumentz) {\\n    var l = d3_selection_onListener(listener, argumentz);\\n    return function(e) {\\n      var target = this, related = e.relatedTarget;\\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\\n        l.call(target, e);\\n      }\\n    };\\n  }\\n  var d3_event_dragSelect, d3_event_dragId = 0;\\n  function d3_event_dragSuppress(node) {\\n    var name = \\\".dragsuppress-\\\" + ++d3_event_dragId, click = \\\"click\\\" + name, w = d3.select(d3_window(node)).on(\\\"touchmove\\\" + name, d3_eventPreventDefault).on(\\\"dragstart\\\" + name, d3_eventPreventDefault).on(\\\"selectstart\\\" + name, d3_eventPreventDefault);\\n    if (d3_event_dragSelect == null) {\\n      d3_event_dragSelect = \\\"onselectstart\\\" in node ? false : d3_vendorSymbol(node.style, \\\"userSelect\\\");\\n    }\\n    if (d3_event_dragSelect) {\\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\\n      style[d3_event_dragSelect] = \\\"none\\\";\\n    }\\n    return function(suppressClick) {\\n      w.on(name, null);\\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\\n      if (suppressClick) {\\n        var off = function() {\\n          w.on(click, null);\\n        };\\n        w.on(click, function() {\\n          d3_eventPreventDefault();\\n          off();\\n        }, true);\\n        setTimeout(off, 0);\\n      }\\n    };\\n  }\\n  d3.mouse = function(container) {\\n    return d3_mousePoint(container, d3_eventSource());\\n  };\\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\\n  function d3_mousePoint(container, e) {\\n    if (e.changedTouches) e = e.changedTouches[0];\\n    var svg = container.ownerSVGElement || container;\\n    if (svg.createSVGPoint) {\\n      var point = svg.createSVGPoint();\\n      if (d3_mouse_bug44083 < 0) {\\n        var window = d3_window(container);\\n        if (window.scrollX || window.scrollY) {\\n          svg = d3.select(\\\"body\\\").append(\\\"svg\\\").style({\\n            position: \\\"absolute\\\",\\n            top: 0,\\n            left: 0,\\n            margin: 0,\\n            padding: 0,\\n            border: \\\"none\\\"\\n          }, \\\"important\\\");\\n          var ctm = svg[0][0].getScreenCTM();\\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\\n          svg.remove();\\n        }\\n      }\\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \\n      point.y = e.clientY;\\n      point = point.matrixTransform(container.getScreenCTM().inverse());\\n      return [ point.x, point.y ];\\n    }\\n    var rect = container.getBoundingClientRect();\\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\\n  }\\n  d3.touch = function(container, touches, identifier) {\\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\\n      if ((touch = touches[i]).identifier === identifier) {\\n        return d3_mousePoint(container, touch);\\n      }\\n    }\\n  };\\n  d3.behavior.drag = function() {\\n    var event = d3_eventDispatch(drag, \\\"drag\\\", \\\"dragstart\\\", \\\"dragend\\\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \\\"mousemove\\\", \\\"mouseup\\\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \\\"touchmove\\\", \\\"touchend\\\");\\n    function drag() {\\n      this.on(\\\"mousedown.drag\\\", mousedown).on(\\\"touchstart.drag\\\", touchstart);\\n    }\\n    function dragstart(id, position, subject, move, end) {\\n      return function() {\\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \\\".drag\\\" + (dragId == null ? \\\"\\\" : \\\"-\\\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\\n        if (origin) {\\n          dragOffset = origin.apply(that, arguments);\\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\\n        } else {\\n          dragOffset = [ 0, 0 ];\\n        }\\n        dispatch({\\n          type: \\\"dragstart\\\"\\n        });\\n        function moved() {\\n          var position1 = position(parent, dragId), dx, dy;\\n          if (!position1) return;\\n          dx = position1[0] - position0[0];\\n          dy = position1[1] - position0[1];\\n          dragged |= dx | dy;\\n          position0 = position1;\\n          dispatch({\\n            type: \\\"drag\\\",\\n            x: position1[0] + dragOffset[0],\\n            y: position1[1] + dragOffset[1],\\n            dx: dx,\\n            dy: dy\\n          });\\n        }\\n        function ended() {\\n          if (!position(parent, dragId)) return;\\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\\n          dragRestore(dragged);\\n          dispatch({\\n            type: \\\"dragend\\\"\\n          });\\n        }\\n      };\\n    }\\n    drag.origin = function(x) {\\n      if (!arguments.length) return origin;\\n      origin = x;\\n      return drag;\\n    };\\n    return d3.rebind(drag, event, \\\"on\\\");\\n  };\\n  function d3_behavior_dragTouchId() {\\n    return d3.event.changedTouches[0].identifier;\\n  }\\n  d3.touches = function(container, touches) {\\n    if (arguments.length < 2) touches = d3_eventSource().touches;\\n    return touches ? d3_array(touches).map(function(touch) {\\n      var point = d3_mousePoint(container, touch);\\n      point.identifier = touch.identifier;\\n      return point;\\n    }) : [];\\n  };\\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\\n  function d3_sgn(x) {\\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\\n  }\\n  function d3_cross2d(a, b, c) {\\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\\n  }\\n  function d3_acos(x) {\\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\\n  }\\n  function d3_asin(x) {\\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\\n  }\\n  function d3_sinh(x) {\\n    return ((x = Math.exp(x)) - 1 / x) / 2;\\n  }\\n  function d3_cosh(x) {\\n    return ((x = Math.exp(x)) + 1 / x) / 2;\\n  }\\n  function d3_tanh(x) {\\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\\n  }\\n  function d3_haversin(x) {\\n    return (x = Math.sin(x / 2)) * x;\\n  }\\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\\n  d3.interpolateZoom = function(p0, p1) {\\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\\n    if (d2 < ε2) {\\n      S = Math.log(w1 / w0) / ρ;\\n      i = function(t) {\\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\\n      };\\n    } else {\\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\\n      S = (r1 - r0) / ρ;\\n      i = function(t) {\\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\\n      };\\n    }\\n    i.duration = S * 1e3;\\n    return i;\\n  };\\n  d3.behavior.zoom = function() {\\n    var view = {\\n      x: 0,\\n      y: 0,\\n      k: 1\\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \\\"mousedown.zoom\\\", mousemove = \\\"mousemove.zoom\\\", mouseup = \\\"mouseup.zoom\\\", mousewheelTimer, touchstart = \\\"touchstart.zoom\\\", touchtime, event = d3_eventDispatch(zoom, \\\"zoomstart\\\", \\\"zoom\\\", \\\"zoomend\\\"), x0, x1, y0, y1;\\n    if (!d3_behavior_zoomWheel) {\\n      d3_behavior_zoomWheel = \\\"onwheel\\\" in d3_document ? (d3_behavior_zoomDelta = function() {\\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\\n      }, \\\"wheel\\\") : \\\"onmousewheel\\\" in d3_document ? (d3_behavior_zoomDelta = function() {\\n        return d3.event.wheelDelta;\\n      }, \\\"mousewheel\\\") : (d3_behavior_zoomDelta = function() {\\n        return -d3.event.detail;\\n      }, \\\"MozMousePixelScroll\\\");\\n    }\\n    function zoom(g) {\\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \\\".zoom\\\", mousewheeled).on(\\\"dblclick.zoom\\\", dblclicked).on(touchstart, touchstarted);\\n    }\\n    zoom.event = function(g) {\\n      g.each(function() {\\n        var dispatch = event.of(this, arguments), view1 = view;\\n        if (d3_transitionInheritId) {\\n          d3.select(this).transition().each(\\\"start.zoom\\\", function() {\\n            view = this.__chart__ || {\\n              x: 0,\\n              y: 0,\\n              k: 1\\n            };\\n            zoomstarted(dispatch);\\n          }).tween(\\\"zoom:zoom\\\", function() {\\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\\n            return function(t) {\\n              var l = i(t), k = dx / l[2];\\n              this.__chart__ = view = {\\n                x: cx - l[0] * k,\\n                y: cy - l[1] * k,\\n                k: k\\n              };\\n              zoomed(dispatch);\\n            };\\n          }).each(\\\"interrupt.zoom\\\", function() {\\n            zoomended(dispatch);\\n          }).each(\\\"end.zoom\\\", function() {\\n            zoomended(dispatch);\\n          });\\n        } else {\\n          this.__chart__ = view;\\n          zoomstarted(dispatch);\\n          zoomed(dispatch);\\n          zoomended(dispatch);\\n        }\\n      });\\n    };\\n    zoom.translate = function(_) {\\n      if (!arguments.length) return [ view.x, view.y ];\\n      view = {\\n        x: +_[0],\\n        y: +_[1],\\n        k: view.k\\n      };\\n      rescale();\\n      return zoom;\\n    };\\n    zoom.scale = function(_) {\\n      if (!arguments.length) return view.k;\\n      view = {\\n        x: view.x,\\n        y: view.y,\\n        k: null\\n      };\\n      scaleTo(+_);\\n      rescale();\\n      return zoom;\\n    };\\n    zoom.scaleExtent = function(_) {\\n      if (!arguments.length) return scaleExtent;\\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\\n      return zoom;\\n    };\\n    zoom.center = function(_) {\\n      if (!arguments.length) return center;\\n      center = _ && [ +_[0], +_[1] ];\\n      return zoom;\\n    };\\n    zoom.size = function(_) {\\n      if (!arguments.length) return size;\\n      size = _ && [ +_[0], +_[1] ];\\n      return zoom;\\n    };\\n    zoom.duration = function(_) {\\n      if (!arguments.length) return duration;\\n      duration = +_;\\n      return zoom;\\n    };\\n    zoom.x = function(z) {\\n      if (!arguments.length) return x1;\\n      x1 = z;\\n      x0 = z.copy();\\n      view = {\\n        x: 0,\\n        y: 0,\\n        k: 1\\n      };\\n      return zoom;\\n    };\\n    zoom.y = function(z) {\\n      if (!arguments.length) return y1;\\n      y1 = z;\\n      y0 = z.copy();\\n      view = {\\n        x: 0,\\n        y: 0,\\n        k: 1\\n      };\\n      return zoom;\\n    };\\n    function location(p) {\\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\\n    }\\n    function point(l) {\\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\\n    }\\n    function scaleTo(s) {\\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\\n    }\\n    function translateTo(p, l) {\\n      l = point(l);\\n      view.x += p[0] - l[0];\\n      view.y += p[1] - l[1];\\n    }\\n    function zoomTo(that, p, l, k) {\\n      that.__chart__ = {\\n        x: view.x,\\n        y: view.y,\\n        k: view.k\\n      };\\n      scaleTo(Math.pow(2, k));\\n      translateTo(center0 = p, l);\\n      that = d3.select(that);\\n      if (duration > 0) that = that.transition().duration(duration);\\n      that.call(zoom.event);\\n    }\\n    function rescale() {\\n      if (x1) x1.domain(x0.range().map(function(x) {\\n        return (x - view.x) / view.k;\\n      }).map(x0.invert));\\n      if (y1) y1.domain(y0.range().map(function(y) {\\n        return (y - view.y) / view.k;\\n      }).map(y0.invert));\\n    }\\n    function zoomstarted(dispatch) {\\n      if (!zooming++) dispatch({\\n        type: \\\"zoomstart\\\"\\n      });\\n    }\\n    function zoomed(dispatch) {\\n      rescale();\\n      dispatch({\\n        type: \\\"zoom\\\",\\n        scale: view.k,\\n        translate: [ view.x, view.y ]\\n      });\\n    }\\n    function zoomended(dispatch) {\\n      if (!--zooming) dispatch({\\n        type: \\\"zoomend\\\"\\n      }), center0 = null;\\n    }\\n    function mousedowned() {\\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\\n      d3_selection_interrupt.call(that);\\n      zoomstarted(dispatch);\\n      function moved() {\\n        dragged = 1;\\n        translateTo(d3.mouse(that), location0);\\n        zoomed(dispatch);\\n      }\\n      function ended() {\\n        subject.on(mousemove, null).on(mouseup, null);\\n        dragRestore(dragged);\\n        zoomended(dispatch);\\n      }\\n    }\\n    function touchstarted() {\\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \\\".zoom-\\\" + d3.event.changedTouches[0].identifier, touchmove = \\\"touchmove\\\" + zoomName, touchend = \\\"touchend\\\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\\n      started();\\n      zoomstarted(dispatch);\\n      subject.on(mousedown, null).on(touchstart, started);\\n      function relocate() {\\n        var touches = d3.touches(that);\\n        scale0 = view.k;\\n        touches.forEach(function(t) {\\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\\n        });\\n        return touches;\\n      }\\n      function started() {\\n        var target = d3.event.target;\\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\\n        targets.push(target);\\n        var changed = d3.event.changedTouches;\\n        for (var i = 0, n = changed.length; i < n; ++i) {\\n          locations0[changed[i].identifier] = null;\\n        }\\n        var touches = relocate(), now = Date.now();\\n        if (touches.length === 1) {\\n          if (now - touchtime < 500) {\\n            var p = touches[0];\\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\\n            d3_eventPreventDefault();\\n          }\\n          touchtime = now;\\n        } else if (touches.length > 1) {\\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\\n          distance0 = dx * dx + dy * dy;\\n        }\\n      }\\n      function moved() {\\n        var touches = d3.touches(that), p0, l0, p1, l1;\\n        d3_selection_interrupt.call(that);\\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\\n          p1 = touches[i];\\n          if (l1 = locations0[p1.identifier]) {\\n            if (l0) break;\\n            p0 = p1, l0 = l1;\\n          }\\n        }\\n        if (l1) {\\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\\n          scaleTo(scale1 * scale0);\\n        }\\n        touchtime = null;\\n        translateTo(p0, l0);\\n        zoomed(dispatch);\\n      }\\n      function ended() {\\n        if (d3.event.touches.length) {\\n          var changed = d3.event.changedTouches;\\n          for (var i = 0, n = changed.length; i < n; ++i) {\\n            delete locations0[changed[i].identifier];\\n          }\\n          for (var identifier in locations0) {\\n            return void relocate();\\n          }\\n        }\\n        d3.selectAll(targets).on(zoomName, null);\\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\\n        dragRestore();\\n        zoomended(dispatch);\\n      }\\n    }\\n    function mousewheeled() {\\n      var dispatch = event.of(this, arguments);\\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \\n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\\n      mousewheelTimer = setTimeout(function() {\\n        mousewheelTimer = null;\\n        zoomended(dispatch);\\n      }, 50);\\n      d3_eventPreventDefault();\\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\\n      translateTo(center0, translate0);\\n      zoomed(dispatch);\\n    }\\n    function dblclicked() {\\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\\n    }\\n    return d3.rebind(zoom, event, \\\"on\\\");\\n  };\\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\\n  d3.color = d3_color;\\n  function d3_color() {}\\n  d3_color.prototype.toString = function() {\\n    return this.rgb() + \\\"\\\";\\n  };\\n  d3.hsl = d3_hsl;\\n  function d3_hsl(h, s, l) {\\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\\\"\\\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\\n  }\\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\\n  d3_hslPrototype.brighter = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    return new d3_hsl(this.h, this.s, this.l / k);\\n  };\\n  d3_hslPrototype.darker = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    return new d3_hsl(this.h, this.s, k * this.l);\\n  };\\n  d3_hslPrototype.rgb = function() {\\n    return d3_hsl_rgb(this.h, this.s, this.l);\\n  };\\n  function d3_hsl_rgb(h, s, l) {\\n    var m1, m2;\\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\\n    m1 = 2 * l - m2;\\n    function v(h) {\\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\\n      if (h < 180) return m2;\\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\\n      return m1;\\n    }\\n    function vv(h) {\\n      return Math.round(v(h) * 255);\\n    }\\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\\n  }\\n  d3.hcl = d3_hcl;\\n  function d3_hcl(h, c, l) {\\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\\n  }\\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\\n  d3_hclPrototype.brighter = function(k) {\\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\\n  };\\n  d3_hclPrototype.darker = function(k) {\\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\\n  };\\n  d3_hclPrototype.rgb = function() {\\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\\n  };\\n  function d3_hcl_lab(h, c, l) {\\n    if (isNaN(h)) h = 0;\\n    if (isNaN(c)) c = 0;\\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\\n  }\\n  d3.lab = d3_lab;\\n  function d3_lab(l, a, b) {\\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\\n  }\\n  var d3_lab_K = 18;\\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\\n  d3_labPrototype.brighter = function(k) {\\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\\n  };\\n  d3_labPrototype.darker = function(k) {\\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\\n  };\\n  d3_labPrototype.rgb = function() {\\n    return d3_lab_rgb(this.l, this.a, this.b);\\n  };\\n  function d3_lab_rgb(l, a, b) {\\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\\n    x = d3_lab_xyz(x) * d3_lab_X;\\n    y = d3_lab_xyz(y) * d3_lab_Y;\\n    z = d3_lab_xyz(z) * d3_lab_Z;\\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\\n  }\\n  function d3_lab_hcl(l, a, b) {\\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\\n  }\\n  function d3_lab_xyz(x) {\\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\\n  }\\n  function d3_xyz_lab(x) {\\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\\n  }\\n  function d3_xyz_rgb(r) {\\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\\n  }\\n  d3.rgb = d3_rgb;\\n  function d3_rgb(r, g, b) {\\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\\\"\\\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\\n  }\\n  function d3_rgbNumber(value) {\\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\\n  }\\n  function d3_rgbString(value) {\\n    return d3_rgbNumber(value) + \\\"\\\";\\n  }\\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\\n  d3_rgbPrototype.brighter = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    var r = this.r, g = this.g, b = this.b, i = 30;\\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\\n    if (r && r < i) r = i;\\n    if (g && g < i) g = i;\\n    if (b && b < i) b = i;\\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\\n  };\\n  d3_rgbPrototype.darker = function(k) {\\n    k = Math.pow(.7, arguments.length ? k : 1);\\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\\n  };\\n  d3_rgbPrototype.hsl = function() {\\n    return d3_rgb_hsl(this.r, this.g, this.b);\\n  };\\n  d3_rgbPrototype.toString = function() {\\n    return \\\"#\\\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\\n  };\\n  function d3_rgb_hex(v) {\\n    return v < 16 ? \\\"0\\\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\\n  }\\n  function d3_rgb_parse(format, rgb, hsl) {\\n    var r = 0, g = 0, b = 0, m1, m2, color;\\n    m1 = /([a-z]+)\\\\((.*)\\\\)/.exec(format = format.toLowerCase());\\n    if (m1) {\\n      m2 = m1[2].split(\\\",\\\");\\n      switch (m1[1]) {\\n       case \\\"hsl\\\":\\n        {\\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\\n        }\\n\\n       case \\\"rgb\\\":\\n        {\\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\\n        }\\n      }\\n    }\\n    if (color = d3_rgb_names.get(format)) {\\n      return rgb(color.r, color.g, color.b);\\n    }\\n    if (format != null && format.charAt(0) === \\\"#\\\" && !isNaN(color = parseInt(format.slice(1), 16))) {\\n      if (format.length === 4) {\\n        r = (color & 3840) >> 4;\\n        r = r >> 4 | r;\\n        g = color & 240;\\n        g = g >> 4 | g;\\n        b = color & 15;\\n        b = b << 4 | b;\\n      } else if (format.length === 7) {\\n        r = (color & 16711680) >> 16;\\n        g = (color & 65280) >> 8;\\n        b = color & 255;\\n      }\\n    }\\n    return rgb(r, g, b);\\n  }\\n  function d3_rgb_hsl(r, g, b) {\\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\\n    if (d) {\\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\\n      h *= 60;\\n    } else {\\n      h = NaN;\\n      s = l > 0 && l < 1 ? 0 : h;\\n    }\\n    return new d3_hsl(h, s, l);\\n  }\\n  function d3_rgb_lab(r, g, b) {\\n    r = d3_rgb_xyz(r);\\n    g = d3_rgb_xyz(g);\\n    b = d3_rgb_xyz(b);\\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\\n  }\\n  function d3_rgb_xyz(r) {\\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\\n  }\\n  function d3_rgb_parseNumber(c) {\\n    var f = parseFloat(c);\\n    return c.charAt(c.length - 1) === \\\"%\\\" ? Math.round(f * 2.55) : f;\\n  }\\n  var d3_rgb_names = d3.map({\\n    aliceblue: 15792383,\\n    antiquewhite: 16444375,\\n    aqua: 65535,\\n    aquamarine: 8388564,\\n    azure: 15794175,\\n    beige: 16119260,\\n    bisque: 16770244,\\n    black: 0,\\n    blanchedalmond: 16772045,\\n    blue: 255,\\n    blueviolet: 9055202,\\n    brown: 10824234,\\n    burlywood: 14596231,\\n    cadetblue: 6266528,\\n    chartreuse: 8388352,\\n    chocolate: 13789470,\\n    coral: 16744272,\\n    cornflowerblue: 6591981,\\n    cornsilk: 16775388,\\n    crimson: 14423100,\\n    cyan: 65535,\\n    darkblue: 139,\\n    darkcyan: 35723,\\n    darkgoldenrod: 12092939,\\n    darkgray: 11119017,\\n    darkgreen: 25600,\\n    darkgrey: 11119017,\\n    darkkhaki: 12433259,\\n    darkmagenta: 9109643,\\n    darkolivegreen: 5597999,\\n    darkorange: 16747520,\\n    darkorchid: 10040012,\\n    darkred: 9109504,\\n    darksalmon: 15308410,\\n    darkseagreen: 9419919,\\n    darkslateblue: 4734347,\\n    darkslategray: 3100495,\\n    darkslategrey: 3100495,\\n    darkturquoise: 52945,\\n    darkviolet: 9699539,\\n    deeppink: 16716947,\\n    deepskyblue: 49151,\\n    dimgray: 6908265,\\n    dimgrey: 6908265,\\n    dodgerblue: 2003199,\\n    firebrick: 11674146,\\n    floralwhite: 16775920,\\n    forestgreen: 2263842,\\n    fuchsia: 16711935,\\n    gainsboro: 14474460,\\n    ghostwhite: 16316671,\\n    gold: 16766720,\\n    goldenrod: 14329120,\\n    gray: 8421504,\\n    green: 32768,\\n    greenyellow: 11403055,\\n    grey: 8421504,\\n    honeydew: 15794160,\\n    hotpink: 16738740,\\n    indianred: 13458524,\\n    indigo: 4915330,\\n    ivory: 16777200,\\n    khaki: 15787660,\\n    lavender: 15132410,\\n    lavenderblush: 16773365,\\n    lawngreen: 8190976,\\n    lemonchiffon: 16775885,\\n    lightblue: 11393254,\\n    lightcoral: 15761536,\\n    lightcyan: 14745599,\\n    lightgoldenrodyellow: 16448210,\\n    lightgray: 13882323,\\n    lightgreen: 9498256,\\n    lightgrey: 13882323,\\n    lightpink: 16758465,\\n    lightsalmon: 16752762,\\n    lightseagreen: 2142890,\\n    lightskyblue: 8900346,\\n    lightslategray: 7833753,\\n    lightslategrey: 7833753,\\n    lightsteelblue: 11584734,\\n    lightyellow: 16777184,\\n    lime: 65280,\\n    limegreen: 3329330,\\n    linen: 16445670,\\n    magenta: 16711935,\\n    maroon: 8388608,\\n    mediumaquamarine: 6737322,\\n    mediumblue: 205,\\n    mediumorchid: 12211667,\\n    mediumpurple: 9662683,\\n    mediumseagreen: 3978097,\\n    mediumslateblue: 8087790,\\n    mediumspringgreen: 64154,\\n    mediumturquoise: 4772300,\\n    mediumvioletred: 13047173,\\n    midnightblue: 1644912,\\n    mintcream: 16121850,\\n    mistyrose: 16770273,\\n    moccasin: 16770229,\\n    navajowhite: 16768685,\\n    navy: 128,\\n    oldlace: 16643558,\\n    olive: 8421376,\\n    olivedrab: 7048739,\\n    orange: 16753920,\\n    orangered: 16729344,\\n    orchid: 14315734,\\n    palegoldenrod: 15657130,\\n    palegreen: 10025880,\\n    paleturquoise: 11529966,\\n    palevioletred: 14381203,\\n    papayawhip: 16773077,\\n    peachpuff: 16767673,\\n    peru: 13468991,\\n    pink: 16761035,\\n    plum: 14524637,\\n    powderblue: 11591910,\\n    purple: 8388736,\\n    rebeccapurple: 6697881,\\n    red: 16711680,\\n    rosybrown: 12357519,\\n    royalblue: 4286945,\\n    saddlebrown: 9127187,\\n    salmon: 16416882,\\n    sandybrown: 16032864,\\n    seagreen: 3050327,\\n    seashell: 16774638,\\n    sienna: 10506797,\\n    silver: 12632256,\\n    skyblue: 8900331,\\n    slateblue: 6970061,\\n    slategray: 7372944,\\n    slategrey: 7372944,\\n    snow: 16775930,\\n    springgreen: 65407,\\n    steelblue: 4620980,\\n    tan: 13808780,\\n    teal: 32896,\\n    thistle: 14204888,\\n    tomato: 16737095,\\n    turquoise: 4251856,\\n    violet: 15631086,\\n    wheat: 16113331,\\n    white: 16777215,\\n    whitesmoke: 16119285,\\n    yellow: 16776960,\\n    yellowgreen: 10145074\\n  });\\n  d3_rgb_names.forEach(function(key, value) {\\n    d3_rgb_names.set(key, d3_rgbNumber(value));\\n  });\\n  function d3_functor(v) {\\n    return typeof v === \\\"function\\\" ? v : function() {\\n      return v;\\n    };\\n  }\\n  d3.functor = d3_functor;\\n  d3.xhr = d3_xhrType(d3_identity);\\n  function d3_xhrType(response) {\\n    return function(url, mimeType, callback) {\\n      if (arguments.length === 2 && typeof mimeType === \\\"function\\\") callback = mimeType, \\n      mimeType = null;\\n      return d3_xhr(url, mimeType, response, callback);\\n    };\\n  }\\n  function d3_xhr(url, mimeType, response, callback) {\\n    var xhr = {}, dispatch = d3.dispatch(\\\"beforesend\\\", \\\"progress\\\", \\\"load\\\", \\\"error\\\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\\n    if (this.XDomainRequest && !(\\\"withCredentials\\\" in request) && /^(http(s)?:)?\\\\/\\\\//.test(url)) request = new XDomainRequest();\\n    \\\"onload\\\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\\n      request.readyState > 3 && respond();\\n    };\\n    function respond() {\\n      var status = request.status, result;\\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\\n        try {\\n          result = response.call(xhr, request);\\n        } catch (e) {\\n          dispatch.error.call(xhr, e);\\n          return;\\n        }\\n        dispatch.load.call(xhr, result);\\n      } else {\\n        dispatch.error.call(xhr, request);\\n      }\\n    }\\n    request.onprogress = function(event) {\\n      var o = d3.event;\\n      d3.event = event;\\n      try {\\n        dispatch.progress.call(xhr, request);\\n      } finally {\\n        d3.event = o;\\n      }\\n    };\\n    xhr.header = function(name, value) {\\n      name = (name + \\\"\\\").toLowerCase();\\n      if (arguments.length < 2) return headers[name];\\n      if (value == null) delete headers[name]; else headers[name] = value + \\\"\\\";\\n      return xhr;\\n    };\\n    xhr.mimeType = function(value) {\\n      if (!arguments.length) return mimeType;\\n      mimeType = value == null ? null : value + \\\"\\\";\\n      return xhr;\\n    };\\n    xhr.responseType = function(value) {\\n      if (!arguments.length) return responseType;\\n      responseType = value;\\n      return xhr;\\n    };\\n    xhr.response = function(value) {\\n      response = value;\\n      return xhr;\\n    };\\n    [ \\\"get\\\", \\\"post\\\" ].forEach(function(method) {\\n      xhr[method] = function() {\\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\\n      };\\n    });\\n    xhr.send = function(method, data, callback) {\\n      if (arguments.length === 2 && typeof data === \\\"function\\\") callback = data, data = null;\\n      request.open(method, url, true);\\n      if (mimeType != null && !(\\\"accept\\\" in headers)) headers[\\\"accept\\\"] = mimeType + \\\",*/*\\\";\\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\\n      if (responseType != null) request.responseType = responseType;\\n      if (callback != null) xhr.on(\\\"error\\\", callback).on(\\\"load\\\", function(request) {\\n        callback(null, request);\\n      });\\n      dispatch.beforesend.call(xhr, request);\\n      request.send(data == null ? null : data);\\n      return xhr;\\n    };\\n    xhr.abort = function() {\\n      request.abort();\\n      return xhr;\\n    };\\n    d3.rebind(xhr, dispatch, \\\"on\\\");\\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\\n  }\\n  function d3_xhr_fixCallback(callback) {\\n    return callback.length === 1 ? function(error, request) {\\n      callback(error == null ? request : null);\\n    } : callback;\\n  }\\n  function d3_xhrHasResponse(request) {\\n    var type = request.responseType;\\n    return type && type !== \\\"text\\\" ? request.response : request.responseText;\\n  }\\n  d3.dsv = function(delimiter, mimeType) {\\n    var reFormat = new RegExp('[\\\"' + delimiter + \\\"\\\\n]\\\"), delimiterCode = delimiter.charCodeAt(0);\\n    function dsv(url, row, callback) {\\n      if (arguments.length < 3) callback = row, row = null;\\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\\n      xhr.row = function(_) {\\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\\n      };\\n      return xhr;\\n    }\\n    function response(request) {\\n      return dsv.parse(request.responseText);\\n    }\\n    function typedResponse(f) {\\n      return function(request) {\\n        return dsv.parse(request.responseText, f);\\n      };\\n    }\\n    dsv.parse = function(text, f) {\\n      var o;\\n      return dsv.parseRows(text, function(row, i) {\\n        if (o) return o(row, i - 1);\\n        var a = new Function(\\\"d\\\", \\\"return {\\\" + row.map(function(name, i) {\\n          return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n        }).join(\\\",\\\") + \\\"}\\\");\\n        o = f ? function(row, i) {\\n          return f(a(row), i);\\n        } : a;\\n      });\\n    };\\n    dsv.parseRows = function(text, f) {\\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\\n      function token() {\\n        if (I >= N) return EOF;\\n        if (eol) return eol = false, EOL;\\n        var j = I;\\n        if (text.charCodeAt(j) === 34) {\\n          var i = j;\\n          while (i++ < N) {\\n            if (text.charCodeAt(i) === 34) {\\n              if (text.charCodeAt(i + 1) !== 34) break;\\n              ++i;\\n            }\\n          }\\n          I = i + 2;\\n          var c = text.charCodeAt(i + 1);\\n          if (c === 13) {\\n            eol = true;\\n            if (text.charCodeAt(i + 2) === 10) ++I;\\n          } else if (c === 10) {\\n            eol = true;\\n          }\\n          return text.slice(j + 1, i).replace(/\\\"\\\"/g, '\\\"');\\n        }\\n        while (I < N) {\\n          var c = text.charCodeAt(I++), k = 1;\\n          if (c === 10) eol = true; else if (c === 13) {\\n            eol = true;\\n            if (text.charCodeAt(I) === 10) ++I, ++k;\\n          } else if (c !== delimiterCode) continue;\\n          return text.slice(j, I - k);\\n        }\\n        return text.slice(j);\\n      }\\n      while ((t = token()) !== EOF) {\\n        var a = [];\\n        while (t !== EOL && t !== EOF) {\\n          a.push(t);\\n          t = token();\\n        }\\n        if (f && (a = f(a, n++)) == null) continue;\\n        rows.push(a);\\n      }\\n      return rows;\\n    };\\n    dsv.format = function(rows) {\\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\\n      var fieldSet = new d3_Set(), fields = [];\\n      rows.forEach(function(row) {\\n        for (var field in row) {\\n          if (!fieldSet.has(field)) {\\n            fields.push(fieldSet.add(field));\\n          }\\n        }\\n      });\\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\\n        return fields.map(function(field) {\\n          return formatValue(row[field]);\\n        }).join(delimiter);\\n      })).join(\\\"\\\\n\\\");\\n    };\\n    dsv.formatRows = function(rows) {\\n      return rows.map(formatRow).join(\\\"\\\\n\\\");\\n    };\\n    function formatRow(row) {\\n      return row.map(formatValue).join(delimiter);\\n    }\\n    function formatValue(text) {\\n      return reFormat.test(text) ? '\\\"' + text.replace(/\\\\\\\"/g, '\\\"\\\"') + '\\\"' : text;\\n    }\\n    return dsv;\\n  };\\n  d3.csv = d3.dsv(\\\",\\\", \\\"text/csv\\\");\\n  d3.tsv = d3.dsv(\\\"\\t\\\", \\\"text/tab-separated-values\\\");\\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \\\"requestAnimationFrame\\\")] || function(callback) {\\n    setTimeout(callback, 17);\\n  };\\n  d3.timer = function() {\\n    d3_timer.apply(this, arguments);\\n  };\\n  function d3_timer(callback, delay, then) {\\n    var n = arguments.length;\\n    if (n < 2) delay = 0;\\n    if (n < 3) then = Date.now();\\n    var time = then + delay, timer = {\\n      c: callback,\\n      t: time,\\n      n: null\\n    };\\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\\n    d3_timer_queueTail = timer;\\n    if (!d3_timer_interval) {\\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\\n      d3_timer_interval = 1;\\n      d3_timer_frame(d3_timer_step);\\n    }\\n    return timer;\\n  }\\n  function d3_timer_step() {\\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\\n    if (delay > 24) {\\n      if (isFinite(delay)) {\\n        clearTimeout(d3_timer_timeout);\\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\\n      }\\n      d3_timer_interval = 0;\\n    } else {\\n      d3_timer_interval = 1;\\n      d3_timer_frame(d3_timer_step);\\n    }\\n  }\\n  d3.timer.flush = function() {\\n    d3_timer_mark();\\n    d3_timer_sweep();\\n  };\\n  function d3_timer_mark() {\\n    var now = Date.now(), timer = d3_timer_queueHead;\\n    while (timer) {\\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\\n      timer = timer.n;\\n    }\\n    return now;\\n  }\\n  function d3_timer_sweep() {\\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\\n    while (t1) {\\n      if (t1.c) {\\n        if (t1.t < time) time = t1.t;\\n        t1 = (t0 = t1).n;\\n      } else {\\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\\n      }\\n    }\\n    d3_timer_queueTail = t0;\\n    return time;\\n  }\\n  function d3_format_precision(x, p) {\\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\\n  }\\n  d3.round = function(x, n) {\\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\\n  };\\n  var d3_formatPrefixes = [ \\\"y\\\", \\\"z\\\", \\\"a\\\", \\\"f\\\", \\\"p\\\", \\\"n\\\", \\\"µ\\\", \\\"m\\\", \\\"\\\", \\\"k\\\", \\\"M\\\", \\\"G\\\", \\\"T\\\", \\\"P\\\", \\\"E\\\", \\\"Z\\\", \\\"Y\\\" ].map(d3_formatPrefix);\\n  d3.formatPrefix = function(value, precision) {\\n    var i = 0;\\n    if (value = +value) {\\n      if (value < 0) value *= -1;\\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\\n    }\\n    return d3_formatPrefixes[8 + i / 3];\\n  };\\n  function d3_formatPrefix(d, i) {\\n    var k = Math.pow(10, abs(8 - i) * 3);\\n    return {\\n      scale: i > 8 ? function(d) {\\n        return d / k;\\n      } : function(d) {\\n        return d * k;\\n      },\\n      symbol: d\\n    };\\n  }\\n  function d3_locale_numberFormat(locale) {\\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\\n      while (i > 0 && g > 0) {\\n        if (length + g + 1 > width) g = Math.max(1, width - length);\\n        t.push(value.substring(i -= g, i + g));\\n        if ((length += g + 1) > width) break;\\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\\n      }\\n      return t.reverse().join(locale_thousands);\\n    } : d3_identity;\\n    return function(specifier) {\\n      var match = d3_format_re.exec(specifier), fill = match[1] || \\\" \\\", align = match[2] || \\\">\\\", sign = match[3] || \\\"-\\\", symbol = match[4] || \\\"\\\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \\\"\\\", suffix = \\\"\\\", integer = false, exponent = true;\\n      if (precision) precision = +precision.substring(1);\\n      if (zfill || fill === \\\"0\\\" && align === \\\"=\\\") {\\n        zfill = fill = \\\"0\\\";\\n        align = \\\"=\\\";\\n      }\\n      switch (type) {\\n       case \\\"n\\\":\\n        comma = true;\\n        type = \\\"g\\\";\\n        break;\\n\\n       case \\\"%\\\":\\n        scale = 100;\\n        suffix = \\\"%\\\";\\n        type = \\\"f\\\";\\n        break;\\n\\n       case \\\"p\\\":\\n        scale = 100;\\n        suffix = \\\"%\\\";\\n        type = \\\"r\\\";\\n        break;\\n\\n       case \\\"b\\\":\\n       case \\\"o\\\":\\n       case \\\"x\\\":\\n       case \\\"X\\\":\\n        if (symbol === \\\"#\\\") prefix = \\\"0\\\" + type.toLowerCase();\\n\\n       case \\\"c\\\":\\n        exponent = false;\\n\\n       case \\\"d\\\":\\n        integer = true;\\n        precision = 0;\\n        break;\\n\\n       case \\\"s\\\":\\n        scale = -1;\\n        type = \\\"r\\\";\\n        break;\\n      }\\n      if (symbol === \\\"$\\\") prefix = locale_currency[0], suffix = locale_currency[1];\\n      if (type == \\\"r\\\" && !precision) type = \\\"g\\\";\\n      if (precision != null) {\\n        if (type == \\\"g\\\") precision = Math.max(1, Math.min(21, precision)); else if (type == \\\"e\\\" || type == \\\"f\\\") precision = Math.max(0, Math.min(20, precision));\\n      }\\n      type = d3_format_types.get(type) || d3_format_typeDefault;\\n      var zcomma = zfill && comma;\\n      return function(value) {\\n        var fullSuffix = suffix;\\n        if (integer && value % 1) return \\\"\\\";\\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \\\"-\\\") : sign === \\\"-\\\" ? \\\"\\\" : sign;\\n        if (scale < 0) {\\n          var unit = d3.formatPrefix(value, precision);\\n          value = unit.scale(value);\\n          fullSuffix = unit.symbol + suffix;\\n        } else {\\n          value *= scale;\\n        }\\n        value = type(value, precision);\\n        var i = value.lastIndexOf(\\\".\\\"), before, after;\\n        if (i < 0) {\\n          var j = exponent ? value.lastIndexOf(\\\"e\\\") : -1;\\n          if (j < 0) before = value, after = \\\"\\\"; else before = value.substring(0, j), after = value.substring(j);\\n        } else {\\n          before = value.substring(0, i);\\n          after = locale_decimal + value.substring(i + 1);\\n        }\\n        if (!zfill && comma) before = formatGroup(before, Infinity);\\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \\\"\\\";\\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\\n        negative += prefix;\\n        value = before + after;\\n        return (align === \\\"<\\\" ? negative + value + padding : align === \\\">\\\" ? padding + negative + value : align === \\\"^\\\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\\n      };\\n    };\\n  }\\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\\\- ])?([$#])?(0)?(\\\\d+)?(,)?(\\\\.-?\\\\d+)?([a-z%])?/i;\\n  var d3_format_types = d3.map({\\n    b: function(x) {\\n      return x.toString(2);\\n    },\\n    c: function(x) {\\n      return String.fromCharCode(x);\\n    },\\n    o: function(x) {\\n      return x.toString(8);\\n    },\\n    x: function(x) {\\n      return x.toString(16);\\n    },\\n    X: function(x) {\\n      return x.toString(16).toUpperCase();\\n    },\\n    g: function(x, p) {\\n      return x.toPrecision(p);\\n    },\\n    e: function(x, p) {\\n      return x.toExponential(p);\\n    },\\n    f: function(x, p) {\\n      return x.toFixed(p);\\n    },\\n    r: function(x, p) {\\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\\n    }\\n  });\\n  function d3_format_typeDefault(x) {\\n    return x + \\\"\\\";\\n  }\\n  var d3_time = d3.time = {}, d3_date = Date;\\n  function d3_date_utc() {\\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\\n  }\\n  d3_date_utc.prototype = {\\n    getDate: function() {\\n      return this._.getUTCDate();\\n    },\\n    getDay: function() {\\n      return this._.getUTCDay();\\n    },\\n    getFullYear: function() {\\n      return this._.getUTCFullYear();\\n    },\\n    getHours: function() {\\n      return this._.getUTCHours();\\n    },\\n    getMilliseconds: function() {\\n      return this._.getUTCMilliseconds();\\n    },\\n    getMinutes: function() {\\n      return this._.getUTCMinutes();\\n    },\\n    getMonth: function() {\\n      return this._.getUTCMonth();\\n    },\\n    getSeconds: function() {\\n      return this._.getUTCSeconds();\\n    },\\n    getTime: function() {\\n      return this._.getTime();\\n    },\\n    getTimezoneOffset: function() {\\n      return 0;\\n    },\\n    valueOf: function() {\\n      return this._.valueOf();\\n    },\\n    setDate: function() {\\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\\n    },\\n    setDay: function() {\\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\\n    },\\n    setFullYear: function() {\\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\\n    },\\n    setHours: function() {\\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\\n    },\\n    setMilliseconds: function() {\\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\\n    },\\n    setMinutes: function() {\\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\\n    },\\n    setMonth: function() {\\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\\n    },\\n    setSeconds: function() {\\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\\n    },\\n    setTime: function() {\\n      d3_time_prototype.setTime.apply(this._, arguments);\\n    }\\n  };\\n  var d3_time_prototype = Date.prototype;\\n  function d3_time_interval(local, step, number) {\\n    function round(date) {\\n      var d0 = local(date), d1 = offset(d0, 1);\\n      return date - d0 < d1 - date ? d0 : d1;\\n    }\\n    function ceil(date) {\\n      step(date = local(new d3_date(date - 1)), 1);\\n      return date;\\n    }\\n    function offset(date, k) {\\n      step(date = new d3_date(+date), k);\\n      return date;\\n    }\\n    function range(t0, t1, dt) {\\n      var time = ceil(t0), times = [];\\n      if (dt > 1) {\\n        while (time < t1) {\\n          if (!(number(time) % dt)) times.push(new Date(+time));\\n          step(time, 1);\\n        }\\n      } else {\\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\\n      }\\n      return times;\\n    }\\n    function range_utc(t0, t1, dt) {\\n      try {\\n        d3_date = d3_date_utc;\\n        var utc = new d3_date_utc();\\n        utc._ = t0;\\n        return range(utc, t1, dt);\\n      } finally {\\n        d3_date = Date;\\n      }\\n    }\\n    local.floor = local;\\n    local.round = round;\\n    local.ceil = ceil;\\n    local.offset = offset;\\n    local.range = range;\\n    var utc = local.utc = d3_time_interval_utc(local);\\n    utc.floor = utc;\\n    utc.round = d3_time_interval_utc(round);\\n    utc.ceil = d3_time_interval_utc(ceil);\\n    utc.offset = d3_time_interval_utc(offset);\\n    utc.range = range_utc;\\n    return local;\\n  }\\n  function d3_time_interval_utc(method) {\\n    return function(date, k) {\\n      try {\\n        d3_date = d3_date_utc;\\n        var utc = new d3_date_utc();\\n        utc._ = date;\\n        return method(utc, k)._;\\n      } finally {\\n        d3_date = Date;\\n      }\\n    };\\n  }\\n  d3_time.year = d3_time_interval(function(date) {\\n    date = d3_time.day(date);\\n    date.setMonth(0, 1);\\n    return date;\\n  }, function(date, offset) {\\n    date.setFullYear(date.getFullYear() + offset);\\n  }, function(date) {\\n    return date.getFullYear();\\n  });\\n  d3_time.years = d3_time.year.range;\\n  d3_time.years.utc = d3_time.year.utc.range;\\n  d3_time.day = d3_time_interval(function(date) {\\n    var day = new d3_date(2e3, 0);\\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\\n    return day;\\n  }, function(date, offset) {\\n    date.setDate(date.getDate() + offset);\\n  }, function(date) {\\n    return date.getDate() - 1;\\n  });\\n  d3_time.days = d3_time.day.range;\\n  d3_time.days.utc = d3_time.day.utc.range;\\n  d3_time.dayOfYear = function(date) {\\n    var year = d3_time.year(date);\\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\\n  };\\n  [ \\\"sunday\\\", \\\"monday\\\", \\\"tuesday\\\", \\\"wednesday\\\", \\\"thursday\\\", \\\"friday\\\", \\\"saturday\\\" ].forEach(function(day, i) {\\n    i = 7 - i;\\n    var interval = d3_time[day] = d3_time_interval(function(date) {\\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\\n      return date;\\n    }, function(date, offset) {\\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\\n    }, function(date) {\\n      var day = d3_time.year(date).getDay();\\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\\n    });\\n    d3_time[day + \\\"s\\\"] = interval.range;\\n    d3_time[day + \\\"s\\\"].utc = interval.utc.range;\\n    d3_time[day + \\\"OfYear\\\"] = function(date) {\\n      var day = d3_time.year(date).getDay();\\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\\n    };\\n  });\\n  d3_time.week = d3_time.sunday;\\n  d3_time.weeks = d3_time.sunday.range;\\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\\n  d3_time.weekOfYear = d3_time.sundayOfYear;\\n  function d3_locale_timeFormat(locale) {\\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\\n    function d3_time_format(template) {\\n      var n = template.length;\\n      function format(date) {\\n        var string = [], i = -1, j = 0, c, p, f;\\n        while (++i < n) {\\n          if (template.charCodeAt(i) === 37) {\\n            string.push(template.slice(j, i));\\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \\\"e\\\" ? \\\" \\\" : \\\"0\\\" : p);\\n            string.push(c);\\n            j = i + 1;\\n          }\\n        }\\n        string.push(template.slice(j, i));\\n        return string.join(\\\"\\\");\\n      }\\n      format.parse = function(string) {\\n        var d = {\\n          y: 1900,\\n          m: 0,\\n          d: 1,\\n          H: 0,\\n          M: 0,\\n          S: 0,\\n          L: 0,\\n          Z: null\\n        }, i = d3_time_parse(d, template, string, 0);\\n        if (i != string.length) return null;\\n        if (\\\"p\\\" in d) d.H = d.H % 12 + d.p * 12;\\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\\n        if (\\\"j\\\" in d) date.setFullYear(d.y, 0, d.j); else if (\\\"W\\\" in d || \\\"U\\\" in d) {\\n          if (!(\\\"w\\\" in d)) d.w = \\\"W\\\" in d ? 1 : 0;\\n          date.setFullYear(d.y, 0, 1);\\n          date.setFullYear(d.y, 0, \\\"W\\\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\\n        } else date.setFullYear(d.y, d.m, d.d);\\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\\n        return localZ ? date._ : date;\\n      };\\n      format.toString = function() {\\n        return template;\\n      };\\n      return format;\\n    }\\n    function d3_time_parse(date, template, string, j) {\\n      var c, p, t, i = 0, n = template.length, m = string.length;\\n      while (i < n) {\\n        if (j >= m) return -1;\\n        c = template.charCodeAt(i++);\\n        if (c === 37) {\\n          t = template.charAt(i++);\\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\\n          if (!p || (j = p(date, string, j)) < 0) return -1;\\n        } else if (c != string.charCodeAt(j++)) {\\n          return -1;\\n        }\\n      }\\n      return j;\\n    }\\n    d3_time_format.utc = function(template) {\\n      var local = d3_time_format(template);\\n      function format(date) {\\n        try {\\n          d3_date = d3_date_utc;\\n          var utc = new d3_date();\\n          utc._ = date;\\n          return local(utc);\\n        } finally {\\n          d3_date = Date;\\n        }\\n      }\\n      format.parse = function(string) {\\n        try {\\n          d3_date = d3_date_utc;\\n          var date = local.parse(string);\\n          return date && date._;\\n        } finally {\\n          d3_date = Date;\\n        }\\n      };\\n      format.toString = local.toString;\\n      return format;\\n    };\\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\\n    locale_periods.forEach(function(p, i) {\\n      d3_time_periodLookup.set(p.toLowerCase(), i);\\n    });\\n    var d3_time_formats = {\\n      a: function(d) {\\n        return locale_shortDays[d.getDay()];\\n      },\\n      A: function(d) {\\n        return locale_days[d.getDay()];\\n      },\\n      b: function(d) {\\n        return locale_shortMonths[d.getMonth()];\\n      },\\n      B: function(d) {\\n        return locale_months[d.getMonth()];\\n      },\\n      c: d3_time_format(locale_dateTime),\\n      d: function(d, p) {\\n        return d3_time_formatPad(d.getDate(), p, 2);\\n      },\\n      e: function(d, p) {\\n        return d3_time_formatPad(d.getDate(), p, 2);\\n      },\\n      H: function(d, p) {\\n        return d3_time_formatPad(d.getHours(), p, 2);\\n      },\\n      I: function(d, p) {\\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\\n      },\\n      j: function(d, p) {\\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\\n      },\\n      L: function(d, p) {\\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\\n      },\\n      m: function(d, p) {\\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\\n      },\\n      M: function(d, p) {\\n        return d3_time_formatPad(d.getMinutes(), p, 2);\\n      },\\n      p: function(d) {\\n        return locale_periods[+(d.getHours() >= 12)];\\n      },\\n      S: function(d, p) {\\n        return d3_time_formatPad(d.getSeconds(), p, 2);\\n      },\\n      U: function(d, p) {\\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\\n      },\\n      w: function(d) {\\n        return d.getDay();\\n      },\\n      W: function(d, p) {\\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\\n      },\\n      x: d3_time_format(locale_date),\\n      X: d3_time_format(locale_time),\\n      y: function(d, p) {\\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\\n      },\\n      Y: function(d, p) {\\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\\n      },\\n      Z: d3_time_zone,\\n      \\\"%\\\": function() {\\n        return \\\"%\\\";\\n      }\\n    };\\n    var d3_time_parsers = {\\n      a: d3_time_parseWeekdayAbbrev,\\n      A: d3_time_parseWeekday,\\n      b: d3_time_parseMonthAbbrev,\\n      B: d3_time_parseMonth,\\n      c: d3_time_parseLocaleFull,\\n      d: d3_time_parseDay,\\n      e: d3_time_parseDay,\\n      H: d3_time_parseHour24,\\n      I: d3_time_parseHour24,\\n      j: d3_time_parseDayOfYear,\\n      L: d3_time_parseMilliseconds,\\n      m: d3_time_parseMonthNumber,\\n      M: d3_time_parseMinutes,\\n      p: d3_time_parseAmPm,\\n      S: d3_time_parseSeconds,\\n      U: d3_time_parseWeekNumberSunday,\\n      w: d3_time_parseWeekdayNumber,\\n      W: d3_time_parseWeekNumberMonday,\\n      x: d3_time_parseLocaleDate,\\n      X: d3_time_parseLocaleTime,\\n      y: d3_time_parseYear,\\n      Y: d3_time_parseFullYear,\\n      Z: d3_time_parseZone,\\n      \\\"%\\\": d3_time_parseLiteralPercent\\n    };\\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\\n      d3_time_dayAbbrevRe.lastIndex = 0;\\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseWeekday(date, string, i) {\\n      d3_time_dayRe.lastIndex = 0;\\n      var n = d3_time_dayRe.exec(string.slice(i));\\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseMonthAbbrev(date, string, i) {\\n      d3_time_monthAbbrevRe.lastIndex = 0;\\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseMonth(date, string, i) {\\n      d3_time_monthRe.lastIndex = 0;\\n      var n = d3_time_monthRe.exec(string.slice(i));\\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\\n    }\\n    function d3_time_parseLocaleFull(date, string, i) {\\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\\n    }\\n    function d3_time_parseLocaleDate(date, string, i) {\\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\\n    }\\n    function d3_time_parseLocaleTime(date, string, i) {\\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\\n    }\\n    function d3_time_parseAmPm(date, string, i) {\\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\\n      return n == null ? -1 : (date.p = n, i);\\n    }\\n    return d3_time_format;\\n  }\\n  var d3_time_formatPads = {\\n    \\\"-\\\": \\\"\\\",\\n    _: \\\" \\\",\\n    \\\"0\\\": \\\"0\\\"\\n  }, d3_time_numberRe = /^\\\\s*\\\\d+/, d3_time_percentRe = /^%/;\\n  function d3_time_formatPad(value, fill, width) {\\n    var sign = value < 0 ? \\\"-\\\" : \\\"\\\", string = (sign ? -value : value) + \\\"\\\", length = string.length;\\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\\n  }\\n  function d3_time_formatRe(names) {\\n    return new RegExp(\\\"^(?:\\\" + names.map(d3.requote).join(\\\"|\\\") + \\\")\\\", \\\"i\\\");\\n  }\\n  function d3_time_formatLookup(names) {\\n    var map = new d3_Map(), i = -1, n = names.length;\\n    while (++i < n) map.set(names[i].toLowerCase(), i);\\n    return map;\\n  }\\n  function d3_time_parseWeekdayNumber(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseWeekNumberSunday(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i));\\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseWeekNumberMonday(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i));\\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseFullYear(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseYear(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\\n  }\\n  function d3_time_parseZone(date, string, i) {\\n    return /^[+-]\\\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \\n    i + 5) : -1;\\n  }\\n  function d3_time_expandYear(d) {\\n    return d + (d > 68 ? 1900 : 2e3);\\n  }\\n  function d3_time_parseMonthNumber(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\\n  }\\n  function d3_time_parseDay(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseDayOfYear(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseHour24(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseMinutes(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseSeconds(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_parseMilliseconds(date, string, i) {\\n    d3_time_numberRe.lastIndex = 0;\\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\\n  }\\n  function d3_time_zone(d) {\\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \\\"-\\\" : \\\"+\\\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\\n    return zs + d3_time_formatPad(zh, \\\"0\\\", 2) + d3_time_formatPad(zm, \\\"0\\\", 2);\\n  }\\n  function d3_time_parseLiteralPercent(date, string, i) {\\n    d3_time_percentRe.lastIndex = 0;\\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\\n    return n ? i + n[0].length : -1;\\n  }\\n  function d3_time_formatMulti(formats) {\\n    var n = formats.length, i = -1;\\n    while (++i < n) formats[i][0] = this(formats[i][0]);\\n    return function(date) {\\n      var i = 0, f = formats[i];\\n      while (!f[1](date)) f = formats[++i];\\n      return f[0](date);\\n    };\\n  }\\n  d3.locale = function(locale) {\\n    return {\\n      numberFormat: d3_locale_numberFormat(locale),\\n      timeFormat: d3_locale_timeFormat(locale)\\n    };\\n  };\\n  var d3_locale_enUS = d3.locale({\\n    decimal: \\\".\\\",\\n    thousands: \\\",\\\",\\n    grouping: [ 3 ],\\n    currency: [ \\\"$\\\", \\\"\\\" ],\\n    dateTime: \\\"%a %b %e %X %Y\\\",\\n    date: \\\"%m/%d/%Y\\\",\\n    time: \\\"%H:%M:%S\\\",\\n    periods: [ \\\"AM\\\", \\\"PM\\\" ],\\n    days: [ \\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\" ],\\n    shortDays: [ \\\"Sun\\\", \\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\" ],\\n    months: [ \\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\" ],\\n    shortMonths: [ \\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\", \\\"Apr\\\", \\\"May\\\", \\\"Jun\\\", \\\"Jul\\\", \\\"Aug\\\", \\\"Sep\\\", \\\"Oct\\\", \\\"Nov\\\", \\\"Dec\\\" ]\\n  });\\n  d3.format = d3_locale_enUS.numberFormat;\\n  d3.geo = {};\\n  function d3_adder() {}\\n  d3_adder.prototype = {\\n    s: 0,\\n    t: 0,\\n    add: function(y) {\\n      d3_adderSum(y, this.t, d3_adderTemp);\\n      d3_adderSum(d3_adderTemp.s, this.s, this);\\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\\n    },\\n    reset: function() {\\n      this.s = this.t = 0;\\n    },\\n    valueOf: function() {\\n      return this.s;\\n    }\\n  };\\n  var d3_adderTemp = new d3_adder();\\n  function d3_adderSum(a, b, o) {\\n    var x = o.s = a + b, bv = x - a, av = x - bv;\\n    o.t = a - av + (b - bv);\\n  }\\n  d3.geo.stream = function(object, listener) {\\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\\n      d3_geo_streamObjectType[object.type](object, listener);\\n    } else {\\n      d3_geo_streamGeometry(object, listener);\\n    }\\n  };\\n  function d3_geo_streamGeometry(geometry, listener) {\\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\\n    }\\n  }\\n  var d3_geo_streamObjectType = {\\n    Feature: function(feature, listener) {\\n      d3_geo_streamGeometry(feature.geometry, listener);\\n    },\\n    FeatureCollection: function(object, listener) {\\n      var features = object.features, i = -1, n = features.length;\\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\\n    }\\n  };\\n  var d3_geo_streamGeometryType = {\\n    Sphere: function(object, listener) {\\n      listener.sphere();\\n    },\\n    Point: function(object, listener) {\\n      object = object.coordinates;\\n      listener.point(object[0], object[1], object[2]);\\n    },\\n    MultiPoint: function(object, listener) {\\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\\n    },\\n    LineString: function(object, listener) {\\n      d3_geo_streamLine(object.coordinates, listener, 0);\\n    },\\n    MultiLineString: function(object, listener) {\\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\\n    },\\n    Polygon: function(object, listener) {\\n      d3_geo_streamPolygon(object.coordinates, listener);\\n    },\\n    MultiPolygon: function(object, listener) {\\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\\n    },\\n    GeometryCollection: function(object, listener) {\\n      var geometries = object.geometries, i = -1, n = geometries.length;\\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\\n    }\\n  };\\n  function d3_geo_streamLine(coordinates, listener, closed) {\\n    var i = -1, n = coordinates.length - closed, coordinate;\\n    listener.lineStart();\\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\\n    listener.lineEnd();\\n  }\\n  function d3_geo_streamPolygon(coordinates, listener) {\\n    var i = -1, n = coordinates.length;\\n    listener.polygonStart();\\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\\n    listener.polygonEnd();\\n  }\\n  d3.geo.area = function(object) {\\n    d3_geo_areaSum = 0;\\n    d3.geo.stream(object, d3_geo_area);\\n    return d3_geo_areaSum;\\n  };\\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\\n  var d3_geo_area = {\\n    sphere: function() {\\n      d3_geo_areaSum += 4 * π;\\n    },\\n    point: d3_noop,\\n    lineStart: d3_noop,\\n    lineEnd: d3_noop,\\n    polygonStart: function() {\\n      d3_geo_areaRingSum.reset();\\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\\n    },\\n    polygonEnd: function() {\\n      var area = 2 * d3_geo_areaRingSum;\\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\\n    }\\n  };\\n  function d3_geo_areaRingStart() {\\n    var λ00, φ00, λ0, cosφ0, sinφ0;\\n    d3_geo_area.point = function(λ, φ) {\\n      d3_geo_area.point = nextPoint;\\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \\n      sinφ0 = Math.sin(φ);\\n    };\\n    function nextPoint(λ, φ) {\\n      λ *= d3_radians;\\n      φ = φ * d3_radians / 2 + π / 4;\\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\\n    }\\n    d3_geo_area.lineEnd = function() {\\n      nextPoint(λ00, φ00);\\n    };\\n  }\\n  function d3_geo_cartesian(spherical) {\\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\\n  }\\n  function d3_geo_cartesianDot(a, b) {\\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n  }\\n  function d3_geo_cartesianCross(a, b) {\\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\\n  }\\n  function d3_geo_cartesianAdd(a, b) {\\n    a[0] += b[0];\\n    a[1] += b[1];\\n    a[2] += b[2];\\n  }\\n  function d3_geo_cartesianScale(vector, k) {\\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\\n  }\\n  function d3_geo_cartesianNormalize(d) {\\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\\n    d[0] /= l;\\n    d[1] /= l;\\n    d[2] /= l;\\n  }\\n  function d3_geo_spherical(cartesian) {\\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\\n  }\\n  function d3_geo_sphericalEqual(a, b) {\\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\\n  }\\n  d3.geo.bounds = function() {\\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\\n    var bound = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        bound.point = ringPoint;\\n        bound.lineStart = ringStart;\\n        bound.lineEnd = ringEnd;\\n        dλSum = 0;\\n        d3_geo_area.polygonStart();\\n      },\\n      polygonEnd: function() {\\n        d3_geo_area.polygonEnd();\\n        bound.point = point;\\n        bound.lineStart = lineStart;\\n        bound.lineEnd = lineEnd;\\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\\n        range[0] = λ0, range[1] = λ1;\\n      }\\n    };\\n    function point(λ, φ) {\\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\\n      if (φ < φ0) φ0 = φ;\\n      if (φ > φ1) φ1 = φ;\\n    }\\n    function linePoint(λ, φ) {\\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\\n      if (p0) {\\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\\n        d3_geo_cartesianNormalize(inflection);\\n        inflection = d3_geo_spherical(inflection);\\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\\n          var φi = inflection[1] * d3_degrees;\\n          if (φi > φ1) φ1 = φi;\\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\\n          var φi = -inflection[1] * d3_degrees;\\n          if (φi < φ0) φ0 = φi;\\n        } else {\\n          if (φ < φ0) φ0 = φ;\\n          if (φ > φ1) φ1 = φ;\\n        }\\n        if (antimeridian) {\\n          if (λ < λ_) {\\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\\n          } else {\\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\\n          }\\n        } else {\\n          if (λ1 >= λ0) {\\n            if (λ < λ0) λ0 = λ;\\n            if (λ > λ1) λ1 = λ;\\n          } else {\\n            if (λ > λ_) {\\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\\n            } else {\\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\\n            }\\n          }\\n        }\\n      } else {\\n        point(λ, φ);\\n      }\\n      p0 = p, λ_ = λ;\\n    }\\n    function lineStart() {\\n      bound.point = linePoint;\\n    }\\n    function lineEnd() {\\n      range[0] = λ0, range[1] = λ1;\\n      bound.point = point;\\n      p0 = null;\\n    }\\n    function ringPoint(λ, φ) {\\n      if (p0) {\\n        var dλ = λ - λ_;\\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\\n      } else λ__ = λ, φ__ = φ;\\n      d3_geo_area.point(λ, φ);\\n      linePoint(λ, φ);\\n    }\\n    function ringStart() {\\n      d3_geo_area.lineStart();\\n    }\\n    function ringEnd() {\\n      ringPoint(λ__, φ__);\\n      d3_geo_area.lineEnd();\\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\\n      range[0] = λ0, range[1] = λ1;\\n      p0 = null;\\n    }\\n    function angle(λ0, λ1) {\\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\\n    }\\n    function compareRanges(a, b) {\\n      return a[0] - b[0];\\n    }\\n    function withinRange(x, range) {\\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\\n    }\\n    return function(feature) {\\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\\n      ranges = [];\\n      d3.geo.stream(feature, bound);\\n      var n = ranges.length;\\n      if (n) {\\n        ranges.sort(compareRanges);\\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\\n          b = ranges[i];\\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\\n          } else {\\n            merged.push(a = b);\\n          }\\n        }\\n        var best = -Infinity, dλ;\\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\\n          b = merged[i];\\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\\n        }\\n      }\\n      ranges = range = null;\\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\\n    };\\n  }();\\n  d3.geo.centroid = function(object) {\\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\\n    d3.geo.stream(object, d3_geo_centroid);\\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\\n    if (m < ε2) {\\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\\n      m = x * x + y * y + z * z;\\n      if (m < ε2) return [ NaN, NaN ];\\n    }\\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\\n  };\\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\\n  var d3_geo_centroid = {\\n    sphere: d3_noop,\\n    point: d3_geo_centroidPoint,\\n    lineStart: d3_geo_centroidLineStart,\\n    lineEnd: d3_geo_centroidLineEnd,\\n    polygonStart: function() {\\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\\n    },\\n    polygonEnd: function() {\\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\\n    }\\n  };\\n  function d3_geo_centroidPoint(λ, φ) {\\n    λ *= d3_radians;\\n    var cosφ = Math.cos(φ *= d3_radians);\\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\\n  }\\n  function d3_geo_centroidPointXYZ(x, y, z) {\\n    ++d3_geo_centroidW0;\\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\\n  }\\n  function d3_geo_centroidLineStart() {\\n    var x0, y0, z0;\\n    d3_geo_centroid.point = function(λ, φ) {\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians);\\n      x0 = cosφ * Math.cos(λ);\\n      y0 = cosφ * Math.sin(λ);\\n      z0 = Math.sin(φ);\\n      d3_geo_centroid.point = nextPoint;\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    };\\n    function nextPoint(λ, φ) {\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\\n      d3_geo_centroidW1 += w;\\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    }\\n  }\\n  function d3_geo_centroidLineEnd() {\\n    d3_geo_centroid.point = d3_geo_centroidPoint;\\n  }\\n  function d3_geo_centroidRingStart() {\\n    var λ00, φ00, x0, y0, z0;\\n    d3_geo_centroid.point = function(λ, φ) {\\n      λ00 = λ, φ00 = φ;\\n      d3_geo_centroid.point = nextPoint;\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians);\\n      x0 = cosφ * Math.cos(λ);\\n      y0 = cosφ * Math.sin(λ);\\n      z0 = Math.sin(φ);\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    };\\n    d3_geo_centroid.lineEnd = function() {\\n      nextPoint(λ00, φ00);\\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\\n      d3_geo_centroid.point = d3_geo_centroidPoint;\\n    };\\n    function nextPoint(λ, φ) {\\n      λ *= d3_radians;\\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\\n      d3_geo_centroidX2 += v * cx;\\n      d3_geo_centroidY2 += v * cy;\\n      d3_geo_centroidZ2 += v * cz;\\n      d3_geo_centroidW1 += w;\\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\\n      d3_geo_centroidPointXYZ(x0, y0, z0);\\n    }\\n  }\\n  function d3_geo_compose(a, b) {\\n    function compose(x, y) {\\n      return x = a(x, y), b(x[0], x[1]);\\n    }\\n    if (a.invert && b.invert) compose.invert = function(x, y) {\\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\\n    };\\n    return compose;\\n  }\\n  function d3_true() {\\n    return true;\\n  }\\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\\n    var subject = [], clip = [];\\n    segments.forEach(function(segment) {\\n      if ((n = segment.length - 1) <= 0) return;\\n      var n, p0 = segment[0], p1 = segment[n];\\n      if (d3_geo_sphericalEqual(p0, p1)) {\\n        listener.lineStart();\\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\\n        listener.lineEnd();\\n        return;\\n      }\\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\\n      a.o = b;\\n      subject.push(a);\\n      clip.push(b);\\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\\n      a.o = b;\\n      subject.push(a);\\n      clip.push(b);\\n    });\\n    clip.sort(compare);\\n    d3_geo_clipPolygonLinkCircular(subject);\\n    d3_geo_clipPolygonLinkCircular(clip);\\n    if (!subject.length) return;\\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\\n      clip[i].e = entry = !entry;\\n    }\\n    var start = subject[0], points, point;\\n    while (1) {\\n      var current = start, isSubject = true;\\n      while (current.v) if ((current = current.n) === start) return;\\n      points = current.z;\\n      listener.lineStart();\\n      do {\\n        current.v = current.o.v = true;\\n        if (current.e) {\\n          if (isSubject) {\\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\\n          } else {\\n            interpolate(current.x, current.n.x, 1, listener);\\n          }\\n          current = current.n;\\n        } else {\\n          if (isSubject) {\\n            points = current.p.z;\\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\\n          } else {\\n            interpolate(current.x, current.p.x, -1, listener);\\n          }\\n          current = current.p;\\n        }\\n        current = current.o;\\n        points = current.z;\\n        isSubject = !isSubject;\\n      } while (!current.v);\\n      listener.lineEnd();\\n    }\\n  }\\n  function d3_geo_clipPolygonLinkCircular(array) {\\n    if (!(n = array.length)) return;\\n    var n, i = 0, a = array[0], b;\\n    while (++i < n) {\\n      a.n = b = array[i];\\n      b.p = a;\\n      a = b;\\n    }\\n    a.n = b = array[0];\\n    b.p = a;\\n  }\\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\\n    this.x = point;\\n    this.z = points;\\n    this.o = other;\\n    this.e = entry;\\n    this.v = false;\\n    this.n = this.p = null;\\n  }\\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\\n    return function(rotate, listener) {\\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\\n      var clip = {\\n        point: point,\\n        lineStart: lineStart,\\n        lineEnd: lineEnd,\\n        polygonStart: function() {\\n          clip.point = pointRing;\\n          clip.lineStart = ringStart;\\n          clip.lineEnd = ringEnd;\\n          segments = [];\\n          polygon = [];\\n        },\\n        polygonEnd: function() {\\n          clip.point = point;\\n          clip.lineStart = lineStart;\\n          clip.lineEnd = lineEnd;\\n          segments = d3.merge(segments);\\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\\n          if (segments.length) {\\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\\n          } else if (clipStartInside) {\\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\\n            listener.lineStart();\\n            interpolate(null, null, 1, listener);\\n            listener.lineEnd();\\n          }\\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\\n          segments = polygon = null;\\n        },\\n        sphere: function() {\\n          listener.polygonStart();\\n          listener.lineStart();\\n          interpolate(null, null, 1, listener);\\n          listener.lineEnd();\\n          listener.polygonEnd();\\n        }\\n      };\\n      function point(λ, φ) {\\n        var point = rotate(λ, φ);\\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\\n      }\\n      function pointLine(λ, φ) {\\n        var point = rotate(λ, φ);\\n        line.point(point[0], point[1]);\\n      }\\n      function lineStart() {\\n        clip.point = pointLine;\\n        line.lineStart();\\n      }\\n      function lineEnd() {\\n        clip.point = point;\\n        line.lineEnd();\\n      }\\n      var segments;\\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\\n      function pointRing(λ, φ) {\\n        ring.push([ λ, φ ]);\\n        var point = rotate(λ, φ);\\n        ringListener.point(point[0], point[1]);\\n      }\\n      function ringStart() {\\n        ringListener.lineStart();\\n        ring = [];\\n      }\\n      function ringEnd() {\\n        pointRing(ring[0][0], ring[0][1]);\\n        ringListener.lineEnd();\\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\\n        ring.pop();\\n        polygon.push(ring);\\n        ring = null;\\n        if (!n) return;\\n        if (clean & 1) {\\n          segment = ringSegments[0];\\n          var n = segment.length - 1, i = -1, point;\\n          if (n > 0) {\\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\\n            listener.lineStart();\\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\\n            listener.lineEnd();\\n          }\\n          return;\\n        }\\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\\n      }\\n      return clip;\\n    };\\n  }\\n  function d3_geo_clipSegmentLength1(segment) {\\n    return segment.length > 1;\\n  }\\n  function d3_geo_clipBufferListener() {\\n    var lines = [], line;\\n    return {\\n      lineStart: function() {\\n        lines.push(line = []);\\n      },\\n      point: function(λ, φ) {\\n        line.push([ λ, φ ]);\\n      },\\n      lineEnd: d3_noop,\\n      buffer: function() {\\n        var buffer = lines;\\n        lines = [];\\n        line = null;\\n        return buffer;\\n      },\\n      rejoin: function() {\\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\\n      }\\n    };\\n  }\\n  function d3_geo_clipSort(a, b) {\\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\\n  }\\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\\n  function d3_geo_clipAntimeridianLine(listener) {\\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\\n    return {\\n      lineStart: function() {\\n        listener.lineStart();\\n        clean = 1;\\n      },\\n      point: function(λ1, φ1) {\\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\\n        if (abs(dλ - π) < ε) {\\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\\n          listener.point(sλ0, φ0);\\n          listener.lineEnd();\\n          listener.lineStart();\\n          listener.point(sλ1, φ0);\\n          listener.point(λ1, φ0);\\n          clean = 0;\\n        } else if (sλ0 !== sλ1 && dλ >= π) {\\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\\n          listener.point(sλ0, φ0);\\n          listener.lineEnd();\\n          listener.lineStart();\\n          listener.point(sλ1, φ0);\\n          clean = 0;\\n        }\\n        listener.point(λ0 = λ1, φ0 = φ1);\\n        sλ0 = sλ1;\\n      },\\n      lineEnd: function() {\\n        listener.lineEnd();\\n        λ0 = φ0 = NaN;\\n      },\\n      clean: function() {\\n        return 2 - clean;\\n      }\\n    };\\n  }\\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\\n  }\\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\\n    var φ;\\n    if (from == null) {\\n      φ = direction * halfπ;\\n      listener.point(-π, φ);\\n      listener.point(0, φ);\\n      listener.point(π, φ);\\n      listener.point(π, 0);\\n      listener.point(π, -φ);\\n      listener.point(0, -φ);\\n      listener.point(-π, -φ);\\n      listener.point(-π, 0);\\n      listener.point(-π, φ);\\n    } else if (abs(from[0] - to[0]) > ε) {\\n      var s = from[0] < to[0] ? π : -π;\\n      φ = direction * s / 2;\\n      listener.point(-s, φ);\\n      listener.point(0, φ);\\n      listener.point(s, φ);\\n    } else {\\n      listener.point(to[0], to[1]);\\n    }\\n  }\\n  function d3_geo_pointInPolygon(point, polygon) {\\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\\n    d3_geo_areaRingSum.reset();\\n    for (var i = 0, n = polygon.length; i < n; ++i) {\\n      var ring = polygon[i], m = ring.length;\\n      if (!m) continue;\\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\\n      while (true) {\\n        if (j === m) j = 0;\\n        point = ring[j];\\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\\n          d3_geo_cartesianNormalize(arc);\\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\\n          d3_geo_cartesianNormalize(intersection);\\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\\n          }\\n        }\\n        if (!j++) break;\\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\\n      }\\n    }\\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\\n  }\\n  function d3_geo_clipCircle(radius) {\\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\\n    function visible(λ, φ) {\\n      return Math.cos(λ) * Math.cos(φ) > cr;\\n    }\\n    function clipLine(listener) {\\n      var point0, c0, v0, v00, clean;\\n      return {\\n        lineStart: function() {\\n          v00 = v0 = false;\\n          clean = 1;\\n        },\\n        point: function(λ, φ) {\\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\\n          if (v !== v0) {\\n            point2 = intersect(point0, point1);\\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\\n              point1[0] += ε;\\n              point1[1] += ε;\\n              v = visible(point1[0], point1[1]);\\n            }\\n          }\\n          if (v !== v0) {\\n            clean = 0;\\n            if (v) {\\n              listener.lineStart();\\n              point2 = intersect(point1, point0);\\n              listener.point(point2[0], point2[1]);\\n            } else {\\n              point2 = intersect(point0, point1);\\n              listener.point(point2[0], point2[1]);\\n              listener.lineEnd();\\n            }\\n            point0 = point2;\\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\\n            var t;\\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\\n              clean = 0;\\n              if (smallRadius) {\\n                listener.lineStart();\\n                listener.point(t[0][0], t[0][1]);\\n                listener.point(t[1][0], t[1][1]);\\n                listener.lineEnd();\\n              } else {\\n                listener.point(t[1][0], t[1][1]);\\n                listener.lineEnd();\\n                listener.lineStart();\\n                listener.point(t[0][0], t[0][1]);\\n              }\\n            }\\n          }\\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\\n            listener.point(point1[0], point1[1]);\\n          }\\n          point0 = point1, v0 = v, c0 = c;\\n        },\\n        lineEnd: function() {\\n          if (v0) listener.lineEnd();\\n          point0 = null;\\n        },\\n        clean: function() {\\n          return clean | (v00 && v0) << 1;\\n        }\\n      };\\n    }\\n    function intersect(a, b, two) {\\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\\n      if (!determinant) return !two && a;\\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\\n      d3_geo_cartesianAdd(A, B);\\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\\n      if (t2 < 0) return;\\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\\n      d3_geo_cartesianAdd(q, A);\\n      q = d3_geo_spherical(q);\\n      if (!two) return q;\\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\\n        d3_geo_cartesianAdd(q1, A);\\n        return [ q, d3_geo_spherical(q1) ];\\n      }\\n    }\\n    function code(λ, φ) {\\n      var r = smallRadius ? radius : π - radius, code = 0;\\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\\n      return code;\\n    }\\n  }\\n  function d3_geom_clipLine(x0, y0, x1, y1) {\\n    return function(line) {\\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\\n      r = x0 - ax;\\n      if (!dx && r > 0) return;\\n      r /= dx;\\n      if (dx < 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      } else if (dx > 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      }\\n      r = x1 - ax;\\n      if (!dx && r < 0) return;\\n      r /= dx;\\n      if (dx < 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      } else if (dx > 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      }\\n      r = y0 - ay;\\n      if (!dy && r > 0) return;\\n      r /= dy;\\n      if (dy < 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      } else if (dy > 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      }\\n      r = y1 - ay;\\n      if (!dy && r < 0) return;\\n      r /= dy;\\n      if (dy < 0) {\\n        if (r > t1) return;\\n        if (r > t0) t0 = r;\\n      } else if (dy > 0) {\\n        if (r < t0) return;\\n        if (r < t1) t1 = r;\\n      }\\n      if (t0 > 0) line.a = {\\n        x: ax + t0 * dx,\\n        y: ay + t0 * dy\\n      };\\n      if (t1 < 1) line.b = {\\n        x: ax + t1 * dx,\\n        y: ay + t1 * dy\\n      };\\n      return line;\\n    };\\n  }\\n  var d3_geo_clipExtentMAX = 1e9;\\n  d3.geo.clipExtent = function() {\\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\\n      stream: function(output) {\\n        if (stream) stream.valid = false;\\n        stream = clip(output);\\n        stream.valid = true;\\n        return stream;\\n      },\\n      extent: function(_) {\\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\\n        if (stream) stream.valid = false, stream = null;\\n        return clipExtent;\\n      }\\n    };\\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\\n  };\\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\\n    return function(listener) {\\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\\n      var clip = {\\n        point: point,\\n        lineStart: lineStart,\\n        lineEnd: lineEnd,\\n        polygonStart: function() {\\n          listener = bufferListener;\\n          segments = [];\\n          polygon = [];\\n          clean = true;\\n        },\\n        polygonEnd: function() {\\n          listener = listener_;\\n          segments = d3.merge(segments);\\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\\n          if (inside || visible) {\\n            listener.polygonStart();\\n            if (inside) {\\n              listener.lineStart();\\n              interpolate(null, null, 1, listener);\\n              listener.lineEnd();\\n            }\\n            if (visible) {\\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\\n            }\\n            listener.polygonEnd();\\n          }\\n          segments = polygon = ring = null;\\n        }\\n      };\\n      function insidePolygon(p) {\\n        var wn = 0, n = polygon.length, y = p[1];\\n        for (var i = 0; i < n; ++i) {\\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\\n            b = v[j];\\n            if (a[1] <= y) {\\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\\n            } else {\\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\\n            }\\n            a = b;\\n          }\\n        }\\n        return wn !== 0;\\n      }\\n      function interpolate(from, to, direction, listener) {\\n        var a = 0, a1 = 0;\\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\\n          do {\\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\\n          } while ((a = (a + direction + 4) % 4) !== a1);\\n        } else {\\n          listener.point(to[0], to[1]);\\n        }\\n      }\\n      function pointVisible(x, y) {\\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\\n      }\\n      function point(x, y) {\\n        if (pointVisible(x, y)) listener.point(x, y);\\n      }\\n      var x__, y__, v__, x_, y_, v_, first, clean;\\n      function lineStart() {\\n        clip.point = linePoint;\\n        if (polygon) polygon.push(ring = []);\\n        first = true;\\n        v_ = false;\\n        x_ = y_ = NaN;\\n      }\\n      function lineEnd() {\\n        if (segments) {\\n          linePoint(x__, y__);\\n          if (v__ && v_) bufferListener.rejoin();\\n          segments.push(bufferListener.buffer());\\n        }\\n        clip.point = point;\\n        if (v_) listener.lineEnd();\\n      }\\n      function linePoint(x, y) {\\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\\n        var v = pointVisible(x, y);\\n        if (polygon) ring.push([ x, y ]);\\n        if (first) {\\n          x__ = x, y__ = y, v__ = v;\\n          first = false;\\n          if (v) {\\n            listener.lineStart();\\n            listener.point(x, y);\\n          }\\n        } else {\\n          if (v && v_) listener.point(x, y); else {\\n            var l = {\\n              a: {\\n                x: x_,\\n                y: y_\\n              },\\n              b: {\\n                x: x,\\n                y: y\\n              }\\n            };\\n            if (clipLine(l)) {\\n              if (!v_) {\\n                listener.lineStart();\\n                listener.point(l.a.x, l.a.y);\\n              }\\n              listener.point(l.b.x, l.b.y);\\n              if (!v) listener.lineEnd();\\n              clean = false;\\n            } else if (v) {\\n              listener.lineStart();\\n              listener.point(x, y);\\n              clean = false;\\n            }\\n          }\\n        }\\n        x_ = x, y_ = y, v_ = v;\\n      }\\n      return clip;\\n    };\\n    function corner(p, direction) {\\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\\n    }\\n    function compare(a, b) {\\n      return comparePoints(a.x, b.x);\\n    }\\n    function comparePoints(a, b) {\\n      var ca = corner(a, 1), cb = corner(b, 1);\\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\\n    }\\n  }\\n  function d3_geo_conic(projectAt) {\\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\\n    p.parallels = function(_) {\\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\\n    };\\n    return p;\\n  }\\n  function d3_geo_conicEqualArea(φ0, φ1) {\\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\\n    function forward(λ, φ) {\\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\\n    }\\n    forward.invert = function(x, y) {\\n      var ρ0_y = ρ0 - y;\\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\\n    };\\n    return forward;\\n  }\\n  (d3.geo.conicEqualArea = function() {\\n    return d3_geo_conic(d3_geo_conicEqualArea);\\n  }).raw = d3_geo_conicEqualArea;\\n  d3.geo.albers = function() {\\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\\n  };\\n  d3.geo.albersUsa = function() {\\n    var lower48 = d3.geo.albers();\\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\\n    var point, pointStream = {\\n      point: function(x, y) {\\n        point = [ x, y ];\\n      }\\n    }, lower48Point, alaskaPoint, hawaiiPoint;\\n    function albersUsa(coordinates) {\\n      var x = coordinates[0], y = coordinates[1];\\n      point = null;\\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\\n      return point;\\n    }\\n    albersUsa.invert = function(coordinates) {\\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\\n    };\\n    albersUsa.stream = function(stream) {\\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\\n      return {\\n        point: function(x, y) {\\n          lower48Stream.point(x, y);\\n          alaskaStream.point(x, y);\\n          hawaiiStream.point(x, y);\\n        },\\n        sphere: function() {\\n          lower48Stream.sphere();\\n          alaskaStream.sphere();\\n          hawaiiStream.sphere();\\n        },\\n        lineStart: function() {\\n          lower48Stream.lineStart();\\n          alaskaStream.lineStart();\\n          hawaiiStream.lineStart();\\n        },\\n        lineEnd: function() {\\n          lower48Stream.lineEnd();\\n          alaskaStream.lineEnd();\\n          hawaiiStream.lineEnd();\\n        },\\n        polygonStart: function() {\\n          lower48Stream.polygonStart();\\n          alaskaStream.polygonStart();\\n          hawaiiStream.polygonStart();\\n        },\\n        polygonEnd: function() {\\n          lower48Stream.polygonEnd();\\n          alaskaStream.polygonEnd();\\n          hawaiiStream.polygonEnd();\\n        }\\n      };\\n    };\\n    albersUsa.precision = function(_) {\\n      if (!arguments.length) return lower48.precision();\\n      lower48.precision(_);\\n      alaska.precision(_);\\n      hawaii.precision(_);\\n      return albersUsa;\\n    };\\n    albersUsa.scale = function(_) {\\n      if (!arguments.length) return lower48.scale();\\n      lower48.scale(_);\\n      alaska.scale(_ * .35);\\n      hawaii.scale(_);\\n      return albersUsa.translate(lower48.translate());\\n    };\\n    albersUsa.translate = function(_) {\\n      if (!arguments.length) return lower48.translate();\\n      var k = lower48.scale(), x = +_[0], y = +_[1];\\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\\n      return albersUsa;\\n    };\\n    return albersUsa.scale(1070);\\n  };\\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\\n    point: d3_noop,\\n    lineStart: d3_noop,\\n    lineEnd: d3_noop,\\n    polygonStart: function() {\\n      d3_geo_pathAreaPolygon = 0;\\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\\n    },\\n    polygonEnd: function() {\\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\\n    }\\n  };\\n  function d3_geo_pathAreaRingStart() {\\n    var x00, y00, x0, y0;\\n    d3_geo_pathArea.point = function(x, y) {\\n      d3_geo_pathArea.point = nextPoint;\\n      x00 = x0 = x, y00 = y0 = y;\\n    };\\n    function nextPoint(x, y) {\\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\\n      x0 = x, y0 = y;\\n    }\\n    d3_geo_pathArea.lineEnd = function() {\\n      nextPoint(x00, y00);\\n    };\\n  }\\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\\n  var d3_geo_pathBounds = {\\n    point: d3_geo_pathBoundsPoint,\\n    lineStart: d3_noop,\\n    lineEnd: d3_noop,\\n    polygonStart: d3_noop,\\n    polygonEnd: d3_noop\\n  };\\n  function d3_geo_pathBoundsPoint(x, y) {\\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\\n  }\\n  function d3_geo_pathBuffer() {\\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\\n    var stream = {\\n      point: point,\\n      lineStart: function() {\\n        stream.point = pointLineStart;\\n      },\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        stream.lineEnd = lineEndPolygon;\\n      },\\n      polygonEnd: function() {\\n        stream.lineEnd = lineEnd;\\n        stream.point = point;\\n      },\\n      pointRadius: function(_) {\\n        pointCircle = d3_geo_pathBufferCircle(_);\\n        return stream;\\n      },\\n      result: function() {\\n        if (buffer.length) {\\n          var result = buffer.join(\\\"\\\");\\n          buffer = [];\\n          return result;\\n        }\\n      }\\n    };\\n    function point(x, y) {\\n      buffer.push(\\\"M\\\", x, \\\",\\\", y, pointCircle);\\n    }\\n    function pointLineStart(x, y) {\\n      buffer.push(\\\"M\\\", x, \\\",\\\", y);\\n      stream.point = pointLine;\\n    }\\n    function pointLine(x, y) {\\n      buffer.push(\\\"L\\\", x, \\\",\\\", y);\\n    }\\n    function lineEnd() {\\n      stream.point = point;\\n    }\\n    function lineEndPolygon() {\\n      buffer.push(\\\"Z\\\");\\n    }\\n    return stream;\\n  }\\n  function d3_geo_pathBufferCircle(radius) {\\n    return \\\"m0,\\\" + radius + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + -2 * radius + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + 2 * radius + \\\"z\\\";\\n  }\\n  var d3_geo_pathCentroid = {\\n    point: d3_geo_pathCentroidPoint,\\n    lineStart: d3_geo_pathCentroidLineStart,\\n    lineEnd: d3_geo_pathCentroidLineEnd,\\n    polygonStart: function() {\\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\\n    },\\n    polygonEnd: function() {\\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\\n    }\\n  };\\n  function d3_geo_pathCentroidPoint(x, y) {\\n    d3_geo_centroidX0 += x;\\n    d3_geo_centroidY0 += y;\\n    ++d3_geo_centroidZ0;\\n  }\\n  function d3_geo_pathCentroidLineStart() {\\n    var x0, y0;\\n    d3_geo_pathCentroid.point = function(x, y) {\\n      d3_geo_pathCentroid.point = nextPoint;\\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\\n    };\\n    function nextPoint(x, y) {\\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\\n      d3_geo_centroidZ1 += z;\\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\\n    }\\n  }\\n  function d3_geo_pathCentroidLineEnd() {\\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\\n  }\\n  function d3_geo_pathCentroidRingStart() {\\n    var x00, y00, x0, y0;\\n    d3_geo_pathCentroid.point = function(x, y) {\\n      d3_geo_pathCentroid.point = nextPoint;\\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\\n    };\\n    function nextPoint(x, y) {\\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\\n      d3_geo_centroidZ1 += z;\\n      z = y0 * x - x0 * y;\\n      d3_geo_centroidX2 += z * (x0 + x);\\n      d3_geo_centroidY2 += z * (y0 + y);\\n      d3_geo_centroidZ2 += z * 3;\\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\\n    }\\n    d3_geo_pathCentroid.lineEnd = function() {\\n      nextPoint(x00, y00);\\n    };\\n  }\\n  function d3_geo_pathContext(context) {\\n    var pointRadius = 4.5;\\n    var stream = {\\n      point: point,\\n      lineStart: function() {\\n        stream.point = pointLineStart;\\n      },\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        stream.lineEnd = lineEndPolygon;\\n      },\\n      polygonEnd: function() {\\n        stream.lineEnd = lineEnd;\\n        stream.point = point;\\n      },\\n      pointRadius: function(_) {\\n        pointRadius = _;\\n        return stream;\\n      },\\n      result: d3_noop\\n    };\\n    function point(x, y) {\\n      context.moveTo(x + pointRadius, y);\\n      context.arc(x, y, pointRadius, 0, τ);\\n    }\\n    function pointLineStart(x, y) {\\n      context.moveTo(x, y);\\n      stream.point = pointLine;\\n    }\\n    function pointLine(x, y) {\\n      context.lineTo(x, y);\\n    }\\n    function lineEnd() {\\n      stream.point = point;\\n    }\\n    function lineEndPolygon() {\\n      context.closePath();\\n    }\\n    return stream;\\n  }\\n  function d3_geo_resample(project) {\\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\\n    function resample(stream) {\\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\\n    }\\n    function resampleNone(stream) {\\n      return d3_geo_transformPoint(stream, function(x, y) {\\n        x = project(x, y);\\n        stream.point(x[0], x[1]);\\n      });\\n    }\\n    function resampleRecursive(stream) {\\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\\n      var resample = {\\n        point: point,\\n        lineStart: lineStart,\\n        lineEnd: lineEnd,\\n        polygonStart: function() {\\n          stream.polygonStart();\\n          resample.lineStart = ringStart;\\n        },\\n        polygonEnd: function() {\\n          stream.polygonEnd();\\n          resample.lineStart = lineStart;\\n        }\\n      };\\n      function point(x, y) {\\n        x = project(x, y);\\n        stream.point(x[0], x[1]);\\n      }\\n      function lineStart() {\\n        x0 = NaN;\\n        resample.point = linePoint;\\n        stream.lineStart();\\n      }\\n      function linePoint(λ, φ) {\\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\\n        stream.point(x0, y0);\\n      }\\n      function lineEnd() {\\n        resample.point = point;\\n        stream.lineEnd();\\n      }\\n      function ringStart() {\\n        lineStart();\\n        resample.point = ringPoint;\\n        resample.lineEnd = ringEnd;\\n      }\\n      function ringPoint(λ, φ) {\\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\\n        resample.point = linePoint;\\n      }\\n      function ringEnd() {\\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\\n        resample.lineEnd = lineEnd;\\n        lineEnd();\\n      }\\n      return resample;\\n    }\\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\\n      if (d2 > 4 * δ2 && depth--) {\\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\\n          stream.point(x2, y2);\\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\\n        }\\n      }\\n    }\\n    resample.precision = function(_) {\\n      if (!arguments.length) return Math.sqrt(δ2);\\n      maxDepth = (δ2 = _ * _) > 0 && 16;\\n      return resample;\\n    };\\n    return resample;\\n  }\\n  d3.geo.path = function() {\\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\\n    function path(object) {\\n      if (object) {\\n        if (typeof pointRadius === \\\"function\\\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\\n        d3.geo.stream(object, cacheStream);\\n      }\\n      return contextStream.result();\\n    }\\n    path.area = function(object) {\\n      d3_geo_pathAreaSum = 0;\\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\\n      return d3_geo_pathAreaSum;\\n    };\\n    path.centroid = function(object) {\\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\\n    };\\n    path.bounds = function(object) {\\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\\n    };\\n    path.projection = function(_) {\\n      if (!arguments.length) return projection;\\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\\n      return reset();\\n    };\\n    path.context = function(_) {\\n      if (!arguments.length) return context;\\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\\n      if (typeof pointRadius !== \\\"function\\\") contextStream.pointRadius(pointRadius);\\n      return reset();\\n    };\\n    path.pointRadius = function(_) {\\n      if (!arguments.length) return pointRadius;\\n      pointRadius = typeof _ === \\\"function\\\" ? _ : (contextStream.pointRadius(+_), +_);\\n      return path;\\n    };\\n    function reset() {\\n      cacheStream = null;\\n      return path;\\n    }\\n    return path.projection(d3.geo.albersUsa()).context(null);\\n  };\\n  function d3_geo_pathProjectStream(project) {\\n    var resample = d3_geo_resample(function(x, y) {\\n      return project([ x * d3_degrees, y * d3_degrees ]);\\n    });\\n    return function(stream) {\\n      return d3_geo_projectionRadians(resample(stream));\\n    };\\n  }\\n  d3.geo.transform = function(methods) {\\n    return {\\n      stream: function(stream) {\\n        var transform = new d3_geo_transform(stream);\\n        for (var k in methods) transform[k] = methods[k];\\n        return transform;\\n      }\\n    };\\n  };\\n  function d3_geo_transform(stream) {\\n    this.stream = stream;\\n  }\\n  d3_geo_transform.prototype = {\\n    point: function(x, y) {\\n      this.stream.point(x, y);\\n    },\\n    sphere: function() {\\n      this.stream.sphere();\\n    },\\n    lineStart: function() {\\n      this.stream.lineStart();\\n    },\\n    lineEnd: function() {\\n      this.stream.lineEnd();\\n    },\\n    polygonStart: function() {\\n      this.stream.polygonStart();\\n    },\\n    polygonEnd: function() {\\n      this.stream.polygonEnd();\\n    }\\n  };\\n  function d3_geo_transformPoint(stream, point) {\\n    return {\\n      point: point,\\n      sphere: function() {\\n        stream.sphere();\\n      },\\n      lineStart: function() {\\n        stream.lineStart();\\n      },\\n      lineEnd: function() {\\n        stream.lineEnd();\\n      },\\n      polygonStart: function() {\\n        stream.polygonStart();\\n      },\\n      polygonEnd: function() {\\n        stream.polygonEnd();\\n      }\\n    };\\n  }\\n  d3.geo.projection = d3_geo_projection;\\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\\n  function d3_geo_projection(project) {\\n    return d3_geo_projectionMutator(function() {\\n      return project;\\n    })();\\n  }\\n  function d3_geo_projectionMutator(projectAt) {\\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\\n      x = project(x, y);\\n      return [ x[0] * k + δx, δy - x[1] * k ];\\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\\n    function projection(point) {\\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\\n      return [ point[0] * k + δx, δy - point[1] * k ];\\n    }\\n    function invert(point) {\\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\\n    }\\n    projection.stream = function(output) {\\n      if (stream) stream.valid = false;\\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\\n      stream.valid = true;\\n      return stream;\\n    };\\n    projection.clipAngle = function(_) {\\n      if (!arguments.length) return clipAngle;\\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\\n      return invalidate();\\n    };\\n    projection.clipExtent = function(_) {\\n      if (!arguments.length) return clipExtent;\\n      clipExtent = _;\\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\\n      return invalidate();\\n    };\\n    projection.scale = function(_) {\\n      if (!arguments.length) return k;\\n      k = +_;\\n      return reset();\\n    };\\n    projection.translate = function(_) {\\n      if (!arguments.length) return [ x, y ];\\n      x = +_[0];\\n      y = +_[1];\\n      return reset();\\n    };\\n    projection.center = function(_) {\\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\\n      λ = _[0] % 360 * d3_radians;\\n      φ = _[1] % 360 * d3_radians;\\n      return reset();\\n    };\\n    projection.rotate = function(_) {\\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\\n      δλ = _[0] % 360 * d3_radians;\\n      δφ = _[1] % 360 * d3_radians;\\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\\n      return reset();\\n    };\\n    d3.rebind(projection, projectResample, \\\"precision\\\");\\n    function reset() {\\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\\n      var center = project(λ, φ);\\n      δx = x - center[0] * k;\\n      δy = y + center[1] * k;\\n      return invalidate();\\n    }\\n    function invalidate() {\\n      if (stream) stream.valid = false, stream = null;\\n      return projection;\\n    }\\n    return function() {\\n      project = projectAt.apply(this, arguments);\\n      projection.invert = project.invert && invert;\\n      return reset();\\n    };\\n  }\\n  function d3_geo_projectionRadians(stream) {\\n    return d3_geo_transformPoint(stream, function(x, y) {\\n      stream.point(x * d3_radians, y * d3_radians);\\n    });\\n  }\\n  function d3_geo_equirectangular(λ, φ) {\\n    return [ λ, φ ];\\n  }\\n  (d3.geo.equirectangular = function() {\\n    return d3_geo_projection(d3_geo_equirectangular);\\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\\n  d3.geo.rotation = function(rotate) {\\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\\n    function forward(coordinates) {\\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\\n    }\\n    forward.invert = function(coordinates) {\\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\\n    };\\n    return forward;\\n  };\\n  function d3_geo_identityRotation(λ, φ) {\\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\\n  }\\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\\n  function d3_geo_rotation(δλ, δφ, δγ) {\\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\\n  }\\n  function d3_geo_forwardRotationλ(δλ) {\\n    return function(λ, φ) {\\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\\n    };\\n  }\\n  function d3_geo_rotationλ(δλ) {\\n    var rotation = d3_geo_forwardRotationλ(δλ);\\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\\n    return rotation;\\n  }\\n  function d3_geo_rotationφγ(δφ, δγ) {\\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\\n    function rotation(λ, φ) {\\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\\n    }\\n    rotation.invert = function(λ, φ) {\\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\\n    };\\n    return rotation;\\n  }\\n  d3.geo.circle = function() {\\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\\n    function circle() {\\n      var center = typeof origin === \\\"function\\\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\\n      interpolate(null, null, 1, {\\n        point: function(x, y) {\\n          ring.push(x = rotate(x, y));\\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\\n        }\\n      });\\n      return {\\n        type: \\\"Polygon\\\",\\n        coordinates: [ ring ]\\n      };\\n    }\\n    circle.origin = function(x) {\\n      if (!arguments.length) return origin;\\n      origin = x;\\n      return circle;\\n    };\\n    circle.angle = function(x) {\\n      if (!arguments.length) return angle;\\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\\n      return circle;\\n    };\\n    circle.precision = function(_) {\\n      if (!arguments.length) return precision;\\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\\n      return circle;\\n    };\\n    return circle.angle(90);\\n  };\\n  function d3_geo_circleInterpolate(radius, precision) {\\n    var cr = Math.cos(radius), sr = Math.sin(radius);\\n    return function(from, to, direction, listener) {\\n      var step = direction * precision;\\n      if (from != null) {\\n        from = d3_geo_circleAngle(cr, from);\\n        to = d3_geo_circleAngle(cr, to);\\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\\n      } else {\\n        from = radius + direction * τ;\\n        to = radius - .5 * step;\\n      }\\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\\n      }\\n    };\\n  }\\n  function d3_geo_circleAngle(cr, point) {\\n    var a = d3_geo_cartesian(point);\\n    a[0] -= cr;\\n    d3_geo_cartesianNormalize(a);\\n    var angle = d3_acos(-a[1]);\\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\\n  }\\n  d3.geo.distance = function(a, b) {\\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\\n  };\\n  d3.geo.graticule = function() {\\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\\n    function graticule() {\\n      return {\\n        type: \\\"MultiLineString\\\",\\n        coordinates: lines()\\n      };\\n    }\\n    function lines() {\\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\\n        return abs(x % DX) > ε;\\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\\n        return abs(y % DY) > ε;\\n      }).map(y));\\n    }\\n    graticule.lines = function() {\\n      return lines().map(function(coordinates) {\\n        return {\\n          type: \\\"LineString\\\",\\n          coordinates: coordinates\\n        };\\n      });\\n    };\\n    graticule.outline = function() {\\n      return {\\n        type: \\\"Polygon\\\",\\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\\n      };\\n    };\\n    graticule.extent = function(_) {\\n      if (!arguments.length) return graticule.minorExtent();\\n      return graticule.majorExtent(_).minorExtent(_);\\n    };\\n    graticule.majorExtent = function(_) {\\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\\n      X0 = +_[0][0], X1 = +_[1][0];\\n      Y0 = +_[0][1], Y1 = +_[1][1];\\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\\n      return graticule.precision(precision);\\n    };\\n    graticule.minorExtent = function(_) {\\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\\n      x0 = +_[0][0], x1 = +_[1][0];\\n      y0 = +_[0][1], y1 = +_[1][1];\\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\\n      return graticule.precision(precision);\\n    };\\n    graticule.step = function(_) {\\n      if (!arguments.length) return graticule.minorStep();\\n      return graticule.majorStep(_).minorStep(_);\\n    };\\n    graticule.majorStep = function(_) {\\n      if (!arguments.length) return [ DX, DY ];\\n      DX = +_[0], DY = +_[1];\\n      return graticule;\\n    };\\n    graticule.minorStep = function(_) {\\n      if (!arguments.length) return [ dx, dy ];\\n      dx = +_[0], dy = +_[1];\\n      return graticule;\\n    };\\n    graticule.precision = function(_) {\\n      if (!arguments.length) return precision;\\n      precision = +_;\\n      x = d3_geo_graticuleX(y0, y1, 90);\\n      y = d3_geo_graticuleY(x0, x1, precision);\\n      X = d3_geo_graticuleX(Y0, Y1, 90);\\n      Y = d3_geo_graticuleY(X0, X1, precision);\\n      return graticule;\\n    };\\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\\n  };\\n  function d3_geo_graticuleX(y0, y1, dy) {\\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\\n    return function(x) {\\n      return y.map(function(y) {\\n        return [ x, y ];\\n      });\\n    };\\n  }\\n  function d3_geo_graticuleY(x0, x1, dx) {\\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\\n    return function(y) {\\n      return x.map(function(x) {\\n        return [ x, y ];\\n      });\\n    };\\n  }\\n  function d3_source(d) {\\n    return d.source;\\n  }\\n  function d3_target(d) {\\n    return d.target;\\n  }\\n  d3.geo.greatArc = function() {\\n    var source = d3_source, source_, target = d3_target, target_;\\n    function greatArc() {\\n      return {\\n        type: \\\"LineString\\\",\\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\\n      };\\n    }\\n    greatArc.distance = function() {\\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\\n    };\\n    greatArc.source = function(_) {\\n      if (!arguments.length) return source;\\n      source = _, source_ = typeof _ === \\\"function\\\" ? null : _;\\n      return greatArc;\\n    };\\n    greatArc.target = function(_) {\\n      if (!arguments.length) return target;\\n      target = _, target_ = typeof _ === \\\"function\\\" ? null : _;\\n      return greatArc;\\n    };\\n    greatArc.precision = function() {\\n      return arguments.length ? greatArc : 0;\\n    };\\n    return greatArc;\\n  };\\n  d3.geo.interpolate = function(source, target) {\\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\\n  };\\n  function d3_geo_interpolate(x0, y0, x1, y1) {\\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\\n    var interpolate = d ? function(t) {\\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\\n    } : function() {\\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\\n    };\\n    interpolate.distance = d;\\n    return interpolate;\\n  }\\n  d3.geo.length = function(object) {\\n    d3_geo_lengthSum = 0;\\n    d3.geo.stream(object, d3_geo_length);\\n    return d3_geo_lengthSum;\\n  };\\n  var d3_geo_lengthSum;\\n  var d3_geo_length = {\\n    sphere: d3_noop,\\n    point: d3_noop,\\n    lineStart: d3_geo_lengthLineStart,\\n    lineEnd: d3_noop,\\n    polygonStart: d3_noop,\\n    polygonEnd: d3_noop\\n  };\\n  function d3_geo_lengthLineStart() {\\n    var λ0, sinφ0, cosφ0;\\n    d3_geo_length.point = function(λ, φ) {\\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\\n      d3_geo_length.point = nextPoint;\\n    };\\n    d3_geo_length.lineEnd = function() {\\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\\n    };\\n    function nextPoint(λ, φ) {\\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\\n    }\\n  }\\n  function d3_geo_azimuthal(scale, angle) {\\n    function azimuthal(λ, φ) {\\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\\n    }\\n    azimuthal.invert = function(x, y) {\\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\\n    };\\n    return azimuthal;\\n  }\\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\\n    return Math.sqrt(2 / (1 + cosλcosφ));\\n  }, function(ρ) {\\n    return 2 * Math.asin(ρ / 2);\\n  });\\n  (d3.geo.azimuthalEqualArea = function() {\\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\\n  }).raw = d3_geo_azimuthalEqualArea;\\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\\n    var c = Math.acos(cosλcosφ);\\n    return c && c / Math.sin(c);\\n  }, d3_identity);\\n  (d3.geo.azimuthalEquidistant = function() {\\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\\n  }).raw = d3_geo_azimuthalEquidistant;\\n  function d3_geo_conicConformal(φ0, φ1) {\\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\\n      return Math.tan(π / 4 + φ / 2);\\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\\n    if (!n) return d3_geo_mercator;\\n    function forward(λ, φ) {\\n      if (F > 0) {\\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\\n      } else {\\n        if (φ > halfπ - ε) φ = halfπ - ε;\\n      }\\n      var ρ = F / Math.pow(t(φ), n);\\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\\n    }\\n    forward.invert = function(x, y) {\\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\\n    };\\n    return forward;\\n  }\\n  (d3.geo.conicConformal = function() {\\n    return d3_geo_conic(d3_geo_conicConformal);\\n  }).raw = d3_geo_conicConformal;\\n  function d3_geo_conicEquidistant(φ0, φ1) {\\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\\n    if (abs(n) < ε) return d3_geo_equirectangular;\\n    function forward(λ, φ) {\\n      var ρ = G - φ;\\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\\n    }\\n    forward.invert = function(x, y) {\\n      var ρ0_y = G - y;\\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\\n    };\\n    return forward;\\n  }\\n  (d3.geo.conicEquidistant = function() {\\n    return d3_geo_conic(d3_geo_conicEquidistant);\\n  }).raw = d3_geo_conicEquidistant;\\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\\n    return 1 / cosλcosφ;\\n  }, Math.atan);\\n  (d3.geo.gnomonic = function() {\\n    return d3_geo_projection(d3_geo_gnomonic);\\n  }).raw = d3_geo_gnomonic;\\n  function d3_geo_mercator(λ, φ) {\\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\\n  }\\n  d3_geo_mercator.invert = function(x, y) {\\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\\n  };\\n  function d3_geo_mercatorProjection(project) {\\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\\n    m.scale = function() {\\n      var v = scale.apply(m, arguments);\\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\\n    };\\n    m.translate = function() {\\n      var v = translate.apply(m, arguments);\\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\\n    };\\n    m.clipExtent = function(_) {\\n      var v = clipExtent.apply(m, arguments);\\n      if (v === m) {\\n        if (clipAuto = _ == null) {\\n          var k = π * scale(), t = translate();\\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\\n        }\\n      } else if (clipAuto) {\\n        v = null;\\n      }\\n      return v;\\n    };\\n    return m.clipExtent(null);\\n  }\\n  (d3.geo.mercator = function() {\\n    return d3_geo_mercatorProjection(d3_geo_mercator);\\n  }).raw = d3_geo_mercator;\\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\\n    return 1;\\n  }, Math.asin);\\n  (d3.geo.orthographic = function() {\\n    return d3_geo_projection(d3_geo_orthographic);\\n  }).raw = d3_geo_orthographic;\\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\\n    return 1 / (1 + cosλcosφ);\\n  }, function(ρ) {\\n    return 2 * Math.atan(ρ);\\n  });\\n  (d3.geo.stereographic = function() {\\n    return d3_geo_projection(d3_geo_stereographic);\\n  }).raw = d3_geo_stereographic;\\n  function d3_geo_transverseMercator(λ, φ) {\\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\\n  }\\n  d3_geo_transverseMercator.invert = function(x, y) {\\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\\n  };\\n  (d3.geo.transverseMercator = function() {\\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\\n    projection.center = function(_) {\\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\\n    };\\n    projection.rotate = function(_) {\\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \\n      [ _[0], _[1], _[2] - 90 ]);\\n    };\\n    return rotate([ 0, 0, 90 ]);\\n  }).raw = d3_geo_transverseMercator;\\n  d3.geom = {};\\n  function d3_geom_pointX(d) {\\n    return d[0];\\n  }\\n  function d3_geom_pointY(d) {\\n    return d[1];\\n  }\\n  d3.geom.hull = function(vertices) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY;\\n    if (arguments.length) return hull(vertices);\\n    function hull(data) {\\n      if (data.length < 3) return [];\\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\\n      for (i = 0; i < n; i++) {\\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\\n      }\\n      points.sort(d3_geom_hullOrder);\\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\\n      return polygon;\\n    }\\n    hull.x = function(_) {\\n      return arguments.length ? (x = _, hull) : x;\\n    };\\n    hull.y = function(_) {\\n      return arguments.length ? (y = _, hull) : y;\\n    };\\n    return hull;\\n  };\\n  function d3_geom_hullUpper(points) {\\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\\n    for (var i = 2; i < n; i++) {\\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\\n      hull[hs++] = i;\\n    }\\n    return hull.slice(0, hs);\\n  }\\n  function d3_geom_hullOrder(a, b) {\\n    return a[0] - b[0] || a[1] - b[1];\\n  }\\n  d3.geom.polygon = function(coordinates) {\\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\\n    return coordinates;\\n  };\\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\\n  d3_geom_polygonPrototype.area = function() {\\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\\n    while (++i < n) {\\n      a = b;\\n      b = this[i];\\n      area += a[1] * b[0] - a[0] * b[1];\\n    }\\n    return area * .5;\\n  };\\n  d3_geom_polygonPrototype.centroid = function(k) {\\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\\n    if (!arguments.length) k = -1 / (6 * this.area());\\n    while (++i < n) {\\n      a = b;\\n      b = this[i];\\n      c = a[0] * b[1] - b[0] * a[1];\\n      x += (a[0] + b[0]) * c;\\n      y += (a[1] + b[1]) * c;\\n    }\\n    return [ x * k, y * k ];\\n  };\\n  d3_geom_polygonPrototype.clip = function(subject) {\\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\\n    while (++i < n) {\\n      input = subject.slice();\\n      subject.length = 0;\\n      b = this[i];\\n      c = input[(m = input.length - closed) - 1];\\n      j = -1;\\n      while (++j < m) {\\n        d = input[j];\\n        if (d3_geom_polygonInside(d, a, b)) {\\n          if (!d3_geom_polygonInside(c, a, b)) {\\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\\n          }\\n          subject.push(d);\\n        } else if (d3_geom_polygonInside(c, a, b)) {\\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\\n        }\\n        c = d;\\n      }\\n      if (closed) subject.push(subject[0]);\\n      a = b;\\n    }\\n    return subject;\\n  };\\n  function d3_geom_polygonInside(p, a, b) {\\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\\n  }\\n  function d3_geom_polygonIntersect(c, d, a, b) {\\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\\n    return [ x1 + ua * x21, y1 + ua * y21 ];\\n  }\\n  function d3_geom_polygonClosed(coordinates) {\\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\\n    return !(a[0] - b[0] || a[1] - b[1]);\\n  }\\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\\n  function d3_geom_voronoiBeach() {\\n    d3_geom_voronoiRedBlackNode(this);\\n    this.edge = this.site = this.circle = null;\\n  }\\n  function d3_geom_voronoiCreateBeach(site) {\\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\\n    beach.site = site;\\n    return beach;\\n  }\\n  function d3_geom_voronoiDetachBeach(beach) {\\n    d3_geom_voronoiDetachCircle(beach);\\n    d3_geom_voronoiBeaches.remove(beach);\\n    d3_geom_voronoiBeachPool.push(beach);\\n    d3_geom_voronoiRedBlackNode(beach);\\n  }\\n  function d3_geom_voronoiRemoveBeach(beach) {\\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\\n      x: x,\\n      y: y\\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\\n    d3_geom_voronoiDetachBeach(beach);\\n    var lArc = previous;\\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\\n      previous = lArc.P;\\n      disappearing.unshift(lArc);\\n      d3_geom_voronoiDetachBeach(lArc);\\n      lArc = previous;\\n    }\\n    disappearing.unshift(lArc);\\n    d3_geom_voronoiDetachCircle(lArc);\\n    var rArc = next;\\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\\n      next = rArc.N;\\n      disappearing.push(rArc);\\n      d3_geom_voronoiDetachBeach(rArc);\\n      rArc = next;\\n    }\\n    disappearing.push(rArc);\\n    d3_geom_voronoiDetachCircle(rArc);\\n    var nArcs = disappearing.length, iArc;\\n    for (iArc = 1; iArc < nArcs; ++iArc) {\\n      rArc = disappearing[iArc];\\n      lArc = disappearing[iArc - 1];\\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\\n    }\\n    lArc = disappearing[0];\\n    rArc = disappearing[nArcs - 1];\\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\\n    d3_geom_voronoiAttachCircle(lArc);\\n    d3_geom_voronoiAttachCircle(rArc);\\n  }\\n  function d3_geom_voronoiAddBeach(site) {\\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\\n    while (node) {\\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\\n      if (dxl > ε) node = node.L; else {\\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\\n        if (dxr > ε) {\\n          if (!node.R) {\\n            lArc = node;\\n            break;\\n          }\\n          node = node.R;\\n        } else {\\n          if (dxl > -ε) {\\n            lArc = node.P;\\n            rArc = node;\\n          } else if (dxr > -ε) {\\n            lArc = node;\\n            rArc = node.N;\\n          } else {\\n            lArc = rArc = node;\\n          }\\n          break;\\n        }\\n      }\\n    }\\n    var newArc = d3_geom_voronoiCreateBeach(site);\\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\\n    if (!lArc && !rArc) return;\\n    if (lArc === rArc) {\\n      d3_geom_voronoiDetachCircle(lArc);\\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\\n      d3_geom_voronoiAttachCircle(lArc);\\n      d3_geom_voronoiAttachCircle(rArc);\\n      return;\\n    }\\n    if (!rArc) {\\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\\n      return;\\n    }\\n    d3_geom_voronoiDetachCircle(lArc);\\n    d3_geom_voronoiDetachCircle(rArc);\\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\\n      x: (cy * hb - by * hc) / d + ax,\\n      y: (bx * hc - cx * hb) / d + ay\\n    };\\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\\n    d3_geom_voronoiAttachCircle(lArc);\\n    d3_geom_voronoiAttachCircle(rArc);\\n  }\\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\\n    if (!pby2) return rfocx;\\n    var lArc = arc.P;\\n    if (!lArc) return -Infinity;\\n    site = lArc.site;\\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\\n    if (!plby2) return lfocx;\\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\\n    return (rfocx + lfocx) / 2;\\n  }\\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\\n    var rArc = arc.N;\\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\\n    var site = arc.site;\\n    return site.y === directrix ? site.x : Infinity;\\n  }\\n  function d3_geom_voronoiCell(site) {\\n    this.site = site;\\n    this.edges = [];\\n  }\\n  d3_geom_voronoiCell.prototype.prepare = function() {\\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\\n    while (iHalfEdge--) {\\n      edge = halfEdges[iHalfEdge].edge;\\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\\n    }\\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\\n    return halfEdges.length;\\n  };\\n  function d3_geom_voronoiCloseCells(extent) {\\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\\n    while (iCell--) {\\n      cell = cells[iCell];\\n      if (!cell || !cell.prepare()) continue;\\n      halfEdges = cell.edges;\\n      nHalfEdges = halfEdges.length;\\n      iHalfEdge = 0;\\n      while (iHalfEdge < nHalfEdges) {\\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\\n            x: x0,\\n            y: abs(x2 - x0) < ε ? y2 : y1\\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\\n            x: abs(y2 - y1) < ε ? x2 : x1,\\n            y: y1\\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\\n            x: x1,\\n            y: abs(x2 - x1) < ε ? y2 : y0\\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\\n            x: abs(y2 - y0) < ε ? x2 : x0,\\n            y: y0\\n          } : null), cell.site, null));\\n          ++nHalfEdges;\\n        }\\n      }\\n    }\\n  }\\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\\n    return b.angle - a.angle;\\n  }\\n  function d3_geom_voronoiCircle() {\\n    d3_geom_voronoiRedBlackNode(this);\\n    this.x = this.y = this.arc = this.site = this.cy = null;\\n  }\\n  function d3_geom_voronoiAttachCircle(arc) {\\n    var lArc = arc.P, rArc = arc.N;\\n    if (!lArc || !rArc) return;\\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\\n    if (lSite === rSite) return;\\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\\n    var d = 2 * (ax * cy - ay * cx);\\n    if (d >= -ε2) return;\\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\\n    circle.arc = arc;\\n    circle.site = cSite;\\n    circle.x = x + bx;\\n    circle.y = cy + Math.sqrt(x * x + y * y);\\n    circle.cy = cy;\\n    arc.circle = circle;\\n    var before = null, node = d3_geom_voronoiCircles._;\\n    while (node) {\\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\\n        if (node.L) node = node.L; else {\\n          before = node.P;\\n          break;\\n        }\\n      } else {\\n        if (node.R) node = node.R; else {\\n          before = node;\\n          break;\\n        }\\n      }\\n    }\\n    d3_geom_voronoiCircles.insert(before, circle);\\n    if (!before) d3_geom_voronoiFirstCircle = circle;\\n  }\\n  function d3_geom_voronoiDetachCircle(arc) {\\n    var circle = arc.circle;\\n    if (circle) {\\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\\n      d3_geom_voronoiCircles.remove(circle);\\n      d3_geom_voronoiCirclePool.push(circle);\\n      d3_geom_voronoiRedBlackNode(circle);\\n      arc.circle = null;\\n    }\\n  }\\n  function d3_geom_voronoiClipEdges(extent) {\\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\\n    while (i--) {\\n      e = edges[i];\\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\\n        e.a = e.b = null;\\n        edges.splice(i, 1);\\n      }\\n    }\\n  }\\n  function d3_geom_voronoiConnectEdge(edge, extent) {\\n    var vb = edge.b;\\n    if (vb) return true;\\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\\n    if (ry === ly) {\\n      if (fx < x0 || fx >= x1) return;\\n      if (lx > rx) {\\n        if (!va) va = {\\n          x: fx,\\n          y: y0\\n        }; else if (va.y >= y1) return;\\n        vb = {\\n          x: fx,\\n          y: y1\\n        };\\n      } else {\\n        if (!va) va = {\\n          x: fx,\\n          y: y1\\n        }; else if (va.y < y0) return;\\n        vb = {\\n          x: fx,\\n          y: y0\\n        };\\n      }\\n    } else {\\n      fm = (lx - rx) / (ry - ly);\\n      fb = fy - fm * fx;\\n      if (fm < -1 || fm > 1) {\\n        if (lx > rx) {\\n          if (!va) va = {\\n            x: (y0 - fb) / fm,\\n            y: y0\\n          }; else if (va.y >= y1) return;\\n          vb = {\\n            x: (y1 - fb) / fm,\\n            y: y1\\n          };\\n        } else {\\n          if (!va) va = {\\n            x: (y1 - fb) / fm,\\n            y: y1\\n          }; else if (va.y < y0) return;\\n          vb = {\\n            x: (y0 - fb) / fm,\\n            y: y0\\n          };\\n        }\\n      } else {\\n        if (ly < ry) {\\n          if (!va) va = {\\n            x: x0,\\n            y: fm * x0 + fb\\n          }; else if (va.x >= x1) return;\\n          vb = {\\n            x: x1,\\n            y: fm * x1 + fb\\n          };\\n        } else {\\n          if (!va) va = {\\n            x: x1,\\n            y: fm * x1 + fb\\n          }; else if (va.x < x0) return;\\n          vb = {\\n            x: x0,\\n            y: fm * x0 + fb\\n          };\\n        }\\n      }\\n    }\\n    edge.a = va;\\n    edge.b = vb;\\n    return true;\\n  }\\n  function d3_geom_voronoiEdge(lSite, rSite) {\\n    this.l = lSite;\\n    this.r = rSite;\\n    this.a = this.b = null;\\n  }\\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\\n    d3_geom_voronoiEdges.push(edge);\\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\\n    return edge;\\n  }\\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\\n    var edge = new d3_geom_voronoiEdge(lSite, null);\\n    edge.a = va;\\n    edge.b = vb;\\n    d3_geom_voronoiEdges.push(edge);\\n    return edge;\\n  }\\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\\n    if (!edge.a && !edge.b) {\\n      edge.a = vertex;\\n      edge.l = lSite;\\n      edge.r = rSite;\\n    } else if (edge.l === rSite) {\\n      edge.b = vertex;\\n    } else {\\n      edge.a = vertex;\\n    }\\n  }\\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\\n    var va = edge.a, vb = edge.b;\\n    this.edge = edge;\\n    this.site = lSite;\\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\\n  }\\n  d3_geom_voronoiHalfEdge.prototype = {\\n    start: function() {\\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\\n    },\\n    end: function() {\\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\\n    }\\n  };\\n  function d3_geom_voronoiRedBlackTree() {\\n    this._ = null;\\n  }\\n  function d3_geom_voronoiRedBlackNode(node) {\\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\\n  }\\n  d3_geom_voronoiRedBlackTree.prototype = {\\n    insert: function(after, node) {\\n      var parent, grandpa, uncle;\\n      if (after) {\\n        node.P = after;\\n        node.N = after.N;\\n        if (after.N) after.N.P = node;\\n        after.N = node;\\n        if (after.R) {\\n          after = after.R;\\n          while (after.L) after = after.L;\\n          after.L = node;\\n        } else {\\n          after.R = node;\\n        }\\n        parent = after;\\n      } else if (this._) {\\n        after = d3_geom_voronoiRedBlackFirst(this._);\\n        node.P = null;\\n        node.N = after;\\n        after.P = after.L = node;\\n        parent = after;\\n      } else {\\n        node.P = node.N = null;\\n        this._ = node;\\n        parent = null;\\n      }\\n      node.L = node.R = null;\\n      node.U = parent;\\n      node.C = true;\\n      after = node;\\n      while (parent && parent.C) {\\n        grandpa = parent.U;\\n        if (parent === grandpa.L) {\\n          uncle = grandpa.R;\\n          if (uncle && uncle.C) {\\n            parent.C = uncle.C = false;\\n            grandpa.C = true;\\n            after = grandpa;\\n          } else {\\n            if (after === parent.R) {\\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\\n              after = parent;\\n              parent = after.U;\\n            }\\n            parent.C = false;\\n            grandpa.C = true;\\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\\n          }\\n        } else {\\n          uncle = grandpa.L;\\n          if (uncle && uncle.C) {\\n            parent.C = uncle.C = false;\\n            grandpa.C = true;\\n            after = grandpa;\\n          } else {\\n            if (after === parent.L) {\\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\\n              after = parent;\\n              parent = after.U;\\n            }\\n            parent.C = false;\\n            grandpa.C = true;\\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\\n          }\\n        }\\n        parent = after.U;\\n      }\\n      this._.C = false;\\n    },\\n    remove: function(node) {\\n      if (node.N) node.N.P = node.P;\\n      if (node.P) node.P.N = node.N;\\n      node.N = node.P = null;\\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\\n      if (parent) {\\n        if (parent.L === node) parent.L = next; else parent.R = next;\\n      } else {\\n        this._ = next;\\n      }\\n      if (left && right) {\\n        red = next.C;\\n        next.C = node.C;\\n        next.L = left;\\n        left.U = next;\\n        if (next !== right) {\\n          parent = next.U;\\n          next.U = node.U;\\n          node = next.R;\\n          parent.L = node;\\n          next.R = right;\\n          right.U = next;\\n        } else {\\n          next.U = parent;\\n          parent = next;\\n          node = next.R;\\n        }\\n      } else {\\n        red = node.C;\\n        node = next;\\n      }\\n      if (node) node.U = parent;\\n      if (red) return;\\n      if (node && node.C) {\\n        node.C = false;\\n        return;\\n      }\\n      do {\\n        if (node === this._) break;\\n        if (node === parent.L) {\\n          sibling = parent.R;\\n          if (sibling.C) {\\n            sibling.C = false;\\n            parent.C = true;\\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\\n            sibling = parent.R;\\n          }\\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\\n            if (!sibling.R || !sibling.R.C) {\\n              sibling.L.C = false;\\n              sibling.C = true;\\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\\n              sibling = parent.R;\\n            }\\n            sibling.C = parent.C;\\n            parent.C = sibling.R.C = false;\\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\\n            node = this._;\\n            break;\\n          }\\n        } else {\\n          sibling = parent.L;\\n          if (sibling.C) {\\n            sibling.C = false;\\n            parent.C = true;\\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\\n            sibling = parent.L;\\n          }\\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\\n            if (!sibling.L || !sibling.L.C) {\\n              sibling.R.C = false;\\n              sibling.C = true;\\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\\n              sibling = parent.L;\\n            }\\n            sibling.C = parent.C;\\n            parent.C = sibling.L.C = false;\\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\\n            node = this._;\\n            break;\\n          }\\n        }\\n        sibling.C = true;\\n        node = parent;\\n        parent = parent.U;\\n      } while (!node.C);\\n      if (node) node.C = false;\\n    }\\n  };\\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\\n    var p = node, q = node.R, parent = p.U;\\n    if (parent) {\\n      if (parent.L === p) parent.L = q; else parent.R = q;\\n    } else {\\n      tree._ = q;\\n    }\\n    q.U = parent;\\n    p.U = q;\\n    p.R = q.L;\\n    if (p.R) p.R.U = p;\\n    q.L = p;\\n  }\\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\\n    var p = node, q = node.L, parent = p.U;\\n    if (parent) {\\n      if (parent.L === p) parent.L = q; else parent.R = q;\\n    } else {\\n      tree._ = q;\\n    }\\n    q.U = parent;\\n    p.U = q;\\n    p.L = q.R;\\n    if (p.L) p.L.U = p;\\n    q.R = p;\\n  }\\n  function d3_geom_voronoiRedBlackFirst(node) {\\n    while (node.L) node = node.L;\\n    return node;\\n  }\\n  function d3_geom_voronoi(sites, bbox) {\\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\\n    d3_geom_voronoiEdges = [];\\n    d3_geom_voronoiCells = new Array(sites.length);\\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\\n    while (true) {\\n      circle = d3_geom_voronoiFirstCircle;\\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\\n        if (site.x !== x0 || site.y !== y0) {\\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\\n          d3_geom_voronoiAddBeach(site);\\n          x0 = site.x, y0 = site.y;\\n        }\\n        site = sites.pop();\\n      } else if (circle) {\\n        d3_geom_voronoiRemoveBeach(circle.arc);\\n      } else {\\n        break;\\n      }\\n    }\\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\\n    var diagram = {\\n      cells: d3_geom_voronoiCells,\\n      edges: d3_geom_voronoiEdges\\n    };\\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\\n    return diagram;\\n  }\\n  function d3_geom_voronoiVertexOrder(a, b) {\\n    return b.y - a.y || b.x - a.x;\\n  }\\n  d3.geom.voronoi = function(points) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\\n    if (points) return voronoi(points);\\n    function voronoi(data) {\\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\\n          var s = e.start();\\n          return [ s.x, s.y ];\\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\\n        polygon.point = data[i];\\n      });\\n      return polygons;\\n    }\\n    function sites(data) {\\n      return data.map(function(d, i) {\\n        return {\\n          x: Math.round(fx(d, i) / ε) * ε,\\n          y: Math.round(fy(d, i) / ε) * ε,\\n          i: i\\n        };\\n      });\\n    }\\n    voronoi.links = function(data) {\\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\\n        return edge.l && edge.r;\\n      }).map(function(edge) {\\n        return {\\n          source: data[edge.l.i],\\n          target: data[edge.r.i]\\n        };\\n      });\\n    };\\n    voronoi.triangles = function(data) {\\n      var triangles = [];\\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\\n        while (++j < m) {\\n          e0 = e1;\\n          s0 = s1;\\n          e1 = edges[j].edge;\\n          s1 = e1.l === site ? e1.r : e1.l;\\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\\n          }\\n        }\\n      });\\n      return triangles;\\n    };\\n    voronoi.x = function(_) {\\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\\n    };\\n    voronoi.y = function(_) {\\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\\n    };\\n    voronoi.clipExtent = function(_) {\\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\\n      return voronoi;\\n    };\\n    voronoi.size = function(_) {\\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\\n    };\\n    return voronoi;\\n  };\\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\\n  function d3_geom_voronoiTriangleArea(a, b, c) {\\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\\n  }\\n  d3.geom.delaunay = function(vertices) {\\n    return d3.geom.voronoi().triangles(vertices);\\n  };\\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\\n    if (compat = arguments.length) {\\n      x = d3_geom_quadtreeCompatX;\\n      y = d3_geom_quadtreeCompatY;\\n      if (compat === 3) {\\n        y2 = y1;\\n        x2 = x1;\\n        y1 = x1 = 0;\\n      }\\n      return quadtree(points);\\n    }\\n    function quadtree(data) {\\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\\n      if (x1 != null) {\\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\\n      } else {\\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\\n        xs = [], ys = [];\\n        n = data.length;\\n        if (compat) for (i = 0; i < n; ++i) {\\n          d = data[i];\\n          if (d.x < x1_) x1_ = d.x;\\n          if (d.y < y1_) y1_ = d.y;\\n          if (d.x > x2_) x2_ = d.x;\\n          if (d.y > y2_) y2_ = d.y;\\n          xs.push(d.x);\\n          ys.push(d.y);\\n        } else for (i = 0; i < n; ++i) {\\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\\n          if (x_ < x1_) x1_ = x_;\\n          if (y_ < y1_) y1_ = y_;\\n          if (x_ > x2_) x2_ = x_;\\n          if (y_ > y2_) y2_ = y_;\\n          xs.push(x_);\\n          ys.push(y_);\\n        }\\n      }\\n      var dx = x2_ - x1_, dy = y2_ - y1_;\\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\\n      function insert(n, d, x, y, x1, y1, x2, y2) {\\n        if (isNaN(x) || isNaN(y)) return;\\n        if (n.leaf) {\\n          var nx = n.x, ny = n.y;\\n          if (nx != null) {\\n            if (abs(nx - x) + abs(ny - y) < .01) {\\n              insertChild(n, d, x, y, x1, y1, x2, y2);\\n            } else {\\n              var nPoint = n.point;\\n              n.x = n.y = n.point = null;\\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\\n              insertChild(n, d, x, y, x1, y1, x2, y2);\\n            }\\n          } else {\\n            n.x = x, n.y = y, n.point = d;\\n          }\\n        } else {\\n          insertChild(n, d, x, y, x1, y1, x2, y2);\\n        }\\n      }\\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\\n        n.leaf = false;\\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\\n        if (right) x1 = xm; else x2 = xm;\\n        if (below) y1 = ym; else y2 = ym;\\n        insert(n, d, x, y, x1, y1, x2, y2);\\n      }\\n      var root = d3_geom_quadtreeNode();\\n      root.add = function(d) {\\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\\n      };\\n      root.visit = function(f) {\\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\\n      };\\n      root.find = function(point) {\\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\\n      };\\n      i = -1;\\n      if (x1 == null) {\\n        while (++i < n) {\\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\\n        }\\n        --i;\\n      } else data.forEach(root.add);\\n      xs = ys = data = d = null;\\n      return root;\\n    }\\n    quadtree.x = function(_) {\\n      return arguments.length ? (x = _, quadtree) : x;\\n    };\\n    quadtree.y = function(_) {\\n      return arguments.length ? (y = _, quadtree) : y;\\n    };\\n    quadtree.extent = function(_) {\\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \\n      y2 = +_[1][1];\\n      return quadtree;\\n    };\\n    quadtree.size = function(_) {\\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\\n      return quadtree;\\n    };\\n    return quadtree;\\n  };\\n  function d3_geom_quadtreeCompatX(d) {\\n    return d.x;\\n  }\\n  function d3_geom_quadtreeCompatY(d) {\\n    return d.y;\\n  }\\n  function d3_geom_quadtreeNode() {\\n    return {\\n      leaf: true,\\n      nodes: [],\\n      point: null,\\n      x: null,\\n      y: null\\n    };\\n  }\\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\\n    if (!f(node, x1, y1, x2, y2)) {\\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\\n    }\\n  }\\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\\n    var minDistance2 = Infinity, closestPoint;\\n    (function find(node, x1, y1, x2, y2) {\\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\\n      if (point = node.point) {\\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\\n        if (distance2 < minDistance2) {\\n          var distance = Math.sqrt(minDistance2 = distance2);\\n          x0 = x - distance, y0 = y - distance;\\n          x3 = x + distance, y3 = y + distance;\\n          closestPoint = point;\\n        }\\n      }\\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\\n        if (node = children[i & 3]) switch (i & 3) {\\n         case 0:\\n          find(node, x1, y1, xm, ym);\\n          break;\\n\\n         case 1:\\n          find(node, xm, y1, x2, ym);\\n          break;\\n\\n         case 2:\\n          find(node, x1, ym, xm, y2);\\n          break;\\n\\n         case 3:\\n          find(node, xm, ym, x2, y2);\\n          break;\\n        }\\n      }\\n    })(root, x0, y0, x3, y3);\\n    return closestPoint;\\n  }\\n  d3.interpolateRgb = d3_interpolateRgb;\\n  function d3_interpolateRgb(a, b) {\\n    a = d3.rgb(a);\\n    b = d3.rgb(b);\\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\\n    return function(t) {\\n      return \\\"#\\\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\\n    };\\n  }\\n  d3.interpolateObject = d3_interpolateObject;\\n  function d3_interpolateObject(a, b) {\\n    var i = {}, c = {}, k;\\n    for (k in a) {\\n      if (k in b) {\\n        i[k] = d3_interpolate(a[k], b[k]);\\n      } else {\\n        c[k] = a[k];\\n      }\\n    }\\n    for (k in b) {\\n      if (!(k in a)) {\\n        c[k] = b[k];\\n      }\\n    }\\n    return function(t) {\\n      for (k in i) c[k] = i[k](t);\\n      return c;\\n    };\\n  }\\n  d3.interpolateNumber = d3_interpolateNumber;\\n  function d3_interpolateNumber(a, b) {\\n    a = +a, b = +b;\\n    return function(t) {\\n      return a * (1 - t) + b * t;\\n    };\\n  }\\n  d3.interpolateString = d3_interpolateString;\\n  function d3_interpolateString(a, b) {\\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\\n    a = a + \\\"\\\", b = b + \\\"\\\";\\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\\n      if ((bs = bm.index) > bi) {\\n        bs = b.slice(bi, bs);\\n        if (s[i]) s[i] += bs; else s[++i] = bs;\\n      }\\n      if ((am = am[0]) === (bm = bm[0])) {\\n        if (s[i]) s[i] += bm; else s[++i] = bm;\\n      } else {\\n        s[++i] = null;\\n        q.push({\\n          i: i,\\n          x: d3_interpolateNumber(am, bm)\\n        });\\n      }\\n      bi = d3_interpolate_numberB.lastIndex;\\n    }\\n    if (bi < b.length) {\\n      bs = b.slice(bi);\\n      if (s[i]) s[i] += bs; else s[++i] = bs;\\n    }\\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\\n      return b(t) + \\\"\\\";\\n    }) : function() {\\n      return b;\\n    } : (b = q.length, function(t) {\\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\\n      return s.join(\\\"\\\");\\n    });\\n  }\\n  var d3_interpolate_numberA = /[-+]?(?:\\\\d+\\\\.?\\\\d*|\\\\.?\\\\d+)(?:[eE][-+]?\\\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \\\"g\\\");\\n  d3.interpolate = d3_interpolate;\\n  function d3_interpolate(a, b) {\\n    var i = d3.interpolators.length, f;\\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\\n    return f;\\n  }\\n  d3.interpolators = [ function(a, b) {\\n    var t = typeof b;\\n    return (t === \\\"string\\\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\\\(|hsl\\\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \\\"object\\\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\\n  } ];\\n  d3.interpolateArray = d3_interpolateArray;\\n  function d3_interpolateArray(a, b) {\\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\\n    for (;i < na; ++i) c[i] = a[i];\\n    for (;i < nb; ++i) c[i] = b[i];\\n    return function(t) {\\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\\n      return c;\\n    };\\n  }\\n  var d3_ease_default = function() {\\n    return d3_identity;\\n  };\\n  var d3_ease = d3.map({\\n    linear: d3_ease_default,\\n    poly: d3_ease_poly,\\n    quad: function() {\\n      return d3_ease_quad;\\n    },\\n    cubic: function() {\\n      return d3_ease_cubic;\\n    },\\n    sin: function() {\\n      return d3_ease_sin;\\n    },\\n    exp: function() {\\n      return d3_ease_exp;\\n    },\\n    circle: function() {\\n      return d3_ease_circle;\\n    },\\n    elastic: d3_ease_elastic,\\n    back: d3_ease_back,\\n    bounce: function() {\\n      return d3_ease_bounce;\\n    }\\n  });\\n  var d3_ease_mode = d3.map({\\n    \\\"in\\\": d3_identity,\\n    out: d3_ease_reverse,\\n    \\\"in-out\\\": d3_ease_reflect,\\n    \\\"out-in\\\": function(f) {\\n      return d3_ease_reflect(d3_ease_reverse(f));\\n    }\\n  });\\n  d3.ease = function(name) {\\n    var i = name.indexOf(\\\"-\\\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \\\"in\\\";\\n    t = d3_ease.get(t) || d3_ease_default;\\n    m = d3_ease_mode.get(m) || d3_identity;\\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\\n  };\\n  function d3_ease_clamp(f) {\\n    return function(t) {\\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\\n    };\\n  }\\n  function d3_ease_reverse(f) {\\n    return function(t) {\\n      return 1 - f(1 - t);\\n    };\\n  }\\n  function d3_ease_reflect(f) {\\n    return function(t) {\\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\\n    };\\n  }\\n  function d3_ease_quad(t) {\\n    return t * t;\\n  }\\n  function d3_ease_cubic(t) {\\n    return t * t * t;\\n  }\\n  function d3_ease_cubicInOut(t) {\\n    if (t <= 0) return 0;\\n    if (t >= 1) return 1;\\n    var t2 = t * t, t3 = t2 * t;\\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\\n  }\\n  function d3_ease_poly(e) {\\n    return function(t) {\\n      return Math.pow(t, e);\\n    };\\n  }\\n  function d3_ease_sin(t) {\\n    return 1 - Math.cos(t * halfπ);\\n  }\\n  function d3_ease_exp(t) {\\n    return Math.pow(2, 10 * (t - 1));\\n  }\\n  function d3_ease_circle(t) {\\n    return 1 - Math.sqrt(1 - t * t);\\n  }\\n  function d3_ease_elastic(a, p) {\\n    var s;\\n    if (arguments.length < 2) p = .45;\\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\\n    return function(t) {\\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\\n    };\\n  }\\n  function d3_ease_back(s) {\\n    if (!s) s = 1.70158;\\n    return function(t) {\\n      return t * t * ((s + 1) * t - s);\\n    };\\n  }\\n  function d3_ease_bounce(t) {\\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\\n  }\\n  d3.interpolateHcl = d3_interpolateHcl;\\n  function d3_interpolateHcl(a, b) {\\n    a = d3.hcl(a);\\n    b = d3.hcl(b);\\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\\n    return function(t) {\\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \\\"\\\";\\n    };\\n  }\\n  d3.interpolateHsl = d3_interpolateHsl;\\n  function d3_interpolateHsl(a, b) {\\n    a = d3.hsl(a);\\n    b = d3.hsl(b);\\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\\n    return function(t) {\\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \\\"\\\";\\n    };\\n  }\\n  d3.interpolateLab = d3_interpolateLab;\\n  function d3_interpolateLab(a, b) {\\n    a = d3.lab(a);\\n    b = d3.lab(b);\\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\\n    return function(t) {\\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \\\"\\\";\\n    };\\n  }\\n  d3.interpolateRound = d3_interpolateRound;\\n  function d3_interpolateRound(a, b) {\\n    b -= a;\\n    return function(t) {\\n      return Math.round(a + b * t);\\n    };\\n  }\\n  d3.transform = function(string) {\\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \\\"g\\\");\\n    return (d3.transform = function(string) {\\n      if (string != null) {\\n        g.setAttribute(\\\"transform\\\", string);\\n        var t = g.transform.baseVal.consolidate();\\n      }\\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\\n    })(string);\\n  };\\n  function d3_transform(m) {\\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\\n      r0[0] *= -1;\\n      r0[1] *= -1;\\n      kx *= -1;\\n      kz *= -1;\\n    }\\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\\n    this.translate = [ m.e, m.f ];\\n    this.scale = [ kx, ky ];\\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\\n  }\\n  d3_transform.prototype.toString = function() {\\n    return \\\"translate(\\\" + this.translate + \\\")rotate(\\\" + this.rotate + \\\")skewX(\\\" + this.skew + \\\")scale(\\\" + this.scale + \\\")\\\";\\n  };\\n  function d3_transformDot(a, b) {\\n    return a[0] * b[0] + a[1] * b[1];\\n  }\\n  function d3_transformNormalize(a) {\\n    var k = Math.sqrt(d3_transformDot(a, a));\\n    if (k) {\\n      a[0] /= k;\\n      a[1] /= k;\\n    }\\n    return k;\\n  }\\n  function d3_transformCombine(a, b, k) {\\n    a[0] += k * b[0];\\n    a[1] += k * b[1];\\n    return a;\\n  }\\n  var d3_transformIdentity = {\\n    a: 1,\\n    b: 0,\\n    c: 0,\\n    d: 1,\\n    e: 0,\\n    f: 0\\n  };\\n  d3.interpolateTransform = d3_interpolateTransform;\\n  function d3_interpolateTransformPop(s) {\\n    return s.length ? s.pop() + \\\",\\\" : \\\"\\\";\\n  }\\n  function d3_interpolateTranslate(ta, tb, s, q) {\\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\\n      var i = s.push(\\\"translate(\\\", null, \\\",\\\", null, \\\")\\\");\\n      q.push({\\n        i: i - 4,\\n        x: d3_interpolateNumber(ta[0], tb[0])\\n      }, {\\n        i: i - 2,\\n        x: d3_interpolateNumber(ta[1], tb[1])\\n      });\\n    } else if (tb[0] || tb[1]) {\\n      s.push(\\\"translate(\\\" + tb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateRotate(ra, rb, s, q) {\\n    if (ra !== rb) {\\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\\n      q.push({\\n        i: s.push(d3_interpolateTransformPop(s) + \\\"rotate(\\\", null, \\\")\\\") - 2,\\n        x: d3_interpolateNumber(ra, rb)\\n      });\\n    } else if (rb) {\\n      s.push(d3_interpolateTransformPop(s) + \\\"rotate(\\\" + rb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateSkew(wa, wb, s, q) {\\n    if (wa !== wb) {\\n      q.push({\\n        i: s.push(d3_interpolateTransformPop(s) + \\\"skewX(\\\", null, \\\")\\\") - 2,\\n        x: d3_interpolateNumber(wa, wb)\\n      });\\n    } else if (wb) {\\n      s.push(d3_interpolateTransformPop(s) + \\\"skewX(\\\" + wb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateScale(ka, kb, s, q) {\\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\\n      var i = s.push(d3_interpolateTransformPop(s) + \\\"scale(\\\", null, \\\",\\\", null, \\\")\\\");\\n      q.push({\\n        i: i - 4,\\n        x: d3_interpolateNumber(ka[0], kb[0])\\n      }, {\\n        i: i - 2,\\n        x: d3_interpolateNumber(ka[1], kb[1])\\n      });\\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\\n      s.push(d3_interpolateTransformPop(s) + \\\"scale(\\\" + kb + \\\")\\\");\\n    }\\n  }\\n  function d3_interpolateTransform(a, b) {\\n    var s = [], q = [];\\n    a = d3.transform(a), b = d3.transform(b);\\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\\n    d3_interpolateSkew(a.skew, b.skew, s, q);\\n    d3_interpolateScale(a.scale, b.scale, s, q);\\n    a = b = null;\\n    return function(t) {\\n      var i = -1, n = q.length, o;\\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\\n      return s.join(\\\"\\\");\\n    };\\n  }\\n  function d3_uninterpolateNumber(a, b) {\\n    b = (b -= a = +a) || 1 / b;\\n    return function(x) {\\n      return (x - a) / b;\\n    };\\n  }\\n  function d3_uninterpolateClamp(a, b) {\\n    b = (b -= a = +a) || 1 / b;\\n    return function(x) {\\n      return Math.max(0, Math.min(1, (x - a) / b));\\n    };\\n  }\\n  d3.layout = {};\\n  d3.layout.bundle = function() {\\n    return function(links) {\\n      var paths = [], i = -1, n = links.length;\\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\\n      return paths;\\n    };\\n  };\\n  function d3_layout_bundlePath(link) {\\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\\n    while (start !== lca) {\\n      start = start.parent;\\n      points.push(start);\\n    }\\n    var k = points.length;\\n    while (end !== lca) {\\n      points.splice(k, 0, end);\\n      end = end.parent;\\n    }\\n    return points;\\n  }\\n  function d3_layout_bundleAncestors(node) {\\n    var ancestors = [], parent = node.parent;\\n    while (parent != null) {\\n      ancestors.push(node);\\n      node = parent;\\n      parent = parent.parent;\\n    }\\n    ancestors.push(node);\\n    return ancestors;\\n  }\\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\\n    if (a === b) return a;\\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\\n    while (aNode === bNode) {\\n      sharedNode = aNode;\\n      aNode = aNodes.pop();\\n      bNode = bNodes.pop();\\n    }\\n    return sharedNode;\\n  }\\n  d3.layout.chord = function() {\\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\\n    function relayout() {\\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\\n      chords = [];\\n      groups = [];\\n      k = 0, i = -1;\\n      while (++i < n) {\\n        x = 0, j = -1;\\n        while (++j < n) {\\n          x += matrix[i][j];\\n        }\\n        groupSums.push(x);\\n        subgroupIndex.push(d3.range(n));\\n        k += x;\\n      }\\n      if (sortGroups) {\\n        groupIndex.sort(function(a, b) {\\n          return sortGroups(groupSums[a], groupSums[b]);\\n        });\\n      }\\n      if (sortSubgroups) {\\n        subgroupIndex.forEach(function(d, i) {\\n          d.sort(function(a, b) {\\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\\n          });\\n        });\\n      }\\n      k = (τ - padding * n) / k;\\n      x = 0, i = -1;\\n      while (++i < n) {\\n        x0 = x, j = -1;\\n        while (++j < n) {\\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\\n          subgroups[di + \\\"-\\\" + dj] = {\\n            index: di,\\n            subindex: dj,\\n            startAngle: a0,\\n            endAngle: a1,\\n            value: v\\n          };\\n        }\\n        groups[di] = {\\n          index: di,\\n          startAngle: x0,\\n          endAngle: x,\\n          value: groupSums[di]\\n        };\\n        x += padding;\\n      }\\n      i = -1;\\n      while (++i < n) {\\n        j = i - 1;\\n        while (++j < n) {\\n          var source = subgroups[i + \\\"-\\\" + j], target = subgroups[j + \\\"-\\\" + i];\\n          if (source.value || target.value) {\\n            chords.push(source.value < target.value ? {\\n              source: target,\\n              target: source\\n            } : {\\n              source: source,\\n              target: target\\n            });\\n          }\\n        }\\n      }\\n      if (sortChords) resort();\\n    }\\n    function resort() {\\n      chords.sort(function(a, b) {\\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\\n      });\\n    }\\n    chord.matrix = function(x) {\\n      if (!arguments.length) return matrix;\\n      n = (matrix = x) && matrix.length;\\n      chords = groups = null;\\n      return chord;\\n    };\\n    chord.padding = function(x) {\\n      if (!arguments.length) return padding;\\n      padding = x;\\n      chords = groups = null;\\n      return chord;\\n    };\\n    chord.sortGroups = function(x) {\\n      if (!arguments.length) return sortGroups;\\n      sortGroups = x;\\n      chords = groups = null;\\n      return chord;\\n    };\\n    chord.sortSubgroups = function(x) {\\n      if (!arguments.length) return sortSubgroups;\\n      sortSubgroups = x;\\n      chords = null;\\n      return chord;\\n    };\\n    chord.sortChords = function(x) {\\n      if (!arguments.length) return sortChords;\\n      sortChords = x;\\n      if (chords) resort();\\n      return chord;\\n    };\\n    chord.chords = function() {\\n      if (!chords) relayout();\\n      return chords;\\n    };\\n    chord.groups = function() {\\n      if (!groups) relayout();\\n      return groups;\\n    };\\n    return chord;\\n  };\\n  d3.layout.force = function() {\\n    var force = {}, event = d3.dispatch(\\\"start\\\", \\\"tick\\\", \\\"end\\\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\\n    function repulse(node) {\\n      return function(quad, x1, _, x2) {\\n        if (quad.point !== node) {\\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\\n          if (dw * dw / theta2 < dn) {\\n            if (dn < chargeDistance2) {\\n              var k = quad.charge / dn;\\n              node.px -= dx * k;\\n              node.py -= dy * k;\\n            }\\n            return true;\\n          }\\n          if (quad.point && dn && dn < chargeDistance2) {\\n            var k = quad.pointCharge / dn;\\n            node.px -= dx * k;\\n            node.py -= dy * k;\\n          }\\n        }\\n        return !quad.charge;\\n      };\\n    }\\n    force.tick = function() {\\n      if ((alpha *= .99) < .005) {\\n        timer = null;\\n        event.end({\\n          type: \\\"end\\\",\\n          alpha: alpha = 0\\n        });\\n        return true;\\n      }\\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\\n      for (i = 0; i < m; ++i) {\\n        o = links[i];\\n        s = o.source;\\n        t = o.target;\\n        x = t.x - s.x;\\n        y = t.y - s.y;\\n        if (l = x * x + y * y) {\\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\\n          x *= l;\\n          y *= l;\\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\\n          t.y -= y * k;\\n          s.x += x * (k = 1 - k);\\n          s.y += y * k;\\n        }\\n      }\\n      if (k = alpha * gravity) {\\n        x = size[0] / 2;\\n        y = size[1] / 2;\\n        i = -1;\\n        if (k) while (++i < n) {\\n          o = nodes[i];\\n          o.x += (x - o.x) * k;\\n          o.y += (y - o.y) * k;\\n        }\\n      }\\n      if (charge) {\\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\\n        i = -1;\\n        while (++i < n) {\\n          if (!(o = nodes[i]).fixed) {\\n            q.visit(repulse(o));\\n          }\\n        }\\n      }\\n      i = -1;\\n      while (++i < n) {\\n        o = nodes[i];\\n        if (o.fixed) {\\n          o.x = o.px;\\n          o.y = o.py;\\n        } else {\\n          o.x -= (o.px - (o.px = o.x)) * friction;\\n          o.y -= (o.py - (o.py = o.y)) * friction;\\n        }\\n      }\\n      event.tick({\\n        type: \\\"tick\\\",\\n        alpha: alpha\\n      });\\n    };\\n    force.nodes = function(x) {\\n      if (!arguments.length) return nodes;\\n      nodes = x;\\n      return force;\\n    };\\n    force.links = function(x) {\\n      if (!arguments.length) return links;\\n      links = x;\\n      return force;\\n    };\\n    force.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = x;\\n      return force;\\n    };\\n    force.linkDistance = function(x) {\\n      if (!arguments.length) return linkDistance;\\n      linkDistance = typeof x === \\\"function\\\" ? x : +x;\\n      return force;\\n    };\\n    force.distance = force.linkDistance;\\n    force.linkStrength = function(x) {\\n      if (!arguments.length) return linkStrength;\\n      linkStrength = typeof x === \\\"function\\\" ? x : +x;\\n      return force;\\n    };\\n    force.friction = function(x) {\\n      if (!arguments.length) return friction;\\n      friction = +x;\\n      return force;\\n    };\\n    force.charge = function(x) {\\n      if (!arguments.length) return charge;\\n      charge = typeof x === \\\"function\\\" ? x : +x;\\n      return force;\\n    };\\n    force.chargeDistance = function(x) {\\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\\n      chargeDistance2 = x * x;\\n      return force;\\n    };\\n    force.gravity = function(x) {\\n      if (!arguments.length) return gravity;\\n      gravity = +x;\\n      return force;\\n    };\\n    force.theta = function(x) {\\n      if (!arguments.length) return Math.sqrt(theta2);\\n      theta2 = x * x;\\n      return force;\\n    };\\n    force.alpha = function(x) {\\n      if (!arguments.length) return alpha;\\n      x = +x;\\n      if (alpha) {\\n        if (x > 0) {\\n          alpha = x;\\n        } else {\\n          timer.c = null, timer.t = NaN, timer = null;\\n          event.end({\\n            type: \\\"end\\\",\\n            alpha: alpha = 0\\n          });\\n        }\\n      } else if (x > 0) {\\n        event.start({\\n          type: \\\"start\\\",\\n          alpha: alpha = x\\n        });\\n        timer = d3_timer(force.tick);\\n      }\\n      return force;\\n    };\\n    force.start = function() {\\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\\n      for (i = 0; i < n; ++i) {\\n        (o = nodes[i]).index = i;\\n        o.weight = 0;\\n      }\\n      for (i = 0; i < m; ++i) {\\n        o = links[i];\\n        if (typeof o.source == \\\"number\\\") o.source = nodes[o.source];\\n        if (typeof o.target == \\\"number\\\") o.target = nodes[o.target];\\n        ++o.source.weight;\\n        ++o.target.weight;\\n      }\\n      for (i = 0; i < n; ++i) {\\n        o = nodes[i];\\n        if (isNaN(o.x)) o.x = position(\\\"x\\\", w);\\n        if (isNaN(o.y)) o.y = position(\\\"y\\\", h);\\n        if (isNaN(o.px)) o.px = o.x;\\n        if (isNaN(o.py)) o.py = o.y;\\n      }\\n      distances = [];\\n      if (typeof linkDistance === \\\"function\\\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\\n      strengths = [];\\n      if (typeof linkStrength === \\\"function\\\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\\n      charges = [];\\n      if (typeof charge === \\\"function\\\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\\n      function position(dimension, size) {\\n        if (!neighbors) {\\n          neighbors = new Array(n);\\n          for (j = 0; j < n; ++j) {\\n            neighbors[j] = [];\\n          }\\n          for (j = 0; j < m; ++j) {\\n            var o = links[j];\\n            neighbors[o.source.index].push(o.target);\\n            neighbors[o.target.index].push(o.source);\\n          }\\n        }\\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\\n        return Math.random() * size;\\n      }\\n      return force.resume();\\n    };\\n    force.resume = function() {\\n      return force.alpha(.1);\\n    };\\n    force.stop = function() {\\n      return force.alpha(0);\\n    };\\n    force.drag = function() {\\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\\\"dragstart.force\\\", d3_layout_forceDragstart).on(\\\"drag.force\\\", dragmove).on(\\\"dragend.force\\\", d3_layout_forceDragend);\\n      if (!arguments.length) return drag;\\n      this.on(\\\"mouseover.force\\\", d3_layout_forceMouseover).on(\\\"mouseout.force\\\", d3_layout_forceMouseout).call(drag);\\n    };\\n    function dragmove(d) {\\n      d.px = d3.event.x, d.py = d3.event.y;\\n      force.resume();\\n    }\\n    return d3.rebind(force, event, \\\"on\\\");\\n  };\\n  function d3_layout_forceDragstart(d) {\\n    d.fixed |= 2;\\n  }\\n  function d3_layout_forceDragend(d) {\\n    d.fixed &= ~6;\\n  }\\n  function d3_layout_forceMouseover(d) {\\n    d.fixed |= 4;\\n    d.px = d.x, d.py = d.y;\\n  }\\n  function d3_layout_forceMouseout(d) {\\n    d.fixed &= ~4;\\n  }\\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\\n    var cx = 0, cy = 0;\\n    quad.charge = 0;\\n    if (!quad.leaf) {\\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\\n      while (++i < n) {\\n        c = nodes[i];\\n        if (c == null) continue;\\n        d3_layout_forceAccumulate(c, alpha, charges);\\n        quad.charge += c.charge;\\n        cx += c.charge * c.cx;\\n        cy += c.charge * c.cy;\\n      }\\n    }\\n    if (quad.point) {\\n      if (!quad.leaf) {\\n        quad.point.x += Math.random() - .5;\\n        quad.point.y += Math.random() - .5;\\n      }\\n      var k = alpha * charges[quad.point.index];\\n      quad.charge += quad.pointCharge = k;\\n      cx += k * quad.point.x;\\n      cy += k * quad.point.y;\\n    }\\n    quad.cx = cx / quad.charge;\\n    quad.cy = cy / quad.charge;\\n  }\\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\\n  d3.layout.hierarchy = function() {\\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\\n    function hierarchy(root) {\\n      var stack = [ root ], nodes = [], node;\\n      root.depth = 0;\\n      while ((node = stack.pop()) != null) {\\n        nodes.push(node);\\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\\n          var n, childs, child;\\n          while (--n >= 0) {\\n            stack.push(child = childs[n]);\\n            child.parent = node;\\n            child.depth = node.depth + 1;\\n          }\\n          if (value) node.value = 0;\\n          node.children = childs;\\n        } else {\\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\\n          delete node.children;\\n        }\\n      }\\n      d3_layout_hierarchyVisitAfter(root, function(node) {\\n        var childs, parent;\\n        if (sort && (childs = node.children)) childs.sort(sort);\\n        if (value && (parent = node.parent)) parent.value += node.value;\\n      });\\n      return nodes;\\n    }\\n    hierarchy.sort = function(x) {\\n      if (!arguments.length) return sort;\\n      sort = x;\\n      return hierarchy;\\n    };\\n    hierarchy.children = function(x) {\\n      if (!arguments.length) return children;\\n      children = x;\\n      return hierarchy;\\n    };\\n    hierarchy.value = function(x) {\\n      if (!arguments.length) return value;\\n      value = x;\\n      return hierarchy;\\n    };\\n    hierarchy.revalue = function(root) {\\n      if (value) {\\n        d3_layout_hierarchyVisitBefore(root, function(node) {\\n          if (node.children) node.value = 0;\\n        });\\n        d3_layout_hierarchyVisitAfter(root, function(node) {\\n          var parent;\\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\\n          if (parent = node.parent) parent.value += node.value;\\n        });\\n      }\\n      return root;\\n    };\\n    return hierarchy;\\n  };\\n  function d3_layout_hierarchyRebind(object, hierarchy) {\\n    d3.rebind(object, hierarchy, \\\"sort\\\", \\\"children\\\", \\\"value\\\");\\n    object.nodes = object;\\n    object.links = d3_layout_hierarchyLinks;\\n    return object;\\n  }\\n  function d3_layout_hierarchyVisitBefore(node, callback) {\\n    var nodes = [ node ];\\n    while ((node = nodes.pop()) != null) {\\n      callback(node);\\n      if ((children = node.children) && (n = children.length)) {\\n        var n, children;\\n        while (--n >= 0) nodes.push(children[n]);\\n      }\\n    }\\n  }\\n  function d3_layout_hierarchyVisitAfter(node, callback) {\\n    var nodes = [ node ], nodes2 = [];\\n    while ((node = nodes.pop()) != null) {\\n      nodes2.push(node);\\n      if ((children = node.children) && (n = children.length)) {\\n        var i = -1, n, children;\\n        while (++i < n) nodes.push(children[i]);\\n      }\\n    }\\n    while ((node = nodes2.pop()) != null) {\\n      callback(node);\\n    }\\n  }\\n  function d3_layout_hierarchyChildren(d) {\\n    return d.children;\\n  }\\n  function d3_layout_hierarchyValue(d) {\\n    return d.value;\\n  }\\n  function d3_layout_hierarchySort(a, b) {\\n    return b.value - a.value;\\n  }\\n  function d3_layout_hierarchyLinks(nodes) {\\n    return d3.merge(nodes.map(function(parent) {\\n      return (parent.children || []).map(function(child) {\\n        return {\\n          source: parent,\\n          target: child\\n        };\\n      });\\n    }));\\n  }\\n  d3.layout.partition = function() {\\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\\n    function position(node, x, dx, dy) {\\n      var children = node.children;\\n      node.x = x;\\n      node.y = node.depth * dy;\\n      node.dx = dx;\\n      node.dy = dy;\\n      if (children && (n = children.length)) {\\n        var i = -1, n, c, d;\\n        dx = node.value ? dx / node.value : 0;\\n        while (++i < n) {\\n          position(c = children[i], x, d = c.value * dx, dy);\\n          x += d;\\n        }\\n      }\\n    }\\n    function depth(node) {\\n      var children = node.children, d = 0;\\n      if (children && (n = children.length)) {\\n        var i = -1, n;\\n        while (++i < n) d = Math.max(d, depth(children[i]));\\n      }\\n      return 1 + d;\\n    }\\n    function partition(d, i) {\\n      var nodes = hierarchy.call(this, d, i);\\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\\n      return nodes;\\n    }\\n    partition.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = x;\\n      return partition;\\n    };\\n    return d3_layout_hierarchyRebind(partition, hierarchy);\\n  };\\n  d3.layout.pie = function() {\\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\\n    function pie(data) {\\n      var n = data.length, values = data.map(function(d, i) {\\n        return +value.call(pie, d, i);\\n      }), a = +(typeof startAngle === \\\"function\\\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \\\"function\\\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \\\"function\\\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\\n        return values[j] - values[i];\\n      } : function(i, j) {\\n        return sort(data[i], data[j]);\\n      });\\n      index.forEach(function(i) {\\n        arcs[i] = {\\n          data: data[i],\\n          value: v = values[i],\\n          startAngle: a,\\n          endAngle: a += v * k + pa,\\n          padAngle: p\\n        };\\n      });\\n      return arcs;\\n    }\\n    pie.value = function(_) {\\n      if (!arguments.length) return value;\\n      value = _;\\n      return pie;\\n    };\\n    pie.sort = function(_) {\\n      if (!arguments.length) return sort;\\n      sort = _;\\n      return pie;\\n    };\\n    pie.startAngle = function(_) {\\n      if (!arguments.length) return startAngle;\\n      startAngle = _;\\n      return pie;\\n    };\\n    pie.endAngle = function(_) {\\n      if (!arguments.length) return endAngle;\\n      endAngle = _;\\n      return pie;\\n    };\\n    pie.padAngle = function(_) {\\n      if (!arguments.length) return padAngle;\\n      padAngle = _;\\n      return pie;\\n    };\\n    return pie;\\n  };\\n  var d3_layout_pieSortByValue = {};\\n  d3.layout.stack = function() {\\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\\n    function stack(data, index) {\\n      if (!(n = data.length)) return data;\\n      var series = data.map(function(d, i) {\\n        return values.call(stack, d, i);\\n      });\\n      var points = series.map(function(d) {\\n        return d.map(function(v, i) {\\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\\n        });\\n      });\\n      var orders = order.call(stack, points, index);\\n      series = d3.permute(series, orders);\\n      points = d3.permute(points, orders);\\n      var offsets = offset.call(stack, points, index);\\n      var m = series[0].length, n, i, j, o;\\n      for (j = 0; j < m; ++j) {\\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\\n        for (i = 1; i < n; ++i) {\\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\\n        }\\n      }\\n      return data;\\n    }\\n    stack.values = function(x) {\\n      if (!arguments.length) return values;\\n      values = x;\\n      return stack;\\n    };\\n    stack.order = function(x) {\\n      if (!arguments.length) return order;\\n      order = typeof x === \\\"function\\\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\\n      return stack;\\n    };\\n    stack.offset = function(x) {\\n      if (!arguments.length) return offset;\\n      offset = typeof x === \\\"function\\\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\\n      return stack;\\n    };\\n    stack.x = function(z) {\\n      if (!arguments.length) return x;\\n      x = z;\\n      return stack;\\n    };\\n    stack.y = function(z) {\\n      if (!arguments.length) return y;\\n      y = z;\\n      return stack;\\n    };\\n    stack.out = function(z) {\\n      if (!arguments.length) return out;\\n      out = z;\\n      return stack;\\n    };\\n    return stack;\\n  };\\n  function d3_layout_stackX(d) {\\n    return d.x;\\n  }\\n  function d3_layout_stackY(d) {\\n    return d.y;\\n  }\\n  function d3_layout_stackOut(d, y0, y) {\\n    d.y0 = y0;\\n    d.y = y;\\n  }\\n  var d3_layout_stackOrders = d3.map({\\n    \\\"inside-out\\\": function(data) {\\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\\n        return max[a] - max[b];\\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\\n      for (i = 0; i < n; ++i) {\\n        j = index[i];\\n        if (top < bottom) {\\n          top += sums[j];\\n          tops.push(j);\\n        } else {\\n          bottom += sums[j];\\n          bottoms.push(j);\\n        }\\n      }\\n      return bottoms.reverse().concat(tops);\\n    },\\n    reverse: function(data) {\\n      return d3.range(data.length).reverse();\\n    },\\n    \\\"default\\\": d3_layout_stackOrderDefault\\n  });\\n  var d3_layout_stackOffsets = d3.map({\\n    silhouette: function(data) {\\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\\n      for (j = 0; j < m; ++j) {\\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\\n        if (o > max) max = o;\\n        sums.push(o);\\n      }\\n      for (j = 0; j < m; ++j) {\\n        y0[j] = (max - sums[j]) / 2;\\n      }\\n      return y0;\\n    },\\n    wiggle: function(data) {\\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\\n      y0[0] = o = o0 = 0;\\n      for (j = 1; j < m; ++j) {\\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\\n          }\\n          s2 += s3 * data[i][j][1];\\n        }\\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\\n        if (o < o0) o0 = o;\\n      }\\n      for (j = 0; j < m; ++j) y0[j] -= o0;\\n      return y0;\\n    },\\n    expand: function(data) {\\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\\n      for (j = 0; j < m; ++j) {\\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\\n      }\\n      for (j = 0; j < m; ++j) y0[j] = 0;\\n      return y0;\\n    },\\n    zero: d3_layout_stackOffsetZero\\n  });\\n  function d3_layout_stackOrderDefault(data) {\\n    return d3.range(data.length);\\n  }\\n  function d3_layout_stackOffsetZero(data) {\\n    var j = -1, m = data[0].length, y0 = [];\\n    while (++j < m) y0[j] = 0;\\n    return y0;\\n  }\\n  function d3_layout_stackMaxIndex(array) {\\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\\n    for (;i < n; ++i) {\\n      if ((k = array[i][1]) > v) {\\n        j = i;\\n        v = k;\\n      }\\n    }\\n    return j;\\n  }\\n  function d3_layout_stackReduceSum(d) {\\n    return d.reduce(d3_layout_stackSum, 0);\\n  }\\n  function d3_layout_stackSum(p, d) {\\n    return p + d[1];\\n  }\\n  d3.layout.histogram = function() {\\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\\n    function histogram(data, i) {\\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\\n      while (++i < m) {\\n        bin = bins[i] = [];\\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\\n        bin.y = 0;\\n      }\\n      if (m > 0) {\\n        i = -1;\\n        while (++i < n) {\\n          x = values[i];\\n          if (x >= range[0] && x <= range[1]) {\\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\\n            bin.y += k;\\n            bin.push(data[i]);\\n          }\\n        }\\n      }\\n      return bins;\\n    }\\n    histogram.value = function(x) {\\n      if (!arguments.length) return valuer;\\n      valuer = x;\\n      return histogram;\\n    };\\n    histogram.range = function(x) {\\n      if (!arguments.length) return ranger;\\n      ranger = d3_functor(x);\\n      return histogram;\\n    };\\n    histogram.bins = function(x) {\\n      if (!arguments.length) return binner;\\n      binner = typeof x === \\\"number\\\" ? function(range) {\\n        return d3_layout_histogramBinFixed(range, x);\\n      } : d3_functor(x);\\n      return histogram;\\n    };\\n    histogram.frequency = function(x) {\\n      if (!arguments.length) return frequency;\\n      frequency = !!x;\\n      return histogram;\\n    };\\n    return histogram;\\n  };\\n  function d3_layout_histogramBinSturges(range, values) {\\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\\n  }\\n  function d3_layout_histogramBinFixed(range, n) {\\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\\n    while (++x <= n) f[x] = m * x + b;\\n    return f;\\n  }\\n  function d3_layout_histogramRange(values) {\\n    return [ d3.min(values), d3.max(values) ];\\n  }\\n  d3.layout.pack = function() {\\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\\n    function pack(d, i) {\\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \\\"function\\\" ? radius : function() {\\n        return radius;\\n      };\\n      root.x = root.y = 0;\\n      d3_layout_hierarchyVisitAfter(root, function(d) {\\n        d.r = +r(d.value);\\n      });\\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\\n      if (padding) {\\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\\n        d3_layout_hierarchyVisitAfter(root, function(d) {\\n          d.r += dr;\\n        });\\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\\n        d3_layout_hierarchyVisitAfter(root, function(d) {\\n          d.r -= dr;\\n        });\\n      }\\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\\n      return nodes;\\n    }\\n    pack.size = function(_) {\\n      if (!arguments.length) return size;\\n      size = _;\\n      return pack;\\n    };\\n    pack.radius = function(_) {\\n      if (!arguments.length) return radius;\\n      radius = _ == null || typeof _ === \\\"function\\\" ? _ : +_;\\n      return pack;\\n    };\\n    pack.padding = function(_) {\\n      if (!arguments.length) return padding;\\n      padding = +_;\\n      return pack;\\n    };\\n    return d3_layout_hierarchyRebind(pack, hierarchy);\\n  };\\n  function d3_layout_packSort(a, b) {\\n    return a.value - b.value;\\n  }\\n  function d3_layout_packInsert(a, b) {\\n    var c = a._pack_next;\\n    a._pack_next = b;\\n    b._pack_prev = a;\\n    b._pack_next = c;\\n    c._pack_prev = b;\\n  }\\n  function d3_layout_packSplice(a, b) {\\n    a._pack_next = b;\\n    b._pack_prev = a;\\n  }\\n  function d3_layout_packIntersects(a, b) {\\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\\n    return .999 * dr * dr > dx * dx + dy * dy;\\n  }\\n  function d3_layout_packSiblings(node) {\\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\\n    function bound(node) {\\n      xMin = Math.min(node.x - node.r, xMin);\\n      xMax = Math.max(node.x + node.r, xMax);\\n      yMin = Math.min(node.y - node.r, yMin);\\n      yMax = Math.max(node.y + node.r, yMax);\\n    }\\n    nodes.forEach(d3_layout_packLink);\\n    a = nodes[0];\\n    a.x = -a.r;\\n    a.y = 0;\\n    bound(a);\\n    if (n > 1) {\\n      b = nodes[1];\\n      b.x = b.r;\\n      b.y = 0;\\n      bound(b);\\n      if (n > 2) {\\n        c = nodes[2];\\n        d3_layout_packPlace(a, b, c);\\n        bound(c);\\n        d3_layout_packInsert(a, c);\\n        a._pack_prev = c;\\n        d3_layout_packInsert(c, b);\\n        b = a._pack_next;\\n        for (i = 3; i < n; i++) {\\n          d3_layout_packPlace(a, b, c = nodes[i]);\\n          var isect = 0, s1 = 1, s2 = 1;\\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\\n            if (d3_layout_packIntersects(j, c)) {\\n              isect = 1;\\n              break;\\n            }\\n          }\\n          if (isect == 1) {\\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\\n              if (d3_layout_packIntersects(k, c)) {\\n                break;\\n              }\\n            }\\n          }\\n          if (isect) {\\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\\n            i--;\\n          } else {\\n            d3_layout_packInsert(a, c);\\n            b = c;\\n            bound(c);\\n          }\\n        }\\n      }\\n    }\\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\\n    for (i = 0; i < n; i++) {\\n      c = nodes[i];\\n      c.x -= cx;\\n      c.y -= cy;\\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\\n    }\\n    node.r = cr;\\n    nodes.forEach(d3_layout_packUnlink);\\n  }\\n  function d3_layout_packLink(node) {\\n    node._pack_next = node._pack_prev = node;\\n  }\\n  function d3_layout_packUnlink(node) {\\n    delete node._pack_next;\\n    delete node._pack_prev;\\n  }\\n  function d3_layout_packTransform(node, x, y, k) {\\n    var children = node.children;\\n    node.x = x += k * node.x;\\n    node.y = y += k * node.y;\\n    node.r *= k;\\n    if (children) {\\n      var i = -1, n = children.length;\\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\\n    }\\n  }\\n  function d3_layout_packPlace(a, b, c) {\\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\\n    if (db && (dx || dy)) {\\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\\n      da *= da;\\n      db *= db;\\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\\n      c.x = a.x + x * dx + y * dy;\\n      c.y = a.y + x * dy - y * dx;\\n    } else {\\n      c.x = a.x + db;\\n      c.y = a.y;\\n    }\\n  }\\n  d3.layout.tree = function() {\\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\\n    function tree(d, i) {\\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\\n        var left = root0, right = root0, bottom = root0;\\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\\n          if (node.x < left.x) left = node;\\n          if (node.x > right.x) right = node;\\n          if (node.depth > bottom.depth) bottom = node;\\n        });\\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\\n          node.x = (node.x + tx) * kx;\\n          node.y = node.depth * ky;\\n        });\\n      }\\n      return nodes;\\n    }\\n    function wrapTree(root0) {\\n      var root1 = {\\n        A: null,\\n        children: [ root0 ]\\n      }, queue = [ root1 ], node1;\\n      while ((node1 = queue.pop()) != null) {\\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\\n          queue.push((children[i] = child = {\\n            _: children[i],\\n            parent: node1,\\n            children: (child = children[i].children) && child.slice() || [],\\n            A: null,\\n            a: null,\\n            z: 0,\\n            m: 0,\\n            c: 0,\\n            s: 0,\\n            t: null,\\n            i: i\\n          }).a = child);\\n        }\\n      }\\n      return root1.children[0];\\n    }\\n    function firstWalk(v) {\\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\\n      if (children.length) {\\n        d3_layout_treeShift(v);\\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\\n        if (w) {\\n          v.z = w.z + separation(v._, w._);\\n          v.m = v.z - midpoint;\\n        } else {\\n          v.z = midpoint;\\n        }\\n      } else if (w) {\\n        v.z = w.z + separation(v._, w._);\\n      }\\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\\n    }\\n    function secondWalk(v) {\\n      v._.x = v.z + v.parent.m;\\n      v.m += v.parent.m;\\n    }\\n    function apportion(v, w, ancestor) {\\n      if (w) {\\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\\n          vom = d3_layout_treeLeft(vom);\\n          vop = d3_layout_treeRight(vop);\\n          vop.a = v;\\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\\n          if (shift > 0) {\\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\\n            sip += shift;\\n            sop += shift;\\n          }\\n          sim += vim.m;\\n          sip += vip.m;\\n          som += vom.m;\\n          sop += vop.m;\\n        }\\n        if (vim && !d3_layout_treeRight(vop)) {\\n          vop.t = vim;\\n          vop.m += sim - sop;\\n        }\\n        if (vip && !d3_layout_treeLeft(vom)) {\\n          vom.t = vip;\\n          vom.m += sip - som;\\n          ancestor = v;\\n        }\\n      }\\n      return ancestor;\\n    }\\n    function sizeNode(node) {\\n      node.x *= size[0];\\n      node.y = node.depth * size[1];\\n    }\\n    tree.separation = function(x) {\\n      if (!arguments.length) return separation;\\n      separation = x;\\n      return tree;\\n    };\\n    tree.size = function(x) {\\n      if (!arguments.length) return nodeSize ? null : size;\\n      nodeSize = (size = x) == null ? sizeNode : null;\\n      return tree;\\n    };\\n    tree.nodeSize = function(x) {\\n      if (!arguments.length) return nodeSize ? size : null;\\n      nodeSize = (size = x) == null ? null : sizeNode;\\n      return tree;\\n    };\\n    return d3_layout_hierarchyRebind(tree, hierarchy);\\n  };\\n  function d3_layout_treeSeparation(a, b) {\\n    return a.parent == b.parent ? 1 : 2;\\n  }\\n  function d3_layout_treeLeft(v) {\\n    var children = v.children;\\n    return children.length ? children[0] : v.t;\\n  }\\n  function d3_layout_treeRight(v) {\\n    var children = v.children, n;\\n    return (n = children.length) ? children[n - 1] : v.t;\\n  }\\n  function d3_layout_treeMove(wm, wp, shift) {\\n    var change = shift / (wp.i - wm.i);\\n    wp.c -= change;\\n    wp.s += shift;\\n    wm.c += change;\\n    wp.z += shift;\\n    wp.m += shift;\\n  }\\n  function d3_layout_treeShift(v) {\\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\\n    while (--i >= 0) {\\n      w = children[i];\\n      w.z += shift;\\n      w.m += shift;\\n      shift += w.s + (change += w.c);\\n    }\\n  }\\n  function d3_layout_treeAncestor(vim, v, ancestor) {\\n    return vim.a.parent === v.parent ? vim.a : ancestor;\\n  }\\n  d3.layout.cluster = function() {\\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\\n    function cluster(d, i) {\\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\\n      d3_layout_hierarchyVisitAfter(root, function(node) {\\n        var children = node.children;\\n        if (children && children.length) {\\n          node.x = d3_layout_clusterX(children);\\n          node.y = d3_layout_clusterY(children);\\n        } else {\\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\\n          node.y = 0;\\n          previousNode = node;\\n        }\\n      });\\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\\n        node.x = (node.x - root.x) * size[0];\\n        node.y = (root.y - node.y) * size[1];\\n      } : function(node) {\\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\\n      });\\n      return nodes;\\n    }\\n    cluster.separation = function(x) {\\n      if (!arguments.length) return separation;\\n      separation = x;\\n      return cluster;\\n    };\\n    cluster.size = function(x) {\\n      if (!arguments.length) return nodeSize ? null : size;\\n      nodeSize = (size = x) == null;\\n      return cluster;\\n    };\\n    cluster.nodeSize = function(x) {\\n      if (!arguments.length) return nodeSize ? size : null;\\n      nodeSize = (size = x) != null;\\n      return cluster;\\n    };\\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\\n  };\\n  function d3_layout_clusterY(children) {\\n    return 1 + d3.max(children, function(child) {\\n      return child.y;\\n    });\\n  }\\n  function d3_layout_clusterX(children) {\\n    return children.reduce(function(x, child) {\\n      return x + child.x;\\n    }, 0) / children.length;\\n  }\\n  function d3_layout_clusterLeft(node) {\\n    var children = node.children;\\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\\n  }\\n  function d3_layout_clusterRight(node) {\\n    var children = node.children, n;\\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\\n  }\\n  d3.layout.treemap = function() {\\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \\\"squarify\\\", ratio = .5 * (1 + Math.sqrt(5));\\n    function scale(children, k) {\\n      var i = -1, n = children.length, child, area;\\n      while (++i < n) {\\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\\n      }\\n    }\\n    function squarify(node) {\\n      var children = node.children;\\n      if (children && children.length) {\\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \\\"slice\\\" ? rect.dx : mode === \\\"dice\\\" ? rect.dy : mode === \\\"slice-dice\\\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\\n        scale(remaining, rect.dx * rect.dy / node.value);\\n        row.area = 0;\\n        while ((n = remaining.length) > 0) {\\n          row.push(child = remaining[n - 1]);\\n          row.area += child.area;\\n          if (mode !== \\\"squarify\\\" || (score = worst(row, u)) <= best) {\\n            remaining.pop();\\n            best = score;\\n          } else {\\n            row.area -= row.pop().area;\\n            position(row, u, rect, false);\\n            u = Math.min(rect.dx, rect.dy);\\n            row.length = row.area = 0;\\n            best = Infinity;\\n          }\\n        }\\n        if (row.length) {\\n          position(row, u, rect, true);\\n          row.length = row.area = 0;\\n        }\\n        children.forEach(squarify);\\n      }\\n    }\\n    function stickify(node) {\\n      var children = node.children;\\n      if (children && children.length) {\\n        var rect = pad(node), remaining = children.slice(), child, row = [];\\n        scale(remaining, rect.dx * rect.dy / node.value);\\n        row.area = 0;\\n        while (child = remaining.pop()) {\\n          row.push(child);\\n          row.area += child.area;\\n          if (child.z != null) {\\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\\n            row.length = row.area = 0;\\n          }\\n        }\\n        children.forEach(stickify);\\n      }\\n    }\\n    function worst(row, u) {\\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\\n      while (++i < n) {\\n        if (!(r = row[i].area)) continue;\\n        if (r < rmin) rmin = r;\\n        if (r > rmax) rmax = r;\\n      }\\n      s *= s;\\n      u *= u;\\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\\n    }\\n    function position(row, u, rect, flush) {\\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\\n      if (u == rect.dx) {\\n        if (flush || v > rect.dy) v = rect.dy;\\n        while (++i < n) {\\n          o = row[i];\\n          o.x = x;\\n          o.y = y;\\n          o.dy = v;\\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\\n        }\\n        o.z = true;\\n        o.dx += rect.x + rect.dx - x;\\n        rect.y += v;\\n        rect.dy -= v;\\n      } else {\\n        if (flush || v > rect.dx) v = rect.dx;\\n        while (++i < n) {\\n          o = row[i];\\n          o.x = x;\\n          o.y = y;\\n          o.dx = v;\\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\\n        }\\n        o.z = false;\\n        o.dy += rect.y + rect.dy - y;\\n        rect.x += v;\\n        rect.dx -= v;\\n      }\\n    }\\n    function treemap(d) {\\n      var nodes = stickies || hierarchy(d), root = nodes[0];\\n      root.x = root.y = 0;\\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\\n      if (stickies) hierarchy.revalue(root);\\n      scale([ root ], root.dx * root.dy / root.value);\\n      (stickies ? stickify : squarify)(root);\\n      if (sticky) stickies = nodes;\\n      return nodes;\\n    }\\n    treemap.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = x;\\n      return treemap;\\n    };\\n    treemap.padding = function(x) {\\n      if (!arguments.length) return padding;\\n      function padFunction(node) {\\n        var p = x.call(treemap, node, node.depth);\\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \\\"number\\\" ? [ p, p, p, p ] : p);\\n      }\\n      function padConstant(node) {\\n        return d3_layout_treemapPad(node, x);\\n      }\\n      var type;\\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \\\"function\\\" ? padFunction : type === \\\"number\\\" ? (x = [ x, x, x, x ], \\n      padConstant) : padConstant;\\n      return treemap;\\n    };\\n    treemap.round = function(x) {\\n      if (!arguments.length) return round != Number;\\n      round = x ? Math.round : Number;\\n      return treemap;\\n    };\\n    treemap.sticky = function(x) {\\n      if (!arguments.length) return sticky;\\n      sticky = x;\\n      stickies = null;\\n      return treemap;\\n    };\\n    treemap.ratio = function(x) {\\n      if (!arguments.length) return ratio;\\n      ratio = x;\\n      return treemap;\\n    };\\n    treemap.mode = function(x) {\\n      if (!arguments.length) return mode;\\n      mode = x + \\\"\\\";\\n      return treemap;\\n    };\\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\\n  };\\n  function d3_layout_treemapPadNull(node) {\\n    return {\\n      x: node.x,\\n      y: node.y,\\n      dx: node.dx,\\n      dy: node.dy\\n    };\\n  }\\n  function d3_layout_treemapPad(node, padding) {\\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\\n    if (dx < 0) {\\n      x += dx / 2;\\n      dx = 0;\\n    }\\n    if (dy < 0) {\\n      y += dy / 2;\\n      dy = 0;\\n    }\\n    return {\\n      x: x,\\n      y: y,\\n      dx: dx,\\n      dy: dy\\n    };\\n  }\\n  d3.random = {\\n    normal: function(µ, σ) {\\n      var n = arguments.length;\\n      if (n < 2) σ = 1;\\n      if (n < 1) µ = 0;\\n      return function() {\\n        var x, y, r;\\n        do {\\n          x = Math.random() * 2 - 1;\\n          y = Math.random() * 2 - 1;\\n          r = x * x + y * y;\\n        } while (!r || r > 1);\\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\\n      };\\n    },\\n    logNormal: function() {\\n      var random = d3.random.normal.apply(d3, arguments);\\n      return function() {\\n        return Math.exp(random());\\n      };\\n    },\\n    bates: function(m) {\\n      var random = d3.random.irwinHall(m);\\n      return function() {\\n        return random() / m;\\n      };\\n    },\\n    irwinHall: function(m) {\\n      return function() {\\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\\n        return s;\\n      };\\n    }\\n  };\\n  d3.scale = {};\\n  function d3_scaleExtent(domain) {\\n    var start = domain[0], stop = domain[domain.length - 1];\\n    return start < stop ? [ start, stop ] : [ stop, start ];\\n  }\\n  function d3_scaleRange(scale) {\\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\\n  }\\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\\n    return function(x) {\\n      return i(u(x));\\n    };\\n  }\\n  function d3_scale_nice(domain, nice) {\\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\\n    if (x1 < x0) {\\n      dx = i0, i0 = i1, i1 = dx;\\n      dx = x0, x0 = x1, x1 = dx;\\n    }\\n    domain[i0] = nice.floor(x0);\\n    domain[i1] = nice.ceil(x1);\\n    return domain;\\n  }\\n  function d3_scale_niceStep(step) {\\n    return step ? {\\n      floor: function(x) {\\n        return Math.floor(x / step) * step;\\n      },\\n      ceil: function(x) {\\n        return Math.ceil(x / step) * step;\\n      }\\n    } : d3_scale_niceIdentity;\\n  }\\n  var d3_scale_niceIdentity = {\\n    floor: d3_identity,\\n    ceil: d3_identity\\n  };\\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\\n    if (domain[k] < domain[0]) {\\n      domain = domain.slice().reverse();\\n      range = range.slice().reverse();\\n    }\\n    while (++j <= k) {\\n      u.push(uninterpolate(domain[j - 1], domain[j]));\\n      i.push(interpolate(range[j - 1], range[j]));\\n    }\\n    return function(x) {\\n      var j = d3.bisect(domain, x, 1, k) - 1;\\n      return i[j](u[j](x));\\n    };\\n  }\\n  d3.scale.linear = function() {\\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\\n  };\\n  function d3_scale_linear(domain, range, interpolate, clamp) {\\n    var output, input;\\n    function rescale() {\\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\\n      output = linear(domain, range, uninterpolate, interpolate);\\n      input = linear(range, domain, uninterpolate, d3_interpolate);\\n      return scale;\\n    }\\n    function scale(x) {\\n      return output(x);\\n    }\\n    scale.invert = function(y) {\\n      return input(y);\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = x.map(Number);\\n      return rescale();\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      return rescale();\\n    };\\n    scale.rangeRound = function(x) {\\n      return scale.range(x).interpolate(d3_interpolateRound);\\n    };\\n    scale.clamp = function(x) {\\n      if (!arguments.length) return clamp;\\n      clamp = x;\\n      return rescale();\\n    };\\n    scale.interpolate = function(x) {\\n      if (!arguments.length) return interpolate;\\n      interpolate = x;\\n      return rescale();\\n    };\\n    scale.ticks = function(m) {\\n      return d3_scale_linearTicks(domain, m);\\n    };\\n    scale.tickFormat = function(m, format) {\\n      return d3_scale_linearTickFormat(domain, m, format);\\n    };\\n    scale.nice = function(m) {\\n      d3_scale_linearNice(domain, m);\\n      return rescale();\\n    };\\n    scale.copy = function() {\\n      return d3_scale_linear(domain, range, interpolate, clamp);\\n    };\\n    return rescale();\\n  }\\n  function d3_scale_linearRebind(scale, linear) {\\n    return d3.rebind(scale, linear, \\\"range\\\", \\\"rangeRound\\\", \\\"interpolate\\\", \\\"clamp\\\");\\n  }\\n  function d3_scale_linearNice(domain, m) {\\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\\n    return domain;\\n  }\\n  function d3_scale_linearTickRange(domain, m) {\\n    if (m == null) m = 10;\\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\\n    extent[0] = Math.ceil(extent[0] / step) * step;\\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\\n    extent[2] = step;\\n    return extent;\\n  }\\n  function d3_scale_linearTicks(domain, m) {\\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\\n  }\\n  function d3_scale_linearTickFormat(domain, m, format) {\\n    var range = d3_scale_linearTickRange(domain, m);\\n    if (format) {\\n      var match = d3_format_re.exec(format);\\n      match.shift();\\n      if (match[8] === \\\"s\\\") {\\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\\n        if (!match[7]) match[7] = \\\".\\\" + d3_scale_linearPrecision(prefix.scale(range[2]));\\n        match[8] = \\\"f\\\";\\n        format = d3.format(match.join(\\\"\\\"));\\n        return function(d) {\\n          return format(prefix.scale(d)) + prefix.symbol;\\n        };\\n      }\\n      if (!match[7]) match[7] = \\\".\\\" + d3_scale_linearFormatPrecision(match[8], range);\\n      format = match.join(\\\"\\\");\\n    } else {\\n      format = \\\",.\\\" + d3_scale_linearPrecision(range[2]) + \\\"f\\\";\\n    }\\n    return d3.format(format);\\n  }\\n  var d3_scale_linearFormatSignificant = {\\n    s: 1,\\n    g: 1,\\n    p: 1,\\n    r: 1,\\n    e: 1\\n  };\\n  function d3_scale_linearPrecision(value) {\\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\\n  }\\n  function d3_scale_linearFormatPrecision(type, range) {\\n    var p = d3_scale_linearPrecision(range[2]);\\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \\\"e\\\") : p - (type === \\\"%\\\") * 2;\\n  }\\n  d3.scale.log = function() {\\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\\n  };\\n  function d3_scale_log(linear, base, positive, domain) {\\n    function log(x) {\\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\\n    }\\n    function pow(x) {\\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\\n    }\\n    function scale(x) {\\n      return linear(log(x));\\n    }\\n    scale.invert = function(x) {\\n      return pow(linear.invert(x));\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      positive = x[0] >= 0;\\n      linear.domain((domain = x.map(Number)).map(log));\\n      return scale;\\n    };\\n    scale.base = function(_) {\\n      if (!arguments.length) return base;\\n      base = +_;\\n      linear.domain(domain.map(log));\\n      return scale;\\n    };\\n    scale.nice = function() {\\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\\n      linear.domain(niced);\\n      domain = niced.map(pow);\\n      return scale;\\n    };\\n    scale.ticks = function() {\\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\\n      if (isFinite(j - i)) {\\n        if (positive) {\\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\\n          ticks.push(pow(i));\\n        } else {\\n          ticks.push(pow(i));\\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\\n        }\\n        for (i = 0; ticks[i] < u; i++) {}\\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\\n        ticks = ticks.slice(i, j);\\n      }\\n      return ticks;\\n    };\\n    scale.tickFormat = function(n, format) {\\n      if (!arguments.length) return d3_scale_logFormat;\\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \\\"function\\\") format = d3.format(format);\\n      var k = Math.max(1, base * n / scale.ticks().length);\\n      return function(d) {\\n        var i = d / pow(Math.round(log(d)));\\n        if (i * base < base - .5) i *= base;\\n        return i <= k ? format(d) : \\\"\\\";\\n      };\\n    };\\n    scale.copy = function() {\\n      return d3_scale_log(linear.copy(), base, positive, domain);\\n    };\\n    return d3_scale_linearRebind(scale, linear);\\n  }\\n  var d3_scale_logFormat = d3.format(\\\".0e\\\"), d3_scale_logNiceNegative = {\\n    floor: function(x) {\\n      return -Math.ceil(-x);\\n    },\\n    ceil: function(x) {\\n      return -Math.floor(-x);\\n    }\\n  };\\n  d3.scale.pow = function() {\\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\\n  };\\n  function d3_scale_pow(linear, exponent, domain) {\\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\\n    function scale(x) {\\n      return linear(powp(x));\\n    }\\n    scale.invert = function(x) {\\n      return powb(linear.invert(x));\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      linear.domain((domain = x.map(Number)).map(powp));\\n      return scale;\\n    };\\n    scale.ticks = function(m) {\\n      return d3_scale_linearTicks(domain, m);\\n    };\\n    scale.tickFormat = function(m, format) {\\n      return d3_scale_linearTickFormat(domain, m, format);\\n    };\\n    scale.nice = function(m) {\\n      return scale.domain(d3_scale_linearNice(domain, m));\\n    };\\n    scale.exponent = function(x) {\\n      if (!arguments.length) return exponent;\\n      powp = d3_scale_powPow(exponent = x);\\n      powb = d3_scale_powPow(1 / exponent);\\n      linear.domain(domain.map(powp));\\n      return scale;\\n    };\\n    scale.copy = function() {\\n      return d3_scale_pow(linear.copy(), exponent, domain);\\n    };\\n    return d3_scale_linearRebind(scale, linear);\\n  }\\n  function d3_scale_powPow(e) {\\n    return function(x) {\\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\\n    };\\n  }\\n  d3.scale.sqrt = function() {\\n    return d3.scale.pow().exponent(.5);\\n  };\\n  d3.scale.ordinal = function() {\\n    return d3_scale_ordinal([], {\\n      t: \\\"range\\\",\\n      a: [ [] ]\\n    });\\n  };\\n  function d3_scale_ordinal(domain, ranger) {\\n    var index, range, rangeBand;\\n    function scale(x) {\\n      return range[((index.get(x) || (ranger.t === \\\"range\\\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\\n    }\\n    function steps(start, step) {\\n      return d3.range(domain.length).map(function(i) {\\n        return start + step * i;\\n      });\\n    }\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = [];\\n      index = new d3_Map();\\n      var i = -1, n = x.length, xi;\\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\\n      return scale[ranger.t].apply(scale, ranger.a);\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      rangeBand = 0;\\n      ranger = {\\n        t: \\\"range\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangePoints = function(x, padding) {\\n      if (arguments.length < 2) padding = 0;\\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \\n      0) : (stop - start) / (domain.length - 1 + padding);\\n      range = steps(start + step * padding / 2, step);\\n      rangeBand = 0;\\n      ranger = {\\n        t: \\\"rangePoints\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeRoundPoints = function(x, padding) {\\n      if (arguments.length < 2) padding = 0;\\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \\n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\\n      rangeBand = 0;\\n      ranger = {\\n        t: \\\"rangeRoundPoints\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeBands = function(x, padding, outerPadding) {\\n      if (arguments.length < 2) padding = 0;\\n      if (arguments.length < 3) outerPadding = padding;\\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\\n      range = steps(start + step * outerPadding, step);\\n      if (reverse) range.reverse();\\n      rangeBand = step * (1 - padding);\\n      ranger = {\\n        t: \\\"rangeBands\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\\n      if (arguments.length < 2) padding = 0;\\n      if (arguments.length < 3) outerPadding = padding;\\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\\n      if (reverse) range.reverse();\\n      rangeBand = Math.round(step * (1 - padding));\\n      ranger = {\\n        t: \\\"rangeRoundBands\\\",\\n        a: arguments\\n      };\\n      return scale;\\n    };\\n    scale.rangeBand = function() {\\n      return rangeBand;\\n    };\\n    scale.rangeExtent = function() {\\n      return d3_scaleExtent(ranger.a[0]);\\n    };\\n    scale.copy = function() {\\n      return d3_scale_ordinal(domain, ranger);\\n    };\\n    return scale.domain(domain);\\n  }\\n  d3.scale.category10 = function() {\\n    return d3.scale.ordinal().range(d3_category10);\\n  };\\n  d3.scale.category20 = function() {\\n    return d3.scale.ordinal().range(d3_category20);\\n  };\\n  d3.scale.category20b = function() {\\n    return d3.scale.ordinal().range(d3_category20b);\\n  };\\n  d3.scale.category20c = function() {\\n    return d3.scale.ordinal().range(d3_category20c);\\n  };\\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\\n  d3.scale.quantile = function() {\\n    return d3_scale_quantile([], []);\\n  };\\n  function d3_scale_quantile(domain, range) {\\n    var thresholds;\\n    function rescale() {\\n      var k = 0, q = range.length;\\n      thresholds = [];\\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\\n      return scale;\\n    }\\n    function scale(x) {\\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\\n    }\\n    scale.domain = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\\n      return rescale();\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      return rescale();\\n    };\\n    scale.quantiles = function() {\\n      return thresholds;\\n    };\\n    scale.invertExtent = function(y) {\\n      y = range.indexOf(y);\\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\\n    };\\n    scale.copy = function() {\\n      return d3_scale_quantile(domain, range);\\n    };\\n    return rescale();\\n  }\\n  d3.scale.quantize = function() {\\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\\n  };\\n  function d3_scale_quantize(x0, x1, range) {\\n    var kx, i;\\n    function scale(x) {\\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\\n    }\\n    function rescale() {\\n      kx = range.length / (x1 - x0);\\n      i = range.length - 1;\\n      return scale;\\n    }\\n    scale.domain = function(x) {\\n      if (!arguments.length) return [ x0, x1 ];\\n      x0 = +x[0];\\n      x1 = +x[x.length - 1];\\n      return rescale();\\n    };\\n    scale.range = function(x) {\\n      if (!arguments.length) return range;\\n      range = x;\\n      return rescale();\\n    };\\n    scale.invertExtent = function(y) {\\n      y = range.indexOf(y);\\n      y = y < 0 ? NaN : y / kx + x0;\\n      return [ y, y + 1 / kx ];\\n    };\\n    scale.copy = function() {\\n      return d3_scale_quantize(x0, x1, range);\\n    };\\n    return rescale();\\n  }\\n  d3.scale.threshold = function() {\\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\\n  };\\n  function d3_scale_threshold(domain, range) {\\n    function scale(x) {\\n      if (x <= x) return range[d3.bisect(domain, x)];\\n    }\\n    scale.domain = function(_) {\\n      if (!arguments.length) return domain;\\n      domain = _;\\n      return scale;\\n    };\\n    scale.range = function(_) {\\n      if (!arguments.length) return range;\\n      range = _;\\n      return scale;\\n    };\\n    scale.invertExtent = function(y) {\\n      y = range.indexOf(y);\\n      return [ domain[y - 1], domain[y] ];\\n    };\\n    scale.copy = function() {\\n      return d3_scale_threshold(domain, range);\\n    };\\n    return scale;\\n  }\\n  d3.scale.identity = function() {\\n    return d3_scale_identity([ 0, 1 ]);\\n  };\\n  function d3_scale_identity(domain) {\\n    function identity(x) {\\n      return +x;\\n    }\\n    identity.invert = identity;\\n    identity.domain = identity.range = function(x) {\\n      if (!arguments.length) return domain;\\n      domain = x.map(identity);\\n      return identity;\\n    };\\n    identity.ticks = function(m) {\\n      return d3_scale_linearTicks(domain, m);\\n    };\\n    identity.tickFormat = function(m, format) {\\n      return d3_scale_linearTickFormat(domain, m, format);\\n    };\\n    identity.copy = function() {\\n      return d3_scale_identity(domain);\\n    };\\n    return identity;\\n  }\\n  d3.svg = {};\\n  function d3_zero() {\\n    return 0;\\n  }\\n  d3.svg.arc = function() {\\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\\n    function arc() {\\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \\\"\\\") + \\\"Z\\\";\\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\\n        if (!cw) p1 *= -1;\\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\\n      }\\n      if (r1) {\\n        x0 = r1 * Math.cos(a0 + p1);\\n        y0 = r1 * Math.sin(a0 + p1);\\n        x1 = r1 * Math.cos(a1 - p1);\\n        y1 = r1 * Math.sin(a1 - p1);\\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\\n          var h1 = (a0 + a1) / 2;\\n          x0 = r1 * Math.cos(h1);\\n          y0 = r1 * Math.sin(h1);\\n          x1 = y1 = null;\\n        }\\n      } else {\\n        x0 = y0 = 0;\\n      }\\n      if (r0) {\\n        x2 = r0 * Math.cos(a1 - p0);\\n        y2 = r0 * Math.sin(a1 - p0);\\n        x3 = r0 * Math.cos(a0 + p0);\\n        y3 = r0 * Math.sin(a0 + p0);\\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\\n          var h0 = (a0 + a1) / 2;\\n          x2 = r0 * Math.cos(h0);\\n          y2 = r0 * Math.sin(h0);\\n          x3 = y3 = null;\\n        }\\n      } else {\\n        x2 = y2 = 0;\\n      }\\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\\n        cr = r0 < r1 ^ cw ? 0 : 1;\\n        var rc1 = rc, rc0 = rc;\\n        if (da < π) {\\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\\n        }\\n        if (x1 != null) {\\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\\n          if (rc === rc1) {\\n            path.push(\\\"M\\\", t30[0], \\\"A\\\", rc1, \\\",\\\", rc1, \\\" 0 0,\\\", cr, \\\" \\\", t30[1], \\\"A\\\", r1, \\\",\\\", r1, \\\" 0 \\\", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \\\",\\\", cw, \\\" \\\", t12[1], \\\"A\\\", rc1, \\\",\\\", rc1, \\\" 0 0,\\\", cr, \\\" \\\", t12[0]);\\n          } else {\\n            path.push(\\\"M\\\", t30[0], \\\"A\\\", rc1, \\\",\\\", rc1, \\\" 0 1,\\\", cr, \\\" \\\", t12[0]);\\n          }\\n        } else {\\n          path.push(\\\"M\\\", x0, \\\",\\\", y0);\\n        }\\n        if (x3 != null) {\\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\\n          if (rc === rc0) {\\n            path.push(\\\"L\\\", t21[0], \\\"A\\\", rc0, \\\",\\\", rc0, \\\" 0 0,\\\", cr, \\\" \\\", t21[1], \\\"A\\\", r0, \\\",\\\", r0, \\\" 0 \\\", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \\\",\\\", 1 - cw, \\\" \\\", t03[1], \\\"A\\\", rc0, \\\",\\\", rc0, \\\" 0 0,\\\", cr, \\\" \\\", t03[0]);\\n          } else {\\n            path.push(\\\"L\\\", t21[0], \\\"A\\\", rc0, \\\",\\\", rc0, \\\" 0 0,\\\", cr, \\\" \\\", t03[0]);\\n          }\\n        } else {\\n          path.push(\\\"L\\\", x2, \\\",\\\", y2);\\n        }\\n      } else {\\n        path.push(\\\"M\\\", x0, \\\",\\\", y0);\\n        if (x1 != null) path.push(\\\"A\\\", r1, \\\",\\\", r1, \\\" 0 \\\", l1, \\\",\\\", cw, \\\" \\\", x1, \\\",\\\", y1);\\n        path.push(\\\"L\\\", x2, \\\",\\\", y2);\\n        if (x3 != null) path.push(\\\"A\\\", r0, \\\",\\\", r0, \\\" 0 \\\", l0, \\\",\\\", 1 - cw, \\\" \\\", x3, \\\",\\\", y3);\\n      }\\n      path.push(\\\"Z\\\");\\n      return path.join(\\\"\\\");\\n    }\\n    function circleSegment(r1, cw) {\\n      return \\\"M0,\\\" + r1 + \\\"A\\\" + r1 + \\\",\\\" + r1 + \\\" 0 1,\\\" + cw + \\\" 0,\\\" + -r1 + \\\"A\\\" + r1 + \\\",\\\" + r1 + \\\" 0 1,\\\" + cw + \\\" 0,\\\" + r1;\\n    }\\n    arc.innerRadius = function(v) {\\n      if (!arguments.length) return innerRadius;\\n      innerRadius = d3_functor(v);\\n      return arc;\\n    };\\n    arc.outerRadius = function(v) {\\n      if (!arguments.length) return outerRadius;\\n      outerRadius = d3_functor(v);\\n      return arc;\\n    };\\n    arc.cornerRadius = function(v) {\\n      if (!arguments.length) return cornerRadius;\\n      cornerRadius = d3_functor(v);\\n      return arc;\\n    };\\n    arc.padRadius = function(v) {\\n      if (!arguments.length) return padRadius;\\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\\n      return arc;\\n    };\\n    arc.startAngle = function(v) {\\n      if (!arguments.length) return startAngle;\\n      startAngle = d3_functor(v);\\n      return arc;\\n    };\\n    arc.endAngle = function(v) {\\n      if (!arguments.length) return endAngle;\\n      endAngle = d3_functor(v);\\n      return arc;\\n    };\\n    arc.padAngle = function(v) {\\n      if (!arguments.length) return padAngle;\\n      padAngle = d3_functor(v);\\n      return arc;\\n    };\\n    arc.centroid = function() {\\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\\n    };\\n    return arc;\\n  };\\n  var d3_svg_arcAuto = \\\"auto\\\";\\n  function d3_svg_arcInnerRadius(d) {\\n    return d.innerRadius;\\n  }\\n  function d3_svg_arcOuterRadius(d) {\\n    return d.outerRadius;\\n  }\\n  function d3_svg_arcStartAngle(d) {\\n    return d.startAngle;\\n  }\\n  function d3_svg_arcEndAngle(d) {\\n    return d.endAngle;\\n  }\\n  function d3_svg_arcPadAngle(d) {\\n    return d && d.padAngle;\\n  }\\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\\n  }\\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\\n  }\\n  function d3_svg_line(projection) {\\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\\n    function line(data) {\\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\\n      function segment() {\\n        segments.push(\\\"M\\\", interpolate(projection(points), tension));\\n      }\\n      while (++i < n) {\\n        if (defined.call(this, d = data[i], i)) {\\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\\n        } else if (points.length) {\\n          segment();\\n          points = [];\\n        }\\n      }\\n      if (points.length) segment();\\n      return segments.length ? segments.join(\\\"\\\") : null;\\n    }\\n    line.x = function(_) {\\n      if (!arguments.length) return x;\\n      x = _;\\n      return line;\\n    };\\n    line.y = function(_) {\\n      if (!arguments.length) return y;\\n      y = _;\\n      return line;\\n    };\\n    line.defined = function(_) {\\n      if (!arguments.length) return defined;\\n      defined = _;\\n      return line;\\n    };\\n    line.interpolate = function(_) {\\n      if (!arguments.length) return interpolateKey;\\n      if (typeof _ === \\\"function\\\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\\n      return line;\\n    };\\n    line.tension = function(_) {\\n      if (!arguments.length) return tension;\\n      tension = _;\\n      return line;\\n    };\\n    return line;\\n  }\\n  d3.svg.line = function() {\\n    return d3_svg_line(d3_identity);\\n  };\\n  var d3_svg_lineInterpolators = d3.map({\\n    linear: d3_svg_lineLinear,\\n    \\\"linear-closed\\\": d3_svg_lineLinearClosed,\\n    step: d3_svg_lineStep,\\n    \\\"step-before\\\": d3_svg_lineStepBefore,\\n    \\\"step-after\\\": d3_svg_lineStepAfter,\\n    basis: d3_svg_lineBasis,\\n    \\\"basis-open\\\": d3_svg_lineBasisOpen,\\n    \\\"basis-closed\\\": d3_svg_lineBasisClosed,\\n    bundle: d3_svg_lineBundle,\\n    cardinal: d3_svg_lineCardinal,\\n    \\\"cardinal-open\\\": d3_svg_lineCardinalOpen,\\n    \\\"cardinal-closed\\\": d3_svg_lineCardinalClosed,\\n    monotone: d3_svg_lineMonotone\\n  });\\n  d3_svg_lineInterpolators.forEach(function(key, value) {\\n    value.key = key;\\n    value.closed = /-closed$/.test(key);\\n  });\\n  function d3_svg_lineLinear(points) {\\n    return points.length > 1 ? points.join(\\\"L\\\") : points + \\\"Z\\\";\\n  }\\n  function d3_svg_lineLinearClosed(points) {\\n    return points.join(\\\"L\\\") + \\\"Z\\\";\\n  }\\n  function d3_svg_lineStep(points) {\\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \\\",\\\", p[1] ];\\n    while (++i < n) path.push(\\\"H\\\", (p[0] + (p = points[i])[0]) / 2, \\\"V\\\", p[1]);\\n    if (n > 1) path.push(\\\"H\\\", p[0]);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineStepBefore(points) {\\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \\\",\\\", p[1] ];\\n    while (++i < n) path.push(\\\"V\\\", (p = points[i])[1], \\\"H\\\", p[0]);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineStepAfter(points) {\\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \\\",\\\", p[1] ];\\n    while (++i < n) path.push(\\\"H\\\", (p = points[i])[0], \\\"V\\\", p[1]);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineCardinalOpen(points, tension) {\\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\\n  }\\n  function d3_svg_lineCardinalClosed(points, tension) {\\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \\n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\\n  }\\n  function d3_svg_lineCardinal(points, tension) {\\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\\n  }\\n  function d3_svg_lineHermite(points, tangents) {\\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\\n      return d3_svg_lineLinear(points);\\n    }\\n    var quad = points.length != tangents.length, path = \\\"\\\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\\n    if (quad) {\\n      path += \\\"Q\\\" + (p[0] - t0[0] * 2 / 3) + \\\",\\\" + (p[1] - t0[1] * 2 / 3) + \\\",\\\" + p[0] + \\\",\\\" + p[1];\\n      p0 = points[1];\\n      pi = 2;\\n    }\\n    if (tangents.length > 1) {\\n      t = tangents[1];\\n      p = points[pi];\\n      pi++;\\n      path += \\\"C\\\" + (p0[0] + t0[0]) + \\\",\\\" + (p0[1] + t0[1]) + \\\",\\\" + (p[0] - t[0]) + \\\",\\\" + (p[1] - t[1]) + \\\",\\\" + p[0] + \\\",\\\" + p[1];\\n      for (var i = 2; i < tangents.length; i++, pi++) {\\n        p = points[pi];\\n        t = tangents[i];\\n        path += \\\"S\\\" + (p[0] - t[0]) + \\\",\\\" + (p[1] - t[1]) + \\\",\\\" + p[0] + \\\",\\\" + p[1];\\n      }\\n    }\\n    if (quad) {\\n      var lp = points[pi];\\n      path += \\\"Q\\\" + (p[0] + t[0] * 2 / 3) + \\\",\\\" + (p[1] + t[1] * 2 / 3) + \\\",\\\" + lp[0] + \\\",\\\" + lp[1];\\n    }\\n    return path;\\n  }\\n  function d3_svg_lineCardinalTangents(points, tension) {\\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\\n    while (++i < n) {\\n      p0 = p1;\\n      p1 = p2;\\n      p2 = points[i];\\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\\n    }\\n    return tangents;\\n  }\\n  function d3_svg_lineBasis(points) {\\n    if (points.length < 3) return d3_svg_lineLinear(points);\\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \\\",\\\", y0, \\\"L\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\\n    points.push(points[n - 1]);\\n    while (++i <= n) {\\n      pi = points[i];\\n      px.shift();\\n      px.push(pi[0]);\\n      py.shift();\\n      py.push(pi[1]);\\n      d3_svg_lineBasisBezier(path, px, py);\\n    }\\n    points.pop();\\n    path.push(\\\"L\\\", pi);\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineBasisOpen(points) {\\n    if (points.length < 4) return d3_svg_lineLinear(points);\\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\\n    while (++i < 3) {\\n      pi = points[i];\\n      px.push(pi[0]);\\n      py.push(pi[1]);\\n    }\\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \\\",\\\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\\n    --i;\\n    while (++i < n) {\\n      pi = points[i];\\n      px.shift();\\n      px.push(pi[0]);\\n      py.shift();\\n      py.push(pi[1]);\\n      d3_svg_lineBasisBezier(path, px, py);\\n    }\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineBasisClosed(points) {\\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\\n    while (++i < 4) {\\n      pi = points[i % n];\\n      px.push(pi[0]);\\n      py.push(pi[1]);\\n    }\\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\\n    --i;\\n    while (++i < m) {\\n      pi = points[i % n];\\n      px.shift();\\n      px.push(pi[0]);\\n      py.shift();\\n      py.push(pi[1]);\\n      d3_svg_lineBasisBezier(path, px, py);\\n    }\\n    return path.join(\\\"\\\");\\n  }\\n  function d3_svg_lineBundle(points, tension) {\\n    var n = points.length - 1;\\n    if (n) {\\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\\n      while (++i <= n) {\\n        p = points[i];\\n        t = i / n;\\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\\n      }\\n    }\\n    return d3_svg_lineBasis(points);\\n  }\\n  function d3_svg_lineDot4(a, b) {\\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\\n  }\\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\\n  function d3_svg_lineBasisBezier(path, x, y) {\\n    path.push(\\\"C\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \\\",\\\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\\n  }\\n  function d3_svg_lineSlope(p0, p1) {\\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\\n  }\\n  function d3_svg_lineFiniteDifferences(points) {\\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\\n    while (++i < j) {\\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\\n    }\\n    m[i] = d;\\n    return m;\\n  }\\n  function d3_svg_lineMonotoneTangents(points) {\\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\\n    while (++i < j) {\\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\\n      if (abs(d) < ε) {\\n        m[i] = m[i + 1] = 0;\\n      } else {\\n        a = m[i] / d;\\n        b = m[i + 1] / d;\\n        s = a * a + b * b;\\n        if (s > 9) {\\n          s = d * 3 / Math.sqrt(s);\\n          m[i] = s * a;\\n          m[i + 1] = s * b;\\n        }\\n      }\\n    }\\n    i = -1;\\n    while (++i <= j) {\\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\\n      tangents.push([ s || 0, m[i] * s || 0 ]);\\n    }\\n    return tangents;\\n  }\\n  function d3_svg_lineMonotone(points) {\\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\\n  }\\n  d3.svg.line.radial = function() {\\n    var line = d3_svg_line(d3_svg_lineRadial);\\n    line.radius = line.x, delete line.x;\\n    line.angle = line.y, delete line.y;\\n    return line;\\n  };\\n  function d3_svg_lineRadial(points) {\\n    var point, i = -1, n = points.length, r, a;\\n    while (++i < n) {\\n      point = points[i];\\n      r = point[0];\\n      a = point[1] - halfπ;\\n      point[0] = r * Math.cos(a);\\n      point[1] = r * Math.sin(a);\\n    }\\n    return points;\\n  }\\n  function d3_svg_area(projection) {\\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \\\"L\\\", tension = .7;\\n    function area(data) {\\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\\n        return x;\\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\\n        return y;\\n      } : d3_functor(y1), x, y;\\n      function segment() {\\n        segments.push(\\\"M\\\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \\\"Z\\\");\\n      }\\n      while (++i < n) {\\n        if (defined.call(this, d = data[i], i)) {\\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\\n        } else if (points0.length) {\\n          segment();\\n          points0 = [];\\n          points1 = [];\\n        }\\n      }\\n      if (points0.length) segment();\\n      return segments.length ? segments.join(\\\"\\\") : null;\\n    }\\n    area.x = function(_) {\\n      if (!arguments.length) return x1;\\n      x0 = x1 = _;\\n      return area;\\n    };\\n    area.x0 = function(_) {\\n      if (!arguments.length) return x0;\\n      x0 = _;\\n      return area;\\n    };\\n    area.x1 = function(_) {\\n      if (!arguments.length) return x1;\\n      x1 = _;\\n      return area;\\n    };\\n    area.y = function(_) {\\n      if (!arguments.length) return y1;\\n      y0 = y1 = _;\\n      return area;\\n    };\\n    area.y0 = function(_) {\\n      if (!arguments.length) return y0;\\n      y0 = _;\\n      return area;\\n    };\\n    area.y1 = function(_) {\\n      if (!arguments.length) return y1;\\n      y1 = _;\\n      return area;\\n    };\\n    area.defined = function(_) {\\n      if (!arguments.length) return defined;\\n      defined = _;\\n      return area;\\n    };\\n    area.interpolate = function(_) {\\n      if (!arguments.length) return interpolateKey;\\n      if (typeof _ === \\\"function\\\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\\n      interpolateReverse = interpolate.reverse || interpolate;\\n      L = interpolate.closed ? \\\"M\\\" : \\\"L\\\";\\n      return area;\\n    };\\n    area.tension = function(_) {\\n      if (!arguments.length) return tension;\\n      tension = _;\\n      return area;\\n    };\\n    return area;\\n  }\\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\\n  d3.svg.area = function() {\\n    return d3_svg_area(d3_identity);\\n  };\\n  d3.svg.area.radial = function() {\\n    var area = d3_svg_area(d3_svg_lineRadial);\\n    area.radius = area.x, delete area.x;\\n    area.innerRadius = area.x0, delete area.x0;\\n    area.outerRadius = area.x1, delete area.x1;\\n    area.angle = area.y, delete area.y;\\n    area.startAngle = area.y0, delete area.y0;\\n    area.endAngle = area.y1, delete area.y1;\\n    return area;\\n  };\\n  d3.svg.chord = function() {\\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\\n    function chord(d, i) {\\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\\n      return \\\"M\\\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \\\"Z\\\";\\n    }\\n    function subgroup(self, f, d, i) {\\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\\n      return {\\n        r: r,\\n        a0: a0,\\n        a1: a1,\\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\\n      };\\n    }\\n    function equals(a, b) {\\n      return a.a0 == b.a0 && a.a1 == b.a1;\\n    }\\n    function arc(r, p, a) {\\n      return \\\"A\\\" + r + \\\",\\\" + r + \\\" 0 \\\" + +(a > π) + \\\",1 \\\" + p;\\n    }\\n    function curve(r0, p0, r1, p1) {\\n      return \\\"Q 0,0 \\\" + p1;\\n    }\\n    chord.radius = function(v) {\\n      if (!arguments.length) return radius;\\n      radius = d3_functor(v);\\n      return chord;\\n    };\\n    chord.source = function(v) {\\n      if (!arguments.length) return source;\\n      source = d3_functor(v);\\n      return chord;\\n    };\\n    chord.target = function(v) {\\n      if (!arguments.length) return target;\\n      target = d3_functor(v);\\n      return chord;\\n    };\\n    chord.startAngle = function(v) {\\n      if (!arguments.length) return startAngle;\\n      startAngle = d3_functor(v);\\n      return chord;\\n    };\\n    chord.endAngle = function(v) {\\n      if (!arguments.length) return endAngle;\\n      endAngle = d3_functor(v);\\n      return chord;\\n    };\\n    return chord;\\n  };\\n  function d3_svg_chordRadius(d) {\\n    return d.radius;\\n  }\\n  d3.svg.diagonal = function() {\\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\\n    function diagonal(d, i) {\\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\\n        x: p0.x,\\n        y: m\\n      }, {\\n        x: p3.x,\\n        y: m\\n      }, p3 ];\\n      p = p.map(projection);\\n      return \\\"M\\\" + p[0] + \\\"C\\\" + p[1] + \\\" \\\" + p[2] + \\\" \\\" + p[3];\\n    }\\n    diagonal.source = function(x) {\\n      if (!arguments.length) return source;\\n      source = d3_functor(x);\\n      return diagonal;\\n    };\\n    diagonal.target = function(x) {\\n      if (!arguments.length) return target;\\n      target = d3_functor(x);\\n      return diagonal;\\n    };\\n    diagonal.projection = function(x) {\\n      if (!arguments.length) return projection;\\n      projection = x;\\n      return diagonal;\\n    };\\n    return diagonal;\\n  };\\n  function d3_svg_diagonalProjection(d) {\\n    return [ d.x, d.y ];\\n  }\\n  d3.svg.diagonal.radial = function() {\\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\\n    diagonal.projection = function(x) {\\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\\n    };\\n    return diagonal;\\n  };\\n  function d3_svg_diagonalRadialProjection(projection) {\\n    return function() {\\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\\n      return [ r * Math.cos(a), r * Math.sin(a) ];\\n    };\\n  }\\n  d3.svg.symbol = function() {\\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\\n    function symbol(d, i) {\\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\\n    }\\n    symbol.type = function(x) {\\n      if (!arguments.length) return type;\\n      type = d3_functor(x);\\n      return symbol;\\n    };\\n    symbol.size = function(x) {\\n      if (!arguments.length) return size;\\n      size = d3_functor(x);\\n      return symbol;\\n    };\\n    return symbol;\\n  };\\n  function d3_svg_symbolSize() {\\n    return 64;\\n  }\\n  function d3_svg_symbolType() {\\n    return \\\"circle\\\";\\n  }\\n  function d3_svg_symbolCircle(size) {\\n    var r = Math.sqrt(size / π);\\n    return \\\"M0,\\\" + r + \\\"A\\\" + r + \\\",\\\" + r + \\\" 0 1,1 0,\\\" + -r + \\\"A\\\" + r + \\\",\\\" + r + \\\" 0 1,1 0,\\\" + r + \\\"Z\\\";\\n  }\\n  var d3_svg_symbols = d3.map({\\n    circle: d3_svg_symbolCircle,\\n    cross: function(size) {\\n      var r = Math.sqrt(size / 5) / 2;\\n      return \\\"M\\\" + -3 * r + \\\",\\\" + -r + \\\"H\\\" + -r + \\\"V\\\" + -3 * r + \\\"H\\\" + r + \\\"V\\\" + -r + \\\"H\\\" + 3 * r + \\\"V\\\" + r + \\\"H\\\" + r + \\\"V\\\" + 3 * r + \\\"H\\\" + -r + \\\"V\\\" + r + \\\"H\\\" + -3 * r + \\\"Z\\\";\\n    },\\n    diamond: function(size) {\\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\\n      return \\\"M0,\\\" + -ry + \\\"L\\\" + rx + \\\",0\\\" + \\\" 0,\\\" + ry + \\\" \\\" + -rx + \\\",0\\\" + \\\"Z\\\";\\n    },\\n    square: function(size) {\\n      var r = Math.sqrt(size) / 2;\\n      return \\\"M\\\" + -r + \\\",\\\" + -r + \\\"L\\\" + r + \\\",\\\" + -r + \\\" \\\" + r + \\\",\\\" + r + \\\" \\\" + -r + \\\",\\\" + r + \\\"Z\\\";\\n    },\\n    \\\"triangle-down\\\": function(size) {\\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\\n      return \\\"M0,\\\" + ry + \\\"L\\\" + rx + \\\",\\\" + -ry + \\\" \\\" + -rx + \\\",\\\" + -ry + \\\"Z\\\";\\n    },\\n    \\\"triangle-up\\\": function(size) {\\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\\n      return \\\"M0,\\\" + -ry + \\\"L\\\" + rx + \\\",\\\" + ry + \\\" \\\" + -rx + \\\",\\\" + ry + \\\"Z\\\";\\n    }\\n  });\\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\\n  d3_selectionPrototype.transition = function(name) {\\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\\n      time: Date.now(),\\n      ease: d3_ease_cubicInOut,\\n      delay: 0,\\n      duration: 250\\n    };\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\\n        subgroup.push(node);\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id);\\n  };\\n  d3_selectionPrototype.interrupt = function(name) {\\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\\n  };\\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\\n  function d3_selection_interruptNS(ns) {\\n    return function() {\\n      var lock, activeId, active;\\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\\n        active.timer.c = null;\\n        active.timer.t = NaN;\\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\\n        lock.active += .5;\\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\\n      }\\n    };\\n  }\\n  function d3_transition(groups, ns, id) {\\n    d3_subclass(groups, d3_transitionPrototype);\\n    groups.namespace = ns;\\n    groups.id = id;\\n    return groups;\\n  }\\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\\n  d3.transition = function(selection, name) {\\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\\n  };\\n  d3.transition.prototype = d3_transitionPrototype;\\n  d3_transitionPrototype.select = function(selector) {\\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\\n    selector = d3_selection_selector(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\\n          if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\\n          subgroup.push(subnode);\\n        } else {\\n          subgroup.push(null);\\n        }\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id);\\n  };\\n  d3_transitionPrototype.selectAll = function(selector) {\\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\\n    selector = d3_selection_selectorAll(selector);\\n    for (var j = -1, m = this.length; ++j < m; ) {\\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\\n        if (node = group[i]) {\\n          transition = node[ns][id];\\n          subnodes = selector.call(node, node.__data__, i, j);\\n          subgroups.push(subgroup = []);\\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\\n            subgroup.push(subnode);\\n          }\\n        }\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id);\\n  };\\n  d3_transitionPrototype.filter = function(filter) {\\n    var subgroups = [], subgroup, group, node;\\n    if (typeof filter !== \\\"function\\\") filter = d3_selection_filter(filter);\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\\n          subgroup.push(node);\\n        }\\n      }\\n    }\\n    return d3_transition(subgroups, this.namespace, this.id);\\n  };\\n  d3_transitionPrototype.tween = function(name, tween) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\\n    return d3_selection_each(this, tween == null ? function(node) {\\n      node[ns][id].tween.remove(name);\\n    } : function(node) {\\n      node[ns][id].tween.set(name, tween);\\n    });\\n  };\\n  function d3_transition_tween(groups, name, value, tween) {\\n    var id = groups.id, ns = groups.namespace;\\n    return d3_selection_each(groups, typeof value === \\\"function\\\" ? function(node, i, j) {\\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\\n    } : (value = tween(value), function(node) {\\n      node[ns][id].tween.set(name, value);\\n    }));\\n  }\\n  d3_transitionPrototype.attr = function(nameNS, value) {\\n    if (arguments.length < 2) {\\n      for (value in nameNS) this.attr(value, nameNS[value]);\\n      return this;\\n    }\\n    var interpolate = nameNS == \\\"transform\\\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\\n    function attrNull() {\\n      this.removeAttribute(name);\\n    }\\n    function attrNullNS() {\\n      this.removeAttributeNS(name.space, name.local);\\n    }\\n    function attrTween(b) {\\n      return b == null ? attrNull : (b += \\\"\\\", function() {\\n        var a = this.getAttribute(name), i;\\n        return a !== b && (i = interpolate(a, b), function(t) {\\n          this.setAttribute(name, i(t));\\n        });\\n      });\\n    }\\n    function attrTweenNS(b) {\\n      return b == null ? attrNullNS : (b += \\\"\\\", function() {\\n        var a = this.getAttributeNS(name.space, name.local), i;\\n        return a !== b && (i = interpolate(a, b), function(t) {\\n          this.setAttributeNS(name.space, name.local, i(t));\\n        });\\n      });\\n    }\\n    return d3_transition_tween(this, \\\"attr.\\\" + nameNS, value, name.local ? attrTweenNS : attrTween);\\n  };\\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\\n    var name = d3.ns.qualify(nameNS);\\n    function attrTween(d, i) {\\n      var f = tween.call(this, d, i, this.getAttribute(name));\\n      return f && function(t) {\\n        this.setAttribute(name, f(t));\\n      };\\n    }\\n    function attrTweenNS(d, i) {\\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\\n      return f && function(t) {\\n        this.setAttributeNS(name.space, name.local, f(t));\\n      };\\n    }\\n    return this.tween(\\\"attr.\\\" + nameNS, name.local ? attrTweenNS : attrTween);\\n  };\\n  d3_transitionPrototype.style = function(name, value, priority) {\\n    var n = arguments.length;\\n    if (n < 3) {\\n      if (typeof name !== \\\"string\\\") {\\n        if (n < 2) value = \\\"\\\";\\n        for (priority in name) this.style(priority, name[priority], value);\\n        return this;\\n      }\\n      priority = \\\"\\\";\\n    }\\n    function styleNull() {\\n      this.style.removeProperty(name);\\n    }\\n    function styleString(b) {\\n      return b == null ? styleNull : (b += \\\"\\\", function() {\\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\\n          this.style.setProperty(name, i(t), priority);\\n        });\\n      });\\n    }\\n    return d3_transition_tween(this, \\\"style.\\\" + name, value, styleString);\\n  };\\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\\n    if (arguments.length < 3) priority = \\\"\\\";\\n    function styleTween(d, i) {\\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\\n      return f && function(t) {\\n        this.style.setProperty(name, f(t), priority);\\n      };\\n    }\\n    return this.tween(\\\"style.\\\" + name, styleTween);\\n  };\\n  d3_transitionPrototype.text = function(value) {\\n    return d3_transition_tween(this, \\\"text\\\", value, d3_transition_text);\\n  };\\n  function d3_transition_text(b) {\\n    if (b == null) b = \\\"\\\";\\n    return function() {\\n      this.textContent = b;\\n    };\\n  }\\n  d3_transitionPrototype.remove = function() {\\n    var ns = this.namespace;\\n    return this.each(\\\"end.transition\\\", function() {\\n      var p;\\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\\n    });\\n  };\\n  d3_transitionPrototype.ease = function(value) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 1) return this.node()[ns][id].ease;\\n    if (typeof value !== \\\"function\\\") value = d3.ease.apply(d3, arguments);\\n    return d3_selection_each(this, function(node) {\\n      node[ns][id].ease = value;\\n    });\\n  };\\n  d3_transitionPrototype.delay = function(value) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 1) return this.node()[ns][id].delay;\\n    return d3_selection_each(this, typeof value === \\\"function\\\" ? function(node, i, j) {\\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\\n    } : (value = +value, function(node) {\\n      node[ns][id].delay = value;\\n    }));\\n  };\\n  d3_transitionPrototype.duration = function(value) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 1) return this.node()[ns][id].duration;\\n    return d3_selection_each(this, typeof value === \\\"function\\\" ? function(node, i, j) {\\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\\n    } : (value = Math.max(1, value), function(node) {\\n      node[ns][id].duration = value;\\n    }));\\n  };\\n  d3_transitionPrototype.each = function(type, listener) {\\n    var id = this.id, ns = this.namespace;\\n    if (arguments.length < 2) {\\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\\n      try {\\n        d3_transitionInheritId = id;\\n        d3_selection_each(this, function(node, i, j) {\\n          d3_transitionInherit = node[ns][id];\\n          type.call(node, node.__data__, i, j);\\n        });\\n      } finally {\\n        d3_transitionInherit = inherit;\\n        d3_transitionInheritId = inheritId;\\n      }\\n    } else {\\n      d3_selection_each(this, function(node) {\\n        var transition = node[ns][id];\\n        (transition.event || (transition.event = d3.dispatch(\\\"start\\\", \\\"end\\\", \\\"interrupt\\\"))).on(type, listener);\\n      });\\n    }\\n    return this;\\n  };\\n  d3_transitionPrototype.transition = function() {\\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\\n    for (var j = 0, m = this.length; j < m; j++) {\\n      subgroups.push(subgroup = []);\\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\\n        if (node = group[i]) {\\n          transition = node[ns][id0];\\n          d3_transitionNode(node, i, ns, id1, {\\n            time: transition.time,\\n            ease: transition.ease,\\n            delay: transition.delay + transition.duration,\\n            duration: transition.duration\\n          });\\n        }\\n        subgroup.push(node);\\n      }\\n    }\\n    return d3_transition(subgroups, ns, id1);\\n  };\\n  function d3_transitionNamespace(name) {\\n    return name == null ? \\\"__transition__\\\" : \\\"__transition_\\\" + name + \\\"__\\\";\\n  }\\n  function d3_transitionNode(node, i, ns, id, inherit) {\\n    var lock = node[ns] || (node[ns] = {\\n      active: 0,\\n      count: 0\\n    }), transition = lock[id], time, timer, duration, ease, tweens;\\n    function schedule(elapsed) {\\n      var delay = transition.delay;\\n      timer.t = delay + time;\\n      if (delay <= elapsed) return start(elapsed - delay);\\n      timer.c = start;\\n    }\\n    function start(elapsed) {\\n      var activeId = lock.active, active = lock[activeId];\\n      if (active) {\\n        active.timer.c = null;\\n        active.timer.t = NaN;\\n        --lock.count;\\n        delete lock[activeId];\\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\\n      }\\n      for (var cancelId in lock) {\\n        if (+cancelId < id) {\\n          var cancel = lock[cancelId];\\n          cancel.timer.c = null;\\n          cancel.timer.t = NaN;\\n          --lock.count;\\n          delete lock[cancelId];\\n        }\\n      }\\n      timer.c = tick;\\n      d3_timer(function() {\\n        if (timer.c && tick(elapsed || 1)) {\\n          timer.c = null;\\n          timer.t = NaN;\\n        }\\n        return 1;\\n      }, 0, time);\\n      lock.active = id;\\n      transition.event && transition.event.start.call(node, node.__data__, i);\\n      tweens = [];\\n      transition.tween.forEach(function(key, value) {\\n        if (value = value.call(node, node.__data__, i)) {\\n          tweens.push(value);\\n        }\\n      });\\n      ease = transition.ease;\\n      duration = transition.duration;\\n    }\\n    function tick(elapsed) {\\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\\n      while (n > 0) {\\n        tweens[--n].call(node, e);\\n      }\\n      if (t >= 1) {\\n        transition.event && transition.event.end.call(node, node.__data__, i);\\n        if (--lock.count) delete lock[id]; else delete node[ns];\\n        return 1;\\n      }\\n    }\\n    if (!transition) {\\n      time = inherit.time;\\n      timer = d3_timer(schedule, 0, time);\\n      transition = lock[id] = {\\n        tween: new d3_Map(),\\n        time: time,\\n        timer: timer,\\n        delay: inherit.delay,\\n        duration: inherit.duration,\\n        ease: inherit.ease,\\n        index: i\\n      };\\n      inherit = null;\\n      ++lock.count;\\n    }\\n  }\\n  d3.svg.axis = function() {\\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\\n    function axis(g) {\\n      g.each(function() {\\n        var g = d3.select(this);\\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\\\".tick\\\").data(ticks, scale1), tickEnter = tick.enter().insert(\\\"g\\\", \\\".domain\\\").attr(\\\"class\\\", \\\"tick\\\").style(\\\"opacity\\\", ε), tickExit = d3.transition(tick.exit()).style(\\\"opacity\\\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\\\"opacity\\\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\\n        var range = d3_scaleRange(scale1), path = g.selectAll(\\\".domain\\\").data([ 0 ]), pathUpdate = (path.enter().append(\\\"path\\\").attr(\\\"class\\\", \\\"domain\\\"), \\n        d3.transition(path));\\n        tickEnter.append(\\\"line\\\");\\n        tickEnter.append(\\\"text\\\");\\n        var lineEnter = tickEnter.select(\\\"line\\\"), lineUpdate = tickUpdate.select(\\\"line\\\"), text = tick.select(\\\"text\\\").text(tickFormat), textEnter = tickEnter.select(\\\"text\\\"), textUpdate = tickUpdate.select(\\\"text\\\"), sign = orient === \\\"top\\\" || orient === \\\"left\\\" ? -1 : 1, x1, x2, y1, y2;\\n        if (orient === \\\"bottom\\\" || orient === \\\"top\\\") {\\n          tickTransform = d3_svg_axisX, x1 = \\\"x\\\", y1 = \\\"y\\\", x2 = \\\"x2\\\", y2 = \\\"y2\\\";\\n          text.attr(\\\"dy\\\", sign < 0 ? \\\"0em\\\" : \\\".71em\\\").style(\\\"text-anchor\\\", \\\"middle\\\");\\n          pathUpdate.attr(\\\"d\\\", \\\"M\\\" + range[0] + \\\",\\\" + sign * outerTickSize + \\\"V0H\\\" + range[1] + \\\"V\\\" + sign * outerTickSize);\\n        } else {\\n          tickTransform = d3_svg_axisY, x1 = \\\"y\\\", y1 = \\\"x\\\", x2 = \\\"y2\\\", y2 = \\\"x2\\\";\\n          text.attr(\\\"dy\\\", \\\".32em\\\").style(\\\"text-anchor\\\", sign < 0 ? \\\"end\\\" : \\\"start\\\");\\n          pathUpdate.attr(\\\"d\\\", \\\"M\\\" + sign * outerTickSize + \\\",\\\" + range[0] + \\\"H0V\\\" + range[1] + \\\"H\\\" + sign * outerTickSize);\\n        }\\n        lineEnter.attr(y2, sign * innerTickSize);\\n        textEnter.attr(y1, sign * tickSpacing);\\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\\n        if (scale1.rangeBand) {\\n          var x = scale1, dx = x.rangeBand() / 2;\\n          scale0 = scale1 = function(d) {\\n            return x(d) + dx;\\n          };\\n        } else if (scale0.rangeBand) {\\n          scale0 = scale1;\\n        } else {\\n          tickExit.call(tickTransform, scale1, scale0);\\n        }\\n        tickEnter.call(tickTransform, scale0, scale1);\\n        tickUpdate.call(tickTransform, scale1, scale1);\\n      });\\n    }\\n    axis.scale = function(x) {\\n      if (!arguments.length) return scale;\\n      scale = x;\\n      return axis;\\n    };\\n    axis.orient = function(x) {\\n      if (!arguments.length) return orient;\\n      orient = x in d3_svg_axisOrients ? x + \\\"\\\" : d3_svg_axisDefaultOrient;\\n      return axis;\\n    };\\n    axis.ticks = function() {\\n      if (!arguments.length) return tickArguments_;\\n      tickArguments_ = d3_array(arguments);\\n      return axis;\\n    };\\n    axis.tickValues = function(x) {\\n      if (!arguments.length) return tickValues;\\n      tickValues = x;\\n      return axis;\\n    };\\n    axis.tickFormat = function(x) {\\n      if (!arguments.length) return tickFormat_;\\n      tickFormat_ = x;\\n      return axis;\\n    };\\n    axis.tickSize = function(x) {\\n      var n = arguments.length;\\n      if (!n) return innerTickSize;\\n      innerTickSize = +x;\\n      outerTickSize = +arguments[n - 1];\\n      return axis;\\n    };\\n    axis.innerTickSize = function(x) {\\n      if (!arguments.length) return innerTickSize;\\n      innerTickSize = +x;\\n      return axis;\\n    };\\n    axis.outerTickSize = function(x) {\\n      if (!arguments.length) return outerTickSize;\\n      outerTickSize = +x;\\n      return axis;\\n    };\\n    axis.tickPadding = function(x) {\\n      if (!arguments.length) return tickPadding;\\n      tickPadding = +x;\\n      return axis;\\n    };\\n    axis.tickSubdivide = function() {\\n      return arguments.length && axis;\\n    };\\n    return axis;\\n  };\\n  var d3_svg_axisDefaultOrient = \\\"bottom\\\", d3_svg_axisOrients = {\\n    top: 1,\\n    right: 1,\\n    bottom: 1,\\n    left: 1\\n  };\\n  function d3_svg_axisX(selection, x0, x1) {\\n    selection.attr(\\\"transform\\\", function(d) {\\n      var v0 = x0(d);\\n      return \\\"translate(\\\" + (isFinite(v0) ? v0 : x1(d)) + \\\",0)\\\";\\n    });\\n  }\\n  function d3_svg_axisY(selection, y0, y1) {\\n    selection.attr(\\\"transform\\\", function(d) {\\n      var v0 = y0(d);\\n      return \\\"translate(0,\\\" + (isFinite(v0) ? v0 : y1(d)) + \\\")\\\";\\n    });\\n  }\\n  d3.svg.brush = function() {\\n    var event = d3_eventDispatch(brush, \\\"brushstart\\\", \\\"brush\\\", \\\"brushend\\\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\\n    function brush(g) {\\n      g.each(function() {\\n        var g = d3.select(this).style(\\\"pointer-events\\\", \\\"all\\\").style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\").on(\\\"mousedown.brush\\\", brushstart).on(\\\"touchstart.brush\\\", brushstart);\\n        var background = g.selectAll(\\\".background\\\").data([ 0 ]);\\n        background.enter().append(\\\"rect\\\").attr(\\\"class\\\", \\\"background\\\").style(\\\"visibility\\\", \\\"hidden\\\").style(\\\"cursor\\\", \\\"crosshair\\\");\\n        g.selectAll(\\\".extent\\\").data([ 0 ]).enter().append(\\\"rect\\\").attr(\\\"class\\\", \\\"extent\\\").style(\\\"cursor\\\", \\\"move\\\");\\n        var resize = g.selectAll(\\\".resize\\\").data(resizes, d3_identity);\\n        resize.exit().remove();\\n        resize.enter().append(\\\"g\\\").attr(\\\"class\\\", function(d) {\\n          return \\\"resize \\\" + d;\\n        }).style(\\\"cursor\\\", function(d) {\\n          return d3_svg_brushCursor[d];\\n        }).append(\\\"rect\\\").attr(\\\"x\\\", function(d) {\\n          return /[ew]$/.test(d) ? -3 : null;\\n        }).attr(\\\"y\\\", function(d) {\\n          return /^[ns]/.test(d) ? -3 : null;\\n        }).attr(\\\"width\\\", 6).attr(\\\"height\\\", 6).style(\\\"visibility\\\", \\\"hidden\\\");\\n        resize.style(\\\"display\\\", brush.empty() ? \\\"none\\\" : null);\\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\\n        if (x) {\\n          range = d3_scaleRange(x);\\n          backgroundUpdate.attr(\\\"x\\\", range[0]).attr(\\\"width\\\", range[1] - range[0]);\\n          redrawX(gUpdate);\\n        }\\n        if (y) {\\n          range = d3_scaleRange(y);\\n          backgroundUpdate.attr(\\\"y\\\", range[0]).attr(\\\"height\\\", range[1] - range[0]);\\n          redrawY(gUpdate);\\n        }\\n        redraw(gUpdate);\\n      });\\n    }\\n    brush.event = function(g) {\\n      g.each(function() {\\n        var event_ = event.of(this, arguments), extent1 = {\\n          x: xExtent,\\n          y: yExtent,\\n          i: xExtentDomain,\\n          j: yExtentDomain\\n        }, extent0 = this.__chart__ || extent1;\\n        this.__chart__ = extent1;\\n        if (d3_transitionInheritId) {\\n          d3.select(this).transition().each(\\\"start.brush\\\", function() {\\n            xExtentDomain = extent0.i;\\n            yExtentDomain = extent0.j;\\n            xExtent = extent0.x;\\n            yExtent = extent0.y;\\n            event_({\\n              type: \\\"brushstart\\\"\\n            });\\n          }).tween(\\\"brush:brush\\\", function() {\\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\\n            xExtentDomain = yExtentDomain = null;\\n            return function(t) {\\n              xExtent = extent1.x = xi(t);\\n              yExtent = extent1.y = yi(t);\\n              event_({\\n                type: \\\"brush\\\",\\n                mode: \\\"resize\\\"\\n              });\\n            };\\n          }).each(\\\"end.brush\\\", function() {\\n            xExtentDomain = extent1.i;\\n            yExtentDomain = extent1.j;\\n            event_({\\n              type: \\\"brush\\\",\\n              mode: \\\"resize\\\"\\n            });\\n            event_({\\n              type: \\\"brushend\\\"\\n            });\\n          });\\n        } else {\\n          event_({\\n            type: \\\"brushstart\\\"\\n          });\\n          event_({\\n            type: \\\"brush\\\",\\n            mode: \\\"resize\\\"\\n          });\\n          event_({\\n            type: \\\"brushend\\\"\\n          });\\n        }\\n      });\\n    };\\n    function redraw(g) {\\n      g.selectAll(\\\".resize\\\").attr(\\\"transform\\\", function(d) {\\n        return \\\"translate(\\\" + xExtent[+/e$/.test(d)] + \\\",\\\" + yExtent[+/^s/.test(d)] + \\\")\\\";\\n      });\\n    }\\n    function redrawX(g) {\\n      g.select(\\\".extent\\\").attr(\\\"x\\\", xExtent[0]);\\n      g.selectAll(\\\".extent,.n>rect,.s>rect\\\").attr(\\\"width\\\", xExtent[1] - xExtent[0]);\\n    }\\n    function redrawY(g) {\\n      g.select(\\\".extent\\\").attr(\\\"y\\\", yExtent[0]);\\n      g.selectAll(\\\".extent,.e>rect,.w>rect\\\").attr(\\\"height\\\", yExtent[1] - yExtent[0]);\\n    }\\n    function brushstart() {\\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\\\"extent\\\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\\n      var w = d3.select(d3_window(target)).on(\\\"keydown.brush\\\", keydown).on(\\\"keyup.brush\\\", keyup);\\n      if (d3.event.changedTouches) {\\n        w.on(\\\"touchmove.brush\\\", brushmove).on(\\\"touchend.brush\\\", brushend);\\n      } else {\\n        w.on(\\\"mousemove.brush\\\", brushmove).on(\\\"mouseup.brush\\\", brushend);\\n      }\\n      g.interrupt().selectAll(\\\"*\\\").interrupt();\\n      if (dragging) {\\n        origin[0] = xExtent[0] - origin[0];\\n        origin[1] = yExtent[0] - origin[1];\\n      } else if (resizing) {\\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\\n        origin[0] = xExtent[ex];\\n        origin[1] = yExtent[ey];\\n      } else if (d3.event.altKey) center = origin.slice();\\n      g.style(\\\"pointer-events\\\", \\\"none\\\").selectAll(\\\".resize\\\").style(\\\"display\\\", null);\\n      d3.select(\\\"body\\\").style(\\\"cursor\\\", eventTarget.style(\\\"cursor\\\"));\\n      event_({\\n        type: \\\"brushstart\\\"\\n      });\\n      brushmove();\\n      function keydown() {\\n        if (d3.event.keyCode == 32) {\\n          if (!dragging) {\\n            center = null;\\n            origin[0] -= xExtent[1];\\n            origin[1] -= yExtent[1];\\n            dragging = 2;\\n          }\\n          d3_eventPreventDefault();\\n        }\\n      }\\n      function keyup() {\\n        if (d3.event.keyCode == 32 && dragging == 2) {\\n          origin[0] += xExtent[1];\\n          origin[1] += yExtent[1];\\n          dragging = 0;\\n          d3_eventPreventDefault();\\n        }\\n      }\\n      function brushmove() {\\n        var point = d3.mouse(target), moved = false;\\n        if (offset) {\\n          point[0] += offset[0];\\n          point[1] += offset[1];\\n        }\\n        if (!dragging) {\\n          if (d3.event.altKey) {\\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\\n            origin[0] = xExtent[+(point[0] < center[0])];\\n            origin[1] = yExtent[+(point[1] < center[1])];\\n          } else center = null;\\n        }\\n        if (resizingX && move1(point, x, 0)) {\\n          redrawX(g);\\n          moved = true;\\n        }\\n        if (resizingY && move1(point, y, 1)) {\\n          redrawY(g);\\n          moved = true;\\n        }\\n        if (moved) {\\n          redraw(g);\\n          event_({\\n            type: \\\"brush\\\",\\n            mode: dragging ? \\\"move\\\" : \\\"resize\\\"\\n          });\\n        }\\n      }\\n      function move1(point, scale, i) {\\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\\n        if (dragging) {\\n          r0 -= position;\\n          r1 -= size + position;\\n        }\\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\\n        if (dragging) {\\n          max = (min += position) + size;\\n        } else {\\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\\n          if (position < min) {\\n            max = min;\\n            min = position;\\n          } else {\\n            max = position;\\n          }\\n        }\\n        if (extent[0] != min || extent[1] != max) {\\n          if (i) yExtentDomain = null; else xExtentDomain = null;\\n          extent[0] = min;\\n          extent[1] = max;\\n          return true;\\n        }\\n      }\\n      function brushend() {\\n        brushmove();\\n        g.style(\\\"pointer-events\\\", \\\"all\\\").selectAll(\\\".resize\\\").style(\\\"display\\\", brush.empty() ? \\\"none\\\" : null);\\n        d3.select(\\\"body\\\").style(\\\"cursor\\\", null);\\n        w.on(\\\"mousemove.brush\\\", null).on(\\\"mouseup.brush\\\", null).on(\\\"touchmove.brush\\\", null).on(\\\"touchend.brush\\\", null).on(\\\"keydown.brush\\\", null).on(\\\"keyup.brush\\\", null);\\n        dragRestore();\\n        event_({\\n          type: \\\"brushend\\\"\\n        });\\n      }\\n    }\\n    brush.x = function(z) {\\n      if (!arguments.length) return x;\\n      x = z;\\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\\n      return brush;\\n    };\\n    brush.y = function(z) {\\n      if (!arguments.length) return y;\\n      y = z;\\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\\n      return brush;\\n    };\\n    brush.clamp = function(z) {\\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\\n      return brush;\\n    };\\n    brush.extent = function(z) {\\n      var x0, x1, y0, y1, t;\\n      if (!arguments.length) {\\n        if (x) {\\n          if (xExtentDomain) {\\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\\n          } else {\\n            x0 = xExtent[0], x1 = xExtent[1];\\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\\n          }\\n        }\\n        if (y) {\\n          if (yExtentDomain) {\\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\\n          } else {\\n            y0 = yExtent[0], y1 = yExtent[1];\\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\\n          }\\n        }\\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\\n      }\\n      if (x) {\\n        x0 = z[0], x1 = z[1];\\n        if (y) x0 = x0[0], x1 = x1[0];\\n        xExtentDomain = [ x0, x1 ];\\n        if (x.invert) x0 = x(x0), x1 = x(x1);\\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\\n      }\\n      if (y) {\\n        y0 = z[0], y1 = z[1];\\n        if (x) y0 = y0[1], y1 = y1[1];\\n        yExtentDomain = [ y0, y1 ];\\n        if (y.invert) y0 = y(y0), y1 = y(y1);\\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\\n      }\\n      return brush;\\n    };\\n    brush.clear = function() {\\n      if (!brush.empty()) {\\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\\n        xExtentDomain = yExtentDomain = null;\\n      }\\n      return brush;\\n    };\\n    brush.empty = function() {\\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\\n    };\\n    return d3.rebind(brush, event, \\\"on\\\");\\n  };\\n  var d3_svg_brushCursor = {\\n    n: \\\"ns-resize\\\",\\n    e: \\\"ew-resize\\\",\\n    s: \\\"ns-resize\\\",\\n    w: \\\"ew-resize\\\",\\n    nw: \\\"nwse-resize\\\",\\n    ne: \\\"nesw-resize\\\",\\n    se: \\\"nwse-resize\\\",\\n    sw: \\\"nesw-resize\\\"\\n  };\\n  var d3_svg_brushResizes = [ [ \\\"n\\\", \\\"e\\\", \\\"s\\\", \\\"w\\\", \\\"nw\\\", \\\"ne\\\", \\\"se\\\", \\\"sw\\\" ], [ \\\"e\\\", \\\"w\\\" ], [ \\\"n\\\", \\\"s\\\" ], [] ];\\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\\n  var d3_time_formatUtc = d3_time_format.utc;\\n  var d3_time_formatIso = d3_time_formatUtc(\\\"%Y-%m-%dT%H:%M:%S.%LZ\\\");\\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\\\"2000-01-01T00:00:00.000Z\\\") ? d3_time_formatIsoNative : d3_time_formatIso;\\n  function d3_time_formatIsoNative(date) {\\n    return date.toISOString();\\n  }\\n  d3_time_formatIsoNative.parse = function(string) {\\n    var date = new Date(string);\\n    return isNaN(date) ? null : date;\\n  };\\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\\n  d3_time.second = d3_time_interval(function(date) {\\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\\n  }, function(date, offset) {\\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\\n  }, function(date) {\\n    return date.getSeconds();\\n  });\\n  d3_time.seconds = d3_time.second.range;\\n  d3_time.seconds.utc = d3_time.second.utc.range;\\n  d3_time.minute = d3_time_interval(function(date) {\\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\\n  }, function(date, offset) {\\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\\n  }, function(date) {\\n    return date.getMinutes();\\n  });\\n  d3_time.minutes = d3_time.minute.range;\\n  d3_time.minutes.utc = d3_time.minute.utc.range;\\n  d3_time.hour = d3_time_interval(function(date) {\\n    var timezone = date.getTimezoneOffset() / 60;\\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\\n  }, function(date, offset) {\\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\\n  }, function(date) {\\n    return date.getHours();\\n  });\\n  d3_time.hours = d3_time.hour.range;\\n  d3_time.hours.utc = d3_time.hour.utc.range;\\n  d3_time.month = d3_time_interval(function(date) {\\n    date = d3_time.day(date);\\n    date.setDate(1);\\n    return date;\\n  }, function(date, offset) {\\n    date.setMonth(date.getMonth() + offset);\\n  }, function(date) {\\n    return date.getMonth();\\n  });\\n  d3_time.months = d3_time.month.range;\\n  d3_time.months.utc = d3_time.month.utc.range;\\n  function d3_time_scale(linear, methods, format) {\\n    function scale(x) {\\n      return linear(x);\\n    }\\n    scale.invert = function(x) {\\n      return d3_time_scaleDate(linear.invert(x));\\n    };\\n    scale.domain = function(x) {\\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\\n      linear.domain(x);\\n      return scale;\\n    };\\n    function tickMethod(extent, count) {\\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\\n        return d / 31536e6;\\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\\n    }\\n    scale.nice = function(interval, skip) {\\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \\\"number\\\" && tickMethod(extent, interval);\\n      if (method) interval = method[0], skip = method[1];\\n      function skipped(date) {\\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\\n      }\\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\\n        floor: function(date) {\\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\\n          return date;\\n        },\\n        ceil: function(date) {\\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\\n          return date;\\n        }\\n      } : interval));\\n    };\\n    scale.ticks = function(interval, skip) {\\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \\\"number\\\" ? tickMethod(extent, interval) : !interval.range && [ {\\n        range: interval\\n      }, skip ];\\n      if (method) interval = method[0], skip = method[1];\\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\\n    };\\n    scale.tickFormat = function() {\\n      return format;\\n    };\\n    scale.copy = function() {\\n      return d3_time_scale(linear.copy(), methods, format);\\n    };\\n    return d3_scale_linearRebind(scale, linear);\\n  }\\n  function d3_time_scaleDate(t) {\\n    return new Date(t);\\n  }\\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \\\".%L\\\", function(d) {\\n    return d.getMilliseconds();\\n  } ], [ \\\":%S\\\", function(d) {\\n    return d.getSeconds();\\n  } ], [ \\\"%I:%M\\\", function(d) {\\n    return d.getMinutes();\\n  } ], [ \\\"%I %p\\\", function(d) {\\n    return d.getHours();\\n  } ], [ \\\"%a %d\\\", function(d) {\\n    return d.getDay() && d.getDate() != 1;\\n  } ], [ \\\"%b %d\\\", function(d) {\\n    return d.getDate() != 1;\\n  } ], [ \\\"%B\\\", function(d) {\\n    return d.getMonth();\\n  } ], [ \\\"%Y\\\", d3_true ] ]);\\n  var d3_time_scaleMilliseconds = {\\n    range: function(start, stop, step) {\\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\\n    },\\n    floor: d3_identity,\\n    ceil: d3_identity\\n  };\\n  d3_time_scaleLocalMethods.year = d3_time.year;\\n  d3_time.scale = function() {\\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\\n  };\\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\\n    return [ m[0].utc, m[1] ];\\n  });\\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \\\".%L\\\", function(d) {\\n    return d.getUTCMilliseconds();\\n  } ], [ \\\":%S\\\", function(d) {\\n    return d.getUTCSeconds();\\n  } ], [ \\\"%I:%M\\\", function(d) {\\n    return d.getUTCMinutes();\\n  } ], [ \\\"%I %p\\\", function(d) {\\n    return d.getUTCHours();\\n  } ], [ \\\"%a %d\\\", function(d) {\\n    return d.getUTCDay() && d.getUTCDate() != 1;\\n  } ], [ \\\"%b %d\\\", function(d) {\\n    return d.getUTCDate() != 1;\\n  } ], [ \\\"%B\\\", function(d) {\\n    return d.getUTCMonth();\\n  } ], [ \\\"%Y\\\", d3_true ] ]);\\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\\n  d3_time.scale.utc = function() {\\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\\n  };\\n  d3.text = d3_xhrType(function(request) {\\n    return request.responseText;\\n  });\\n  d3.json = function(url, callback) {\\n    return d3_xhr(url, \\\"application/json\\\", d3_json, callback);\\n  };\\n  function d3_json(request) {\\n    return JSON.parse(request.responseText);\\n  }\\n  d3.html = function(url, callback) {\\n    return d3_xhr(url, \\\"text/html\\\", d3_html, callback);\\n  };\\n  function d3_html(request) {\\n    var range = d3_document.createRange();\\n    range.selectNode(d3_document.body);\\n    return range.createContextualFragment(request.responseText);\\n  }\\n  d3.xml = d3_xhrType(function(request) {\\n    return request.responseXML;\\n  });\\n  if (typeof define === \\\"function\\\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \\\"object\\\" && module.exports) module.exports = d3; else this.d3 = d3;\\n}();\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./examples/dc/~/d3/d3.js\n// module id = 45\n// module chunks = 0","module.exports = \"/*!\\n *  dc 2.1.8\\n *  http://dc-js.github.io/dc.js/\\n *  Copyright 2012-2016 Nick Zhu & the dc.js Developers\\n *  https://github.com/dc-js/dc.js/blob/master/AUTHORS\\n *\\n *  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n *  you may not use this file except in compliance with the License.\\n *  You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n *  Unless required by applicable law or agreed to in writing, software\\n *  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n *  See the License for the specific language governing permissions and\\n *  limitations under the License.\\n */\\n(function() { function _dc(d3, crossfilter) {\\n'use strict';\\n\\n/**\\n * The entire dc.js library is scoped under the **dc** name space. It does not introduce\\n * anything else into the global name space.\\n *\\n * Most `dc` functions are designed to allow function chaining, meaning they return the current chart\\n * instance whenever it is appropriate.  The getter forms of functions do not participate in function\\n * chaining because they return values that are not the chart, although some,\\n * such as {@link dc.baseMixin#svg .svg} and {@link dc.coordinateGridMixin#xAxis .xAxis},\\n * return values that are themselves chainable d3 objects.\\n * @namespace dc\\n * @version 2.1.8\\n * @example\\n * // Example chaining\\n * chart.width(300)\\n *      .height(300)\\n *      .filter('sunday');\\n */\\n/*jshint -W079*/\\nvar dc = {\\n    version: '2.1.8',\\n    constants: {\\n        CHART_CLASS: 'dc-chart',\\n        DEBUG_GROUP_CLASS: 'debug',\\n        STACK_CLASS: 'stack',\\n        DESELECTED_CLASS: 'deselected',\\n        SELECTED_CLASS: 'selected',\\n        NODE_INDEX_NAME: '__index__',\\n        GROUP_INDEX_NAME: '__group_index__',\\n        DEFAULT_CHART_GROUP: '__default_chart_group__',\\n        EVENT_DELAY: 40,\\n        NEGLIGIBLE_NUMBER: 1e-10\\n    },\\n    _renderlet: null\\n};\\n/*jshint +W079*/\\n\\n/**\\n * The dc.chartRegistry object maintains sets of all instantiated dc.js charts under named groups\\n * and the default group.\\n *\\n * A chart group often corresponds to a crossfilter instance. It specifies\\n * the set of charts which should be updated when a filter changes on one of the charts or when the\\n * global functions {@link dc.filterAll dc.filterAll}, {@link dc.refocusAll dc.refocusAll},\\n * {@link dc.renderAll dc.renderAll}, {@link dc.redrawAll dc.redrawAll}, or chart functions\\n * {@link dc.baseMixin#renderGroup baseMixin.renderGroup},\\n * {@link dc.baseMixin#redrawGroup baseMixin.redrawGroup} are called.\\n *\\n * @namespace chartRegistry\\n * @memberof dc\\n * @type {{has, register, deregister, clear, list}}\\n */\\ndc.chartRegistry = (function () {\\n    // chartGroup:string => charts:array\\n    var _chartMap = {};\\n\\n    function initializeChartGroup (group) {\\n        if (!group) {\\n            group = dc.constants.DEFAULT_CHART_GROUP;\\n        }\\n\\n        if (!_chartMap[group]) {\\n            _chartMap[group] = [];\\n        }\\n\\n        return group;\\n    }\\n\\n    return {\\n        /**\\n         * Determine if a given chart instance resides in any group in the registry.\\n         * @method has\\n         * @memberof dc.chartRegistry\\n         * @param {Object} chart dc.js chart instance\\n         * @returns {Boolean}\\n         */\\n        has: function (chart) {\\n            for (var e in _chartMap) {\\n                if (_chartMap[e].indexOf(chart) >= 0) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        },\\n\\n        /**\\n         * Add given chart instance to the given group, creating the group if necessary.\\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\\n         * @method register\\n         * @memberof dc.chartRegistry\\n         * @param {Object} chart dc.js chart instance\\n         * @param {String} [group] Group name\\n         */\\n        register: function (chart, group) {\\n            group = initializeChartGroup(group);\\n            _chartMap[group].push(chart);\\n        },\\n\\n        /**\\n         * Remove given chart instance from the given group, creating the group if necessary.\\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\\n         * @method deregister\\n         * @memberof dc.chartRegistry\\n         * @param {Object} chart dc.js chart instance\\n         * @param {String} [group] Group name\\n         */\\n        deregister: function (chart, group) {\\n            group = initializeChartGroup(group);\\n            for (var i = 0; i < _chartMap[group].length; i++) {\\n                if (_chartMap[group][i].anchorName() === chart.anchorName()) {\\n                    _chartMap[group].splice(i, 1);\\n                    break;\\n                }\\n            }\\n        },\\n\\n        /**\\n         * Clear given group if one is provided, otherwise clears all groups.\\n         * @method clear\\n         * @memberof dc.chartRegistry\\n         * @param {String} group Group name\\n         */\\n        clear: function (group) {\\n            if (group) {\\n                delete _chartMap[group];\\n            } else {\\n                _chartMap = {};\\n            }\\n        },\\n\\n        /**\\n         * Get an array of each chart instance in the given group.\\n         * If no group is provided, the charts in the default group are returned.\\n         * @method list\\n         * @memberof dc.chartRegistry\\n         * @param {String} [group] Group name\\n         * @returns {Array<Object>}\\n         */\\n        list: function (group) {\\n            group = initializeChartGroup(group);\\n            return _chartMap[group];\\n        }\\n    };\\n})();\\n\\n/**\\n * Add given chart instance to the given group, creating the group if necessary.\\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\\n * @memberof dc\\n * @method registerChart\\n * @param {Object} chart dc.js chart instance\\n * @param {String} [group] Group name\\n */\\ndc.registerChart = function (chart, group) {\\n    dc.chartRegistry.register(chart, group);\\n};\\n\\n/**\\n * Remove given chart instance from the given group, creating the group if necessary.\\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\\n * @memberof dc\\n * @method deregisterChart\\n * @param {Object} chart dc.js chart instance\\n * @param {String} [group] Group name\\n */\\ndc.deregisterChart = function (chart, group) {\\n    dc.chartRegistry.deregister(chart, group);\\n};\\n\\n/**\\n * Determine if a given chart instance resides in any group in the registry.\\n * @memberof dc\\n * @method hasChart\\n * @param {Object} chart dc.js chart instance\\n * @returns {Boolean}\\n */\\ndc.hasChart = function (chart) {\\n    return dc.chartRegistry.has(chart);\\n};\\n\\n/**\\n * Clear given group if one is provided, otherwise clears all groups.\\n * @memberof dc\\n * @method deregisterAllCharts\\n * @param {String} group Group name\\n */\\ndc.deregisterAllCharts = function (group) {\\n    dc.chartRegistry.clear(group);\\n};\\n\\n/**\\n * Clear all filters on all charts within the given chart group. If the chart group is not given then\\n * only charts that belong to the default chart group will be reset.\\n * @memberof dc\\n * @method filterAll\\n * @param {String} [group]\\n */\\ndc.filterAll = function (group) {\\n    var charts = dc.chartRegistry.list(group);\\n    for (var i = 0; i < charts.length; ++i) {\\n        charts[i].filterAll();\\n    }\\n};\\n\\n/**\\n * Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is\\n * not given then only charts that belong to the default chart group will be reset.\\n * @memberof dc\\n * @method refocusAll\\n * @param {String} [group]\\n */\\ndc.refocusAll = function (group) {\\n    var charts = dc.chartRegistry.list(group);\\n    for (var i = 0; i < charts.length; ++i) {\\n        if (charts[i].focus) {\\n            charts[i].focus();\\n        }\\n    }\\n};\\n\\n/**\\n * Re-render all charts belong to the given chart group. If the chart group is not given then only\\n * charts that belong to the default chart group will be re-rendered.\\n * @memberof dc\\n * @method renderAll\\n * @param {String} [group]\\n */\\ndc.renderAll = function (group) {\\n    var charts = dc.chartRegistry.list(group);\\n    for (var i = 0; i < charts.length; ++i) {\\n        charts[i].render();\\n    }\\n\\n    if (dc._renderlet !== null) {\\n        dc._renderlet(group);\\n    }\\n};\\n\\n/**\\n * Redraw all charts belong to the given chart group. If the chart group is not given then only charts\\n * that belong to the default chart group will be re-drawn. Redraw is different from re-render since\\n * when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting\\n * from scratch.\\n * @memberof dc\\n * @method redrawAll\\n * @param {String} [group]\\n */\\ndc.redrawAll = function (group) {\\n    var charts = dc.chartRegistry.list(group);\\n    for (var i = 0; i < charts.length; ++i) {\\n        charts[i].redraw();\\n    }\\n\\n    if (dc._renderlet !== null) {\\n        dc._renderlet(group);\\n    }\\n};\\n\\n/**\\n * If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\\n * immediately.\\n * @memberof dc\\n * @member disableTransitions\\n * @type {Boolean}\\n * @default false\\n */\\ndc.disableTransitions = false;\\n\\n/**\\n * Start a transition on a selection if transitions are globally enabled\\n * ({@link dc.disableTransitions} is false) and the duration is greater than zero; otherwise return\\n * the selection. Since most operations are the same on a d3 selection and a d3 transition, this\\n * allows a common code path for both cases.\\n * @memberof dc\\n * @method transition\\n * @param {d3.selection} selection - the selection to be transitioned\\n * @param {Number|Function} [duration=250] - the duration of the transition in milliseconds, a\\n * function returning the duration, or 0 for no transition\\n * @param {Number|Function} [delay] - the delay of the transition in milliseconds, or a function\\n * returning the delay, or 0 for no delay\\n * @param {String} [name] - the name of the transition (if concurrent transitions on the same\\n * elements are needed)\\n * @returns {d3.transition|d3.selection}\\n */\\ndc.transition = function (selection, duration, delay, name) {\\n    if (dc.disableTransitions || duration <= 0) {\\n        return selection;\\n    }\\n\\n    var s = selection.transition(name);\\n\\n    if (duration >= 0 || duration !== undefined) {\\n        s = s.duration(duration);\\n    }\\n    if (delay >= 0 || delay !== undefined) {\\n        s = s.delay(delay);\\n    }\\n\\n    return s;\\n};\\n\\n/* somewhat silly, but to avoid duplicating logic */\\ndc.optionalTransition = function (enable, duration, delay, name) {\\n    if (enable) {\\n        return function (selection) {\\n            return dc.transition(selection, duration, delay, name);\\n        };\\n    } else {\\n        return function (selection) {\\n            return selection;\\n        };\\n    }\\n};\\n\\n// See http://stackoverflow.com/a/20773846\\ndc.afterTransition = function (transition, callback) {\\n    if (transition.empty() || !transition.duration) {\\n        callback.call(transition);\\n    } else {\\n        var n = 0;\\n        transition\\n            .each(function () { ++n; })\\n            .each('end', function () {\\n                if (!--n) {\\n                    callback.call(transition);\\n                }\\n            });\\n    }\\n};\\n\\n/**\\n * @namespace units\\n * @memberof dc\\n * @type {{}}\\n */\\ndc.units = {};\\n\\n/**\\n * The default value for {@link dc.coordinateGridMixin#xUnits .xUnits} for the\\n * {@link dc.coordinateGridMixin Coordinate Grid Chart} and should\\n * be used when the x values are a sequence of integers.\\n * It is a function that counts the number of integers in the range supplied in its start and end parameters.\\n * @method integers\\n * @memberof dc.units\\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\\n * @example\\n * chart.xUnits(dc.units.integers) // already the default\\n * @param {Number} start\\n * @param {Number} end\\n * @returns {Number}\\n */\\ndc.units.integers = function (start, end) {\\n    return Math.abs(end - start);\\n};\\n\\n/**\\n * This argument can be passed to the {@link dc.coordinateGridMixin#xUnits .xUnits} function of the to\\n * specify ordinal units for the x axis. Usually this parameter is used in combination with passing\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md d3.scale.ordinal} to\\n * {@link dc.coordinateGridMixin#x .x}.\\n * It just returns the domain passed to it, which for ordinal charts is an array of all values.\\n * @method ordinal\\n * @memberof dc.units\\n * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md d3.scale.ordinal}\\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\\n * @see {@link dc.coordinateGridMixin#x coordinateGridMixin.x}\\n * @example\\n * chart.xUnits(dc.units.ordinal)\\n *      .x(d3.scale.ordinal())\\n * @param {*} start\\n * @param {*} end\\n * @param {Array<String>} domain\\n * @returns {Array<String>}\\n */\\ndc.units.ordinal = function (start, end, domain) {\\n    return domain;\\n};\\n\\n/**\\n * @namespace fp\\n * @memberof dc.units\\n * @type {{}}\\n */\\ndc.units.fp = {};\\n/**\\n * This function generates an argument for the {@link dc.coordinateGridMixin Coordinate Grid Chart}\\n * {@link dc.coordinateGridMixin#xUnits .xUnits} function specifying that the x values are floating-point\\n * numbers with the given precision.\\n * The returned function determines how many values at the given precision will fit into the range\\n * supplied in its start and end parameters.\\n * @method precision\\n * @memberof dc.units.fp\\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\\n * @example\\n * // specify values (and ticks) every 0.1 units\\n * chart.xUnits(dc.units.fp.precision(0.1)\\n * // there are 500 units between 0.5 and 1 if the precision is 0.001\\n * var thousandths = dc.units.fp.precision(0.001);\\n * thousandths(0.5, 1.0) // returns 500\\n * @param {Number} precision\\n * @returns {Function} start-end unit function\\n */\\ndc.units.fp.precision = function (precision) {\\n    var _f = function (s, e) {\\n        var d = Math.abs((e - s) / _f.resolution);\\n        if (dc.utils.isNegligible(d - Math.floor(d))) {\\n            return Math.floor(d);\\n        } else {\\n            return Math.ceil(d);\\n        }\\n    };\\n    _f.resolution = precision;\\n    return _f;\\n};\\n\\ndc.round = {};\\ndc.round.floor = function (n) {\\n    return Math.floor(n);\\n};\\ndc.round.ceil = function (n) {\\n    return Math.ceil(n);\\n};\\ndc.round.round = function (n) {\\n    return Math.round(n);\\n};\\n\\ndc.override = function (obj, functionName, newFunction) {\\n    var existingFunction = obj[functionName];\\n    obj['_' + functionName] = existingFunction;\\n    obj[functionName] = newFunction;\\n};\\n\\ndc.renderlet = function (_) {\\n    if (!arguments.length) {\\n        return dc._renderlet;\\n    }\\n    dc._renderlet = _;\\n    return dc;\\n};\\n\\ndc.instanceOfChart = function (o) {\\n    return o instanceof Object && o.__dcFlag__ && true;\\n};\\n\\ndc.errors = {};\\n\\ndc.errors.Exception = function (msg) {\\n    var _msg = msg || 'Unexpected internal error';\\n\\n    this.message = _msg;\\n\\n    this.toString = function () {\\n        return _msg;\\n    };\\n    this.stack = (new Error()).stack;\\n};\\ndc.errors.Exception.prototype = Object.create(Error.prototype);\\ndc.errors.Exception.prototype.constructor = dc.errors.Exception;\\n\\ndc.errors.InvalidStateException = function () {\\n    dc.errors.Exception.apply(this, arguments);\\n};\\n\\ndc.errors.InvalidStateException.prototype = Object.create(dc.errors.Exception.prototype);\\ndc.errors.InvalidStateException.prototype.constructor = dc.errors.InvalidStateException;\\n\\ndc.errors.BadArgumentException = function () {\\n    dc.errors.Exception.apply(this, arguments);\\n};\\n\\ndc.errors.BadArgumentException.prototype = Object.create(dc.errors.Exception.prototype);\\ndc.errors.BadArgumentException.prototype.constructor = dc.errors.BadArgumentException;\\n\\n/**\\n * The default date format for dc.js\\n * @name dateFormat\\n * @memberof dc\\n * @type {Function}\\n * @default d3.time.format('%m/%d/%Y')\\n */\\ndc.dateFormat = d3.time.format('%m/%d/%Y');\\n\\n/**\\n * @namespace printers\\n * @memberof dc\\n * @type {{}}\\n */\\ndc.printers = {};\\n\\n/**\\n * Converts a list of filters into a readable string.\\n * @method filters\\n * @memberof dc.printers\\n * @param {Array<dc.filters>} filters\\n * @returns {String}\\n */\\ndc.printers.filters = function (filters) {\\n    var s = '';\\n\\n    for (var i = 0; i < filters.length; ++i) {\\n        if (i > 0) {\\n            s += ', ';\\n        }\\n        s += dc.printers.filter(filters[i]);\\n    }\\n\\n    return s;\\n};\\n\\n/**\\n * Converts a filter into a readable string.\\n * @method filter\\n * @memberof dc.printers\\n * @param {dc.filters|any|Array<any>} filter\\n * @returns {String}\\n */\\ndc.printers.filter = function (filter) {\\n    var s = '';\\n\\n    if (typeof filter !== 'undefined' && filter !== null) {\\n        if (filter instanceof Array) {\\n            if (filter.length >= 2) {\\n                s = '[' + dc.utils.printSingleValue(filter[0]) + ' -> ' + dc.utils.printSingleValue(filter[1]) + ']';\\n            } else if (filter.length >= 1) {\\n                s = dc.utils.printSingleValue(filter[0]);\\n            }\\n        } else {\\n            s = dc.utils.printSingleValue(filter);\\n        }\\n    }\\n\\n    return s;\\n};\\n\\n/**\\n * Returns a function that given a string property name, can be used to pluck the property off an object.  A function\\n * can be passed as the second argument to also alter the data being returned.\\n *\\n * This can be a useful shorthand method to create accessor functions.\\n * @method pluck\\n * @memberof dc\\n * @example\\n * var xPluck = dc.pluck('x');\\n * var objA = {x: 1};\\n * xPluck(objA) // 1\\n * @example\\n * var xPosition = dc.pluck('x', function (x, i) {\\n *     // `this` is the original datum,\\n *     // `x` is the x property of the datum,\\n *     // `i` is the position in the array\\n *     return this.radius + x;\\n * });\\n * dc.selectAll('.circle').data(...).x(xPosition);\\n * @param {String} n\\n * @param {Function} [f]\\n * @returns {Function}\\n */\\ndc.pluck = function (n, f) {\\n    if (!f) {\\n        return function (d) { return d[n]; };\\n    }\\n    return function (d, i) { return f.call(d, d[n], i); };\\n};\\n\\n/**\\n * @namespace utils\\n * @memberof dc\\n * @type {{}}\\n */\\ndc.utils = {};\\n\\n/**\\n * Print a single value filter.\\n * @method printSingleValue\\n * @memberof dc.utils\\n * @param {any} filter\\n * @returns {String}\\n */\\ndc.utils.printSingleValue = function (filter) {\\n    var s = '' + filter;\\n\\n    if (filter instanceof Date) {\\n        s = dc.dateFormat(filter);\\n    } else if (typeof(filter) === 'string') {\\n        s = filter;\\n    } else if (dc.utils.isFloat(filter)) {\\n        s = dc.utils.printSingleValue.fformat(filter);\\n    } else if (dc.utils.isInteger(filter)) {\\n        s = Math.round(filter);\\n    }\\n\\n    return s;\\n};\\ndc.utils.printSingleValue.fformat = d3.format('.2f');\\n\\n/**\\n * Arbitrary add one value to another.\\n * @method add\\n * @memberof dc.utils\\n * @todo\\n * These assume than any string r is a percentage (whether or not it includes %).\\n * They also generate strange results if l is a string.\\n * @param {String|Date|Number} l the value to modify\\n * @param {Number} r the amount by which to modify the value\\n * @param {String} [t] if `l` is a `Date`, the\\n * [interval](https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Intervals.md#interval) in\\n * the `d3.time` namespace\\n * @returns {String|Date|Number}\\n */\\ndc.utils.add = function (l, r, t) {\\n    if (typeof r === 'string') {\\n        r = r.replace('%', '');\\n    }\\n\\n    if (l instanceof Date) {\\n        if (typeof r === 'string') {\\n            r = +r;\\n        }\\n        if (t === 'millis') {\\n            return new Date(l.getTime() + r);\\n        }\\n        t = t || 'day';\\n        return d3.time[t].offset(l, r);\\n    } else if (typeof r === 'string') {\\n        var percentage = (+r / 100);\\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\\n    } else {\\n        return l + r;\\n    }\\n};\\n\\n/**\\n * Arbitrary subtract one value from another.\\n * @method subtract\\n * @memberof dc.utils\\n * @todo\\n * These assume than any string r is a percentage (whether or not it includes %).\\n * They also generate strange results if l is a string.\\n * @param {String|Date|Number} l the value to modify\\n * @param {Number} r the amount by which to modify the value\\n * @param {String} [t] if `l` is a `Date`, the\\n * [interval](https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Intervals.md#interval) in\\n * the `d3.time` namespace\\n * @returns {String|Date|Number}\\n */\\ndc.utils.subtract = function (l, r, t) {\\n    if (typeof r === 'string') {\\n        r = r.replace('%', '');\\n    }\\n\\n    if (l instanceof Date) {\\n        if (typeof r === 'string') {\\n            r = +r;\\n        }\\n        if (t === 'millis') {\\n            return new Date(l.getTime() - r);\\n        }\\n        t = t || 'day';\\n        return d3.time[t].offset(l, -r);\\n    } else if (typeof r === 'string') {\\n        var percentage = (+r / 100);\\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\\n    } else {\\n        return l - r;\\n    }\\n};\\n\\n/**\\n * Is the value a number?\\n * @method isNumber\\n * @memberof dc.utils\\n * @param {any} n\\n * @returns {Boolean}\\n */\\ndc.utils.isNumber = function (n) {\\n    return n === +n;\\n};\\n\\n/**\\n * Is the value a float?\\n * @method isFloat\\n * @memberof dc.utils\\n * @param {any} n\\n * @returns {Boolean}\\n */\\ndc.utils.isFloat = function (n) {\\n    return n === +n && n !== (n | 0);\\n};\\n\\n/**\\n * Is the value an integer?\\n * @method isInteger\\n * @memberof dc.utils\\n * @param {any} n\\n * @returns {Boolean}\\n */\\ndc.utils.isInteger = function (n) {\\n    return n === +n && n === (n | 0);\\n};\\n\\n/**\\n * Is the value very close to zero?\\n * @method isNegligible\\n * @memberof dc.utils\\n * @param {any} n\\n * @returns {Boolean}\\n */\\ndc.utils.isNegligible = function (n) {\\n    return !dc.utils.isNumber(n) || (n < dc.constants.NEGLIGIBLE_NUMBER && n > -dc.constants.NEGLIGIBLE_NUMBER);\\n};\\n\\n/**\\n * Ensure the value is no greater or less than the min/max values.  If it is return the boundary value.\\n * @method clamp\\n * @memberof dc.utils\\n * @param {any} val\\n * @param {any} min\\n * @param {any} max\\n * @returns {any}\\n */\\ndc.utils.clamp = function (val, min, max) {\\n    return val < min ? min : (val > max ? max : val);\\n};\\n\\n/**\\n * Using a simple static counter, provide a unique integer id.\\n * @method uniqueId\\n * @memberof dc.utils\\n * @returns {Number}\\n */\\nvar _idCounter = 0;\\ndc.utils.uniqueId = function () {\\n    return ++_idCounter;\\n};\\n\\n/**\\n * Convert a name to an ID.\\n * @method nameToId\\n * @memberof dc.utils\\n * @param {String} name\\n * @returns {String}\\n */\\ndc.utils.nameToId = function (name) {\\n    return name.toLowerCase().replace(/[\\\\s]/g, '_').replace(/[\\\\.']/g, '');\\n};\\n\\n/**\\n * Append or select an item on a parent element.\\n * @method appendOrSelect\\n * @memberof dc.utils\\n * @param {d3.selection} parent\\n * @param {String} selector\\n * @param {String} tag\\n * @returns {d3.selection}\\n */\\ndc.utils.appendOrSelect = function (parent, selector, tag) {\\n    tag = tag || selector;\\n    var element = parent.select(selector);\\n    if (element.empty()) {\\n        element = parent.append(tag);\\n    }\\n    return element;\\n};\\n\\n/**\\n * Return the number if the value is a number; else 0.\\n * @method safeNumber\\n * @memberof dc.utils\\n * @param {Number|any} n\\n * @returns {Number}\\n */\\ndc.utils.safeNumber = function (n) { return dc.utils.isNumber(+n) ? +n : 0;};\\n\\ndc.logger = {};\\n\\ndc.logger.enableDebugLog = false;\\n\\ndc.logger.warn = function (msg) {\\n    if (console) {\\n        if (console.warn) {\\n            console.warn(msg);\\n        } else if (console.log) {\\n            console.log(msg);\\n        }\\n    }\\n\\n    return dc.logger;\\n};\\n\\ndc.logger.debug = function (msg) {\\n    if (dc.logger.enableDebugLog && console) {\\n        if (console.debug) {\\n            console.debug(msg);\\n        } else if (console.log) {\\n            console.log(msg);\\n        }\\n    }\\n\\n    return dc.logger;\\n};\\n\\ndc.logger.deprecate = function (fn, msg) {\\n    // Allow logging of deprecation\\n    var warned = false;\\n    function deprecated () {\\n        if (!warned) {\\n            dc.logger.warn(msg);\\n            warned = true;\\n        }\\n        return fn.apply(this, arguments);\\n    }\\n    return deprecated;\\n};\\n\\ndc.events = {\\n    current: null\\n};\\n\\n/**\\n * This function triggers a throttled event function with a specified delay (in milli-seconds).  Events\\n * that are triggered repetitively due to user interaction such brush dragging might flood the library\\n * and invoke more renders than can be executed in time. Using this function to wrap your event\\n * function allows the library to smooth out the rendering by throttling events and only responding to\\n * the most recent event.\\n * @name events.trigger\\n * @memberof dc\\n * @example\\n * chart.on('renderlet', function(chart) {\\n *     // smooth the rendering through event throttling\\n *     dc.events.trigger(function(){\\n *         // focus some other chart to the range selected by user on this chart\\n *         someOtherChart.focus(chart.filter());\\n *     });\\n * })\\n * @param {Function} closure\\n * @param {Number} [delay]\\n */\\ndc.events.trigger = function (closure, delay) {\\n    if (!delay) {\\n        closure();\\n        return;\\n    }\\n\\n    dc.events.current = closure;\\n\\n    setTimeout(function () {\\n        if (closure === dc.events.current) {\\n            closure();\\n        }\\n    }, delay);\\n};\\n\\n/**\\n * The dc.js filters are functions which are passed into crossfilter to chose which records will be\\n * accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one\\n * dimension will affect all the other dimensions but not that one.  dc always applies a filter\\n * function to the dimension; the function combines multiple filters and if any of them accept a\\n * record, it is filtered in.\\n *\\n * These filter constructors are used as appropriate by the various charts to implement brushing.  We\\n * mention below which chart uses which filter.  In some cases, many instances of a filter will be added.\\n *\\n * Each of the dc.js filters is an object with the following properties:\\n * * `isFiltered` - a function that returns true if a value is within the filter\\n * * `filterType` - a string identifying the filter, here the name of the constructor\\n *\\n * Currently these filter objects are also arrays, but this is not a requirement. Custom filters\\n * can be used as long as they have the properties above.\\n * @namespace filters\\n * @memberof dc\\n * @type {{}}\\n */\\ndc.filters = {};\\n\\n/**\\n * RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X\\n * axis brushing for the {@link dc.coordinateGridMixin coordinate grid charts}.\\n *\\n * Its `filterType` is 'RangedFilter'\\n * @name RangedFilter\\n * @memberof dc.filters\\n * @param {Number} low\\n * @param {Number} high\\n * @returns {Array<Number>}\\n * @constructor\\n */\\ndc.filters.RangedFilter = function (low, high) {\\n    var range = new Array(low, high);\\n    range.isFiltered = function (value) {\\n        return value >= this[0] && value < this[1];\\n    };\\n    range.filterType = 'RangedFilter';\\n\\n    return range;\\n};\\n\\n/**\\n * TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the\\n * {@link dc.heatMap heat map chart} to include particular cells as they are clicked.  (Rows and columns are\\n * filtered by filtering all the cells in the row or column.)\\n *\\n * Its `filterType` is 'TwoDimensionalFilter'\\n * @name TwoDimensionalFilter\\n * @memberof dc.filters\\n * @param {Array<Number>} filter\\n * @returns {Array<Number>}\\n * @constructor\\n */\\ndc.filters.TwoDimensionalFilter = function (filter) {\\n    if (filter === null) { return null; }\\n\\n    var f = filter;\\n    f.isFiltered = function (value) {\\n        return value.length && value.length === f.length &&\\n               value[0] === f[0] && value[1] === f[1];\\n    };\\n    f.filterType = 'TwoDimensionalFilter';\\n\\n    return f;\\n};\\n\\n/**\\n * The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular\\n * region. It is used by the {@link dc.scatterPlot scatter plot} to implement rectangular brushing.\\n *\\n * It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that\\n * `x1 <= x2` and `y1 <= y2`. It then returns a filter which accepts any points which are in the\\n * rectangular range including the lower values but excluding the higher values.\\n *\\n * If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as\\n * two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <\\n * x2`.\\n *\\n * Its `filterType` is 'RangedTwoDimensionalFilter'\\n * @name RangedTwoDimensionalFilter\\n * @memberof dc.filters\\n * @param {Array<Array<Number>>} filter\\n * @returns {Array<Array<Number>>}\\n * @constructor\\n */\\ndc.filters.RangedTwoDimensionalFilter = function (filter) {\\n    if (filter === null) { return null; }\\n\\n    var f = filter;\\n    var fromBottomLeft;\\n\\n    if (f[0] instanceof Array) {\\n        fromBottomLeft = [\\n            [Math.min(filter[0][0], filter[1][0]), Math.min(filter[0][1], filter[1][1])],\\n            [Math.max(filter[0][0], filter[1][0]), Math.max(filter[0][1], filter[1][1])]\\n        ];\\n    } else {\\n        fromBottomLeft = [[filter[0], -Infinity], [filter[1], Infinity]];\\n    }\\n\\n    f.isFiltered = function (value) {\\n        var x, y;\\n\\n        if (value instanceof Array) {\\n            x = value[0];\\n            y = value[1];\\n        } else {\\n            x = value;\\n            y = fromBottomLeft[0][1];\\n        }\\n\\n        return x >= fromBottomLeft[0][0] && x < fromBottomLeft[1][0] &&\\n               y >= fromBottomLeft[0][1] && y < fromBottomLeft[1][1];\\n    };\\n    f.filterType = 'RangedTwoDimensionalFilter';\\n\\n    return f;\\n};\\n\\n/**\\n * `dc.baseMixin` is an abstract functional object representing a basic `dc` chart object\\n * for all chart and widget implementations. Methods from the {@link #dc.baseMixin dc.baseMixin} are inherited\\n * and available on all chart implementations in the `dc` library.\\n * @name baseMixin\\n * @memberof dc\\n * @mixin\\n * @param {Object} _chart\\n * @returns {dc.baseMixin}\\n */\\ndc.baseMixin = function (_chart) {\\n    _chart.__dcFlag__ = dc.utils.uniqueId();\\n\\n    var _dimension;\\n    var _group;\\n\\n    var _anchor;\\n    var _root;\\n    var _svg;\\n    var _isChild;\\n\\n    var _minWidth = 200;\\n    var _defaultWidthCalc = function (element) {\\n        var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\\n        return (width && width > _minWidth) ? width : _minWidth;\\n    };\\n    var _widthCalc = _defaultWidthCalc;\\n\\n    var _minHeight = 200;\\n    var _defaultHeightCalc = function (element) {\\n        var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\\n        return (height && height > _minHeight) ? height : _minHeight;\\n    };\\n    var _heightCalc = _defaultHeightCalc;\\n    var _width, _height;\\n    var _useViewBoxResizing = false;\\n\\n    var _keyAccessor = dc.pluck('key');\\n    var _valueAccessor = dc.pluck('value');\\n    var _label = dc.pluck('key');\\n\\n    var _ordering = dc.pluck('key');\\n    var _orderSort;\\n\\n    var _renderLabel = false;\\n\\n    var _title = function (d) {\\n        return _chart.keyAccessor()(d) + ': ' + _chart.valueAccessor()(d);\\n    };\\n    var _renderTitle = true;\\n    var _controlsUseVisibility = false;\\n\\n    var _transitionDuration = 750;\\n\\n    var _transitionDelay = 0;\\n\\n    var _filterPrinter = dc.printers.filters;\\n\\n    var _mandatoryAttributes = ['dimension', 'group'];\\n\\n    var _chartGroup = dc.constants.DEFAULT_CHART_GROUP;\\n\\n    var _listeners = d3.dispatch(\\n        'preRender',\\n        'postRender',\\n        'preRedraw',\\n        'postRedraw',\\n        'filtered',\\n        'zoomed',\\n        'renderlet',\\n        'pretransition');\\n\\n    var _legend;\\n    var _commitHandler;\\n\\n    var _filters = [];\\n    var _filterHandler = function (dimension, filters) {\\n        if (filters.length === 0) {\\n            dimension.filter(null);\\n        } else if (filters.length === 1 && !filters[0].isFiltered) {\\n            // single value and not a function-based filter\\n            dimension.filterExact(filters[0]);\\n        } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\\n            // single range-based filter\\n            dimension.filterRange(filters[0]);\\n        } else {\\n            dimension.filterFunction(function (d) {\\n                for (var i = 0; i < filters.length; i++) {\\n                    var filter = filters[i];\\n                    if (filter.isFiltered && filter.isFiltered(d)) {\\n                        return true;\\n                    } else if (filter <= d && filter >= d) {\\n                        return true;\\n                    }\\n                }\\n                return false;\\n            });\\n        }\\n        return filters;\\n    };\\n\\n    var _data = function (group) {\\n        return group.all();\\n    };\\n\\n    /**\\n     * Set or get the height attribute of a chart. The height is applied to the SVGElement generated by\\n     * the chart when rendered (or re-rendered). If a value is given, then it will be used to calculate\\n     * the new height and the chart returned for method chaining.  The value can either be a numeric, a\\n     * function, or falsy. If no value is specified then the value of the current height attribute will\\n     * be returned.\\n     *\\n     * By default, without an explicit height being given, the chart will select the width of its\\n     * anchor element. If that isn't possible it defaults to 200 (provided by the\\n     * {@link dc.baseMixin#minHeight minHeight} property). Setting the value falsy will return\\n     * the chart to the default behavior.\\n     * @method height\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link dc.baseMixin#minHeight minHeight}\\n     * @example\\n     * // Default height\\n     * chart.height(function (element) {\\n     *     var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\\n     *     return (height && height > chart.minHeight()) ? height : chart.minHeight();\\n     * });\\n     *\\n     * chart.height(250); // Set the chart's height to 250px;\\n     * chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function\\n     * chart.height(null); // reset the height to the default auto calculation\\n     * @param {Number|Function} [height]\\n     * @returns {Number|dc.baseMixin}\\n     */\\n    _chart.height = function (height) {\\n        if (!arguments.length) {\\n            if (!dc.utils.isNumber(_height)) {\\n                // only calculate once\\n                _height = _heightCalc(_root.node());\\n            }\\n            return _height;\\n        }\\n        _heightCalc = d3.functor(height || _defaultHeightCalc);\\n        _height = undefined;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the width attribute of a chart.\\n     * @method width\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link dc.baseMixin#height height}\\n     * @see {@link dc.baseMixin#minWidth minWidth}\\n     * @example\\n     * // Default width\\n     * chart.width(function (element) {\\n     *     var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\\n     *     return (width && width > chart.minWidth()) ? width : chart.minWidth();\\n     * });\\n     * @param {Number|Function} [width]\\n     * @returns {Number|dc.baseMixin}\\n     */\\n    _chart.width = function (width) {\\n        if (!arguments.length) {\\n            if (!dc.utils.isNumber(_width)) {\\n                // only calculate once\\n                _width = _widthCalc(_root.node());\\n            }\\n            return _width;\\n        }\\n        _widthCalc = d3.functor(width || _defaultWidthCalc);\\n        _width = undefined;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the minimum width attribute of a chart. This only has effect when used with the default\\n     * {@link dc.baseMixin#width width} function.\\n     * @method minWidth\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link dc.baseMixin#width width}\\n     * @param {Number} [minWidth=200]\\n     * @returns {Number|dc.baseMixin}\\n     */\\n    _chart.minWidth = function (minWidth) {\\n        if (!arguments.length) {\\n            return _minWidth;\\n        }\\n        _minWidth = minWidth;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the minimum height attribute of a chart. This only has effect when used with the default\\n     * {@link dc.baseMixin#height height} function.\\n     * @method minHeight\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link dc.baseMixin#height height}\\n     * @param {Number} [minHeight=200]\\n     * @returns {Number|dc.baseMixin}\\n     */\\n    _chart.minHeight = function (minHeight) {\\n        if (!arguments.length) {\\n            return _minHeight;\\n        }\\n        _minHeight = minHeight;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off using the SVG\\n     * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox `viewBox` attribute}.\\n     * When enabled, `viewBox` will be set on the svg root element instead of `width` and `height`.\\n     * Requires that the chart aspect ratio be defined using chart.width(w) and chart.height(h).\\n     *\\n     * This will maintain the aspect ratio while enabling the chart to resize responsively to the\\n     * space given to the chart using CSS. For example, the chart can use `width: 100%; height:\\n     * 100%` or absolute positioning to resize to its parent div.\\n     *\\n     * Since the text will be sized as if the chart is drawn according to the width and height, and\\n     * will be resized if the chart is any other size, you need to set the chart width and height so\\n     * that the text looks good. In practice, 600x400 seems to work pretty well for most charts.\\n     *\\n     * You can see examples of this resizing strategy in the [Chart Resizing\\n     * Examples](http://dc-js.github.io/dc.js/resizing/); just add `?resize=viewbox` to any of the\\n     * one-chart examples to enable `useViewBoxResizing`.\\n     * @method useViewBoxResizing\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {Boolean} [useViewBoxResizing=false]\\n     * @returns {Boolean|dc.baseMixin}\\n     */\\n    _chart.useViewBoxResizing = function (useViewBoxResizing) {\\n        if (!arguments.length) {\\n            return _useViewBoxResizing;\\n        }\\n        _useViewBoxResizing = useViewBoxResizing;\\n        return _chart;\\n    };\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Set or get the dimension attribute of a chart. In `dc`, a dimension can be any valid\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter dimension}\\n     *\\n     * If a value is given, then it will be used as the new dimension. If no value is specified then\\n     * the current dimension will be returned.\\n     * @method dimension\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter.dimension}\\n     * @example\\n     * var index = crossfilter([]);\\n     * var dimension = index.dimension(dc.pluck('key'));\\n     * chart.dimension(dimension);\\n     * @param {crossfilter.dimension} [dimension]\\n     * @returns {crossfilter.dimension|dc.baseMixin}\\n     */\\n    _chart.dimension = function (dimension) {\\n        if (!arguments.length) {\\n            return _dimension;\\n        }\\n        _dimension = dimension;\\n        _chart.expireCache();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set the data callback or retrieve the chart's data set. The data callback is passed the chart's\\n     * group and by default will return\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all}.\\n     * This behavior may be modified to, for instance, return only the top 5 groups.\\n     * @method data\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // Default data function\\n     * chart.data(function (group) { return group.all(); });\\n     *\\n     * chart.data(function (group) { return group.top(5); });\\n     * @param {Function} [callback]\\n     * @returns {*|dc.baseMixin}\\n     */\\n    _chart.data = function (callback) {\\n        if (!arguments.length) {\\n            return _data.call(_chart, _group);\\n        }\\n        _data = d3.functor(callback);\\n        _chart.expireCache();\\n        return _chart;\\n    };\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Set or get the group attribute of a chart. In `dc` a group is a\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter group}.\\n     * Usually the group should be created from the particular dimension associated with the same chart. If a value is\\n     * given, then it will be used as the new group.\\n     *\\n     * If no value specified then the current group will be returned.\\n     * If `name` is specified then it will be used to generate legend label.\\n     * @method group\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\\n     * @example\\n     * var index = crossfilter([]);\\n     * var dimension = index.dimension(dc.pluck('key'));\\n     * chart.dimension(dimension);\\n     * chart.group(dimension.group(crossfilter.reduceSum()));\\n     * @param {crossfilter.group} [group]\\n     * @param {String} [name]\\n     * @returns {crossfilter.group|dc.baseMixin}\\n     */\\n    _chart.group = function (group, name) {\\n        if (!arguments.length) {\\n            return _group;\\n        }\\n        _group = group;\\n        _chart._groupName = name;\\n        _chart.expireCache();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set an accessor to order ordinal dimensions.  The chart uses\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\\n     * to sort elements; this accessor returns the value to order on.\\n     * @method ordering\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\\n     * @example\\n     * // Default ordering accessor\\n     * _chart.ordering(dc.pluck('key'));\\n     * @param {Function} [orderFunction]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.ordering = function (orderFunction) {\\n        if (!arguments.length) {\\n            return _ordering;\\n        }\\n        _ordering = orderFunction;\\n        _orderSort = crossfilter.quicksort.by(_ordering);\\n        _chart.expireCache();\\n        return _chart;\\n    };\\n\\n    _chart._computeOrderedGroups = function (data) {\\n        var dataCopy = data.slice(0);\\n\\n        if (dataCopy.length <= 1) {\\n            return dataCopy;\\n        }\\n\\n        if (!_orderSort) {\\n            _orderSort = crossfilter.quicksort.by(_ordering);\\n        }\\n\\n        return _orderSort(dataCopy, 0, dataCopy.length);\\n    };\\n\\n    /**\\n     * Clear all filters associated with this chart. The same effect can be achieved by calling\\n     * {@link dc.baseMixin#filter chart.filter(null)}.\\n     * @method filterAll\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.filterAll = function () {\\n        return _chart.filter(null);\\n    };\\n\\n    /**\\n     * Execute d3 single selection in the chart's scope using the given selector and return the d3\\n     * selection.\\n     *\\n     * This function is **not chainable** since it does not return a chart instance; however the d3\\n     * selection result can be chained to d3 function calls.\\n     * @method select\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#d3_select d3.select}\\n     * @example\\n     * // Has the same effect as d3.select('#chart-id').select(selector)\\n     * chart.select(selector)\\n     * @returns {d3.selection}\\n     */\\n    _chart.select = function (s) {\\n        return _root.select(s);\\n    };\\n\\n    /**\\n     * Execute in scope d3 selectAll using the given selector and return d3 selection result.\\n     *\\n     * This function is **not chainable** since it does not return a chart instance; however the d3\\n     * selection result can be chained to d3 function calls.\\n     * @method selectAll\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#d3_selectAll d3.selectAll}\\n     * @example\\n     * // Has the same effect as d3.select('#chart-id').selectAll(selector)\\n     * chart.selectAll(selector)\\n     * @returns {d3.selection}\\n     */\\n    _chart.selectAll = function (s) {\\n        return _root ? _root.selectAll(s) : null;\\n    };\\n\\n    /**\\n     * Set the root SVGElement to either be an existing chart's root; or any valid [d3 single\\n     * selector](https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements) specifying a dom\\n     * block element such as a div; or a dom element or d3 selection. Optionally registers the chart\\n     * within the chartGroup. This class is called internally on chart initialization, but be called\\n     * again to relocate the chart. However, it will orphan any previously created SVGElements.\\n     * @method anchor\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {anchorChart|anchorSelector|anchorNode} [parent]\\n     * @param {String} [chartGroup]\\n     * @returns {String|node|d3.selection|dc.baseMixin}\\n     */\\n    _chart.anchor = function (parent, chartGroup) {\\n        if (!arguments.length) {\\n            return _anchor;\\n        }\\n        if (dc.instanceOfChart(parent)) {\\n            _anchor = parent.anchor();\\n            _root = parent.root();\\n            _isChild = true;\\n        } else if (parent) {\\n            if (parent.select && parent.classed) { // detect d3 selection\\n                _anchor = parent.node();\\n            } else {\\n                _anchor = parent;\\n            }\\n            _root = d3.select(_anchor);\\n            _root.classed(dc.constants.CHART_CLASS, true);\\n            dc.registerChart(_chart, chartGroup);\\n            _isChild = false;\\n        } else {\\n            throw new dc.errors.BadArgumentException('parent must be defined');\\n        }\\n        _chartGroup = chartGroup;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns the DOM id for the chart's anchored location.\\n     * @method anchorName\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {String}\\n     */\\n    _chart.anchorName = function () {\\n        var a = _chart.anchor();\\n        if (a && a.id) {\\n            return a.id;\\n        }\\n        if (a && a.replace) {\\n            return a.replace('#', '');\\n        }\\n        return 'dc-chart' + _chart.chartID();\\n    };\\n\\n    /**\\n     * Returns the root element where a chart resides. Usually it will be the parent div element where\\n     * the SVGElement was created. You can also pass in a new root element however this is usually handled by\\n     * dc internally. Resetting the root element on a chart outside of dc internals may have\\n     * unexpected consequences.\\n     * @method root\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement HTMLElement}\\n     * @param {HTMLElement} [rootElement]\\n     * @returns {HTMLElement|dc.baseMixin}\\n     */\\n    _chart.root = function (rootElement) {\\n        if (!arguments.length) {\\n            return _root;\\n        }\\n        _root = rootElement;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns the top SVGElement for this specific chart. You can also pass in a new SVGElement,\\n     * however this is usually handled by dc internally. Resetting the SVGElement on a chart outside\\n     * of dc internals may have unexpected consequences.\\n     * @method svg\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\\n     * @param {SVGElement|d3.selection} [svgElement]\\n     * @returns {SVGElement|d3.selection|dc.baseMixin}\\n     */\\n    _chart.svg = function (svgElement) {\\n        if (!arguments.length) {\\n            return _svg;\\n        }\\n        _svg = svgElement;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\\n     * @method resetSvg\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\\n     * @returns {SVGElement}\\n     */\\n    _chart.resetSvg = function () {\\n        _chart.select('svg').remove();\\n        return generateSvg();\\n    };\\n\\n    function sizeSvg () {\\n        if (_svg) {\\n            if (!_useViewBoxResizing) {\\n                _svg\\n                    .attr('width', _chart.width())\\n                    .attr('height', _chart.height());\\n            } else if (!_svg.attr('viewBox')) {\\n                _svg\\n                    .attr('viewBox', '0 0 ' + _chart.width() + ' ' + _chart.height());\\n            }\\n        }\\n    }\\n\\n    function generateSvg () {\\n        _svg = _chart.root().append('svg');\\n        sizeSvg();\\n        return _svg;\\n    }\\n\\n    /**\\n     * Set or get the filter printer function. The filter printer function is used to generate human\\n     * friendly text for filter value(s) associated with the chart instance. The text will get shown\\n     * in the `.filter element; see {@link dc.baseMixin#turnOnControls turnOnControls}.\\n     *\\n     * By default dc charts use a default filter printer {@link dc.printers.filters dc.printers.filters}\\n     * that provides simple printing support for both single value and ranged filters.\\n     * @method filterPrinter\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // for a chart with an ordinal brush, print the filters in upper case\\n     * chart.filterPrinter(function(filters) {\\n     *   return filters.map(function(f) { return f.toUpperCase(); }).join(', ');\\n     * });\\n     * // for a chart with a range brush, print the filter as start and extent\\n     * chart.filterPrinter(function(filters) {\\n     *   return 'start ' + dc.utils.printSingleValue(filters[0][0]) +\\n     *     ' extent ' + dc.utils.printSingleValue(filters[0][1] - filters[0][0]);\\n     * });\\n     * @param {Function} [filterPrinterFunction=dc.printers.filters]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.filterPrinter = function (filterPrinterFunction) {\\n        if (!arguments.length) {\\n            return _filterPrinter;\\n        }\\n        _filterPrinter = filterPrinterFunction;\\n        return _chart;\\n    };\\n\\n    /**\\n     * If set, use the `visibility` attribute instead of the `display` attribute for showing/hiding\\n     * chart reset and filter controls, for less disruption to the layout.\\n     * @method controlsUseVisibility\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {Boolean} [controlsUseVisibility=false]\\n     * @returns {Boolean|dc.baseMixin}\\n     **/\\n    _chart.controlsUseVisibility = function (useVisibility) {\\n        if (!arguments.length) {\\n            return _controlsUseVisibility;\\n        }\\n        _controlsUseVisibility = useVisibility;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on optional control elements within the root element. dc currently supports the\\n     * following html control elements.\\n     * * root.selectAll('.reset') - elements are turned on if the chart has an active filter. This type\\n     * of control element is usually used to store a reset link to allow user to reset filter on a\\n     * certain chart. This element will be turned off automatically if the filter is cleared.\\n     * * root.selectAll('.filter') elements are turned on if the chart has an active filter. The text\\n     * content of this element is then replaced with the current filter value using the filter printer\\n     * function. This type of element will be turned off automatically if the filter is cleared.\\n     * @method turnOnControls\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.turnOnControls = function () {\\n        if (_root) {\\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\\n            _chart.selectAll('.reset').style(attribute, null);\\n            _chart.selectAll('.filter').text(_filterPrinter(_chart.filters())).style(attribute, null);\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn off optional control elements within the root element.\\n     * @method turnOffControls\\n     * @memberof dc.baseMixin\\n     * @see {@link dc.baseMixin#turnOnControls turnOnControls}\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.turnOffControls = function () {\\n        if (_root) {\\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\\n            var value = _chart.controlsUseVisibility() ? 'hidden' : 'none';\\n            _chart.selectAll('.reset').style(attribute, value);\\n            _chart.selectAll('.filter').style(attribute, value).text(_chart.filter());\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the animation transition duration (in milliseconds) for this chart instance.\\n     * @method transitionDuration\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {Number} [duration=750]\\n     * @returns {Number|dc.baseMixin}\\n     */\\n    _chart.transitionDuration = function (duration) {\\n        if (!arguments.length) {\\n            return _transitionDuration;\\n        }\\n        _transitionDuration = duration;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the animation transition delay (in milliseconds) for this chart instance.\\n     * @method transitionDelay\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {Number} [delay=0]\\n     * @returns {Number|dc.baseMixin}\\n     */\\n    _chart.transitionDelay = function (delay) {\\n        if (!arguments.length) {\\n            return _transitionDelay;\\n        }\\n        _transitionDelay = delay;\\n        return _chart;\\n    };\\n\\n    _chart._mandatoryAttributes = function (_) {\\n        if (!arguments.length) {\\n            return _mandatoryAttributes;\\n        }\\n        _mandatoryAttributes = _;\\n        return _chart;\\n    };\\n\\n    function checkForMandatoryAttributes (a) {\\n        if (!_chart[a] || !_chart[a]()) {\\n            throw new dc.errors.InvalidStateException('Mandatory attribute chart.' + a +\\n                ' is missing on chart[#' + _chart.anchorName() + ']');\\n        }\\n    }\\n\\n    /**\\n     * Invoking this method will force the chart to re-render everything from scratch. Generally it\\n     * should only be used to render the chart for the first time on the page or if you want to make\\n     * sure everything is redrawn from scratch instead of relying on the default incremental redrawing\\n     * behaviour.\\n     * @method render\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.render = function () {\\n        _height = _width = undefined; // force recalculate\\n        _listeners.preRender(_chart);\\n\\n        if (_mandatoryAttributes) {\\n            _mandatoryAttributes.forEach(checkForMandatoryAttributes);\\n        }\\n\\n        var result = _chart._doRender();\\n\\n        if (_legend) {\\n            _legend.render();\\n        }\\n\\n        _chart._activateRenderlets('postRender');\\n\\n        return result;\\n    };\\n\\n    _chart._activateRenderlets = function (event) {\\n        _listeners.pretransition(_chart);\\n        if (_chart.transitionDuration() > 0 && _svg) {\\n            _svg.transition().duration(_chart.transitionDuration()).delay(_chart.transitionDelay())\\n                .each('end', function () {\\n                    _listeners.renderlet(_chart);\\n                    if (event) {\\n                        _listeners[event](_chart);\\n                    }\\n                });\\n        } else {\\n            _listeners.renderlet(_chart);\\n            if (event) {\\n                _listeners[event](_chart);\\n            }\\n        }\\n    };\\n\\n    /**\\n     * Calling redraw will cause the chart to re-render data changes incrementally. If there is no\\n     * change in the underlying data dimension then calling this method will have no effect on the\\n     * chart. Most chart interaction in dc will automatically trigger this method through internal\\n     * events (in particular {@link dc.redrawAll dc.redrawAll}); therefore, you only need to\\n     * manually invoke this function if data is manipulated outside of dc's control (for example if\\n     * data is loaded in the background using\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}).\\n     * @method redraw\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.redraw = function () {\\n        sizeSvg();\\n        _listeners.preRedraw(_chart);\\n\\n        var result = _chart._doRedraw();\\n\\n        if (_legend) {\\n            _legend.render();\\n        }\\n\\n        _chart._activateRenderlets('postRedraw');\\n\\n        return result;\\n    };\\n\\n    /**\\n     * Gets/sets the commit handler. If the chart has a commit handler, the handler will be called when\\n     * the chart's filters have changed, in order to send the filter data asynchronously to a server.\\n     *\\n     * Unlike other functions in dc.js, the commit handler is asynchronous. It takes two arguments:\\n     * a flag indicating whether this is a render (true) or a redraw (false), and a callback to be\\n     * triggered once the commit is filtered. The callback has the standard node.js continuation signature\\n     * with error first and result second.\\n     * @method commitHandler\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.commitHandler = function (commitHandler) {\\n        if (!arguments.length) {\\n            return _commitHandler;\\n        }\\n        _commitHandler = commitHandler;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Redraws all charts in the same group as this chart, typically in reaction to a filter\\n     * change. If the chart has a {@link dc.baseMixin.commitFilter commitHandler}, it will\\n     * be executed and waited for.\\n     * @method redrawGroup\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.redrawGroup = function () {\\n        if (_commitHandler) {\\n            _commitHandler(false, function (error, result) {\\n                if (error) {\\n                    console.log(error);\\n                } else {\\n                    dc.redrawAll(_chart.chartGroup());\\n                }\\n            });\\n        } else {\\n            dc.redrawAll(_chart.chartGroup());\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Renders all charts in the same group as this chart. If the chart has a\\n     * {@link dc.baseMixin.commitFilter commitHandler}, it will be executed and waited for\\n     * @method renderGroup\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.renderGroup = function () {\\n        if (_commitHandler) {\\n            _commitHandler(false, function (error, result) {\\n                if (error) {\\n                    console.log(error);\\n                } else {\\n                    dc.renderAll(_chart.chartGroup());\\n                }\\n            });\\n        } else {\\n            dc.renderAll(_chart.chartGroup());\\n        }\\n        return _chart;\\n    };\\n\\n    _chart._invokeFilteredListener = function (f) {\\n        if (f !== undefined) {\\n            _listeners.filtered(_chart, f);\\n        }\\n    };\\n\\n    _chart._invokeZoomedListener = function () {\\n        _listeners.zoomed(_chart);\\n    };\\n\\n    var _hasFilterHandler = function (filters, filter) {\\n        if (filter === null || typeof(filter) === 'undefined') {\\n            return filters.length > 0;\\n        }\\n        return filters.some(function (f) {\\n            return filter <= f && filter >= f;\\n        });\\n    };\\n\\n    /**\\n     * Set or get the has-filter handler. The has-filter handler is a function that checks to see if\\n     * the chart's current filters (first argument) include a specific filter (second argument).  Using a custom has-filter handler allows\\n     * you to change the way filters are checked for and replaced.\\n     * @method hasFilterHandler\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default has-filter handler\\n     * chart.hasFilterHandler(function (filters, filter) {\\n     *     if (filter === null || typeof(filter) === 'undefined') {\\n     *         return filters.length > 0;\\n     *     }\\n     *     return filters.some(function (f) {\\n     *         return filter <= f && filter >= f;\\n     *     });\\n     * });\\n     *\\n     * // custom filter handler (no-op)\\n     * chart.hasFilterHandler(function(filters, filter) {\\n     *     return false;\\n     * });\\n     * @param {Function} [hasFilterHandler]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.hasFilterHandler = function (hasFilterHandler) {\\n        if (!arguments.length) {\\n            return _hasFilterHandler;\\n        }\\n        _hasFilterHandler = hasFilterHandler;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Check whether any active filter or a specific filter is associated with particular chart instance.\\n     * This function is **not chainable**.\\n     * @method hasFilter\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link dc.baseMixin#hasFilterHandler hasFilterHandler}\\n     * @param {*} [filter]\\n     * @returns {Boolean}\\n     */\\n    _chart.hasFilter = function (filter) {\\n        return _hasFilterHandler(_filters, filter);\\n    };\\n\\n    var _removeFilterHandler = function (filters, filter) {\\n        for (var i = 0; i < filters.length; i++) {\\n            if (filters[i] <= filter && filters[i] >= filter) {\\n                filters.splice(i, 1);\\n                break;\\n            }\\n        }\\n        return filters;\\n    };\\n\\n    /**\\n     * Set or get the remove filter handler. The remove filter handler is a function that removes a\\n     * filter from the chart's current filters. Using a custom remove filter handler allows you to\\n     * change how filters are removed or perform additional work when removing a filter, e.g. when\\n     * using a filter server other than crossfilter.\\n     *\\n     * The handler should return a new or modified array as the result.\\n     * @method removeFilterHandler\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default remove filter handler\\n     * chart.removeFilterHandler(function (filters, filter) {\\n     *     for (var i = 0; i < filters.length; i++) {\\n     *         if (filters[i] <= filter && filters[i] >= filter) {\\n     *             filters.splice(i, 1);\\n     *             break;\\n     *         }\\n     *     }\\n     *     return filters;\\n     * });\\n     *\\n     * // custom filter handler (no-op)\\n     * chart.removeFilterHandler(function(filters, filter) {\\n     *     return filters;\\n     * });\\n     * @param {Function} [removeFilterHandler]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.removeFilterHandler = function (removeFilterHandler) {\\n        if (!arguments.length) {\\n            return _removeFilterHandler;\\n        }\\n        _removeFilterHandler = removeFilterHandler;\\n        return _chart;\\n    };\\n\\n    var _addFilterHandler = function (filters, filter) {\\n        filters.push(filter);\\n        return filters;\\n    };\\n\\n    /**\\n     * Set or get the add filter handler. The add filter handler is a function that adds a filter to\\n     * the chart's filter list. Using a custom add filter handler allows you to change the way filters\\n     * are added or perform additional work when adding a filter, e.g. when using a filter server other\\n     * than crossfilter.\\n     *\\n     * The handler should return a new or modified array as the result.\\n     * @method addFilterHandler\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default add filter handler\\n     * chart.addFilterHandler(function (filters, filter) {\\n     *     filters.push(filter);\\n     *     return filters;\\n     * });\\n     *\\n     * // custom filter handler (no-op)\\n     * chart.addFilterHandler(function(filters, filter) {\\n     *     return filters;\\n     * });\\n     * @param {Function} [addFilterHandler]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.addFilterHandler = function (addFilterHandler) {\\n        if (!arguments.length) {\\n            return _addFilterHandler;\\n        }\\n        _addFilterHandler = addFilterHandler;\\n        return _chart;\\n    };\\n\\n    var _resetFilterHandler = function (filters) {\\n        return [];\\n    };\\n\\n    /**\\n     * Set or get the reset filter handler. The reset filter handler is a function that resets the\\n     * chart's filter list by returning a new list. Using a custom reset filter handler allows you to\\n     * change the way filters are reset, or perform additional work when resetting the filters,\\n     * e.g. when using a filter server other than crossfilter.\\n     *\\n     * The handler should return a new or modified array as the result.\\n     * @method resetFilterHandler\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default remove filter handler\\n     * function (filters) {\\n     *     return [];\\n     * }\\n     *\\n     * // custom filter handler (no-op)\\n     * chart.resetFilterHandler(function(filters) {\\n     *     return filters;\\n     * });\\n     * @param {Function} [resetFilterHandler]\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.resetFilterHandler = function (resetFilterHandler) {\\n        if (!arguments.length) {\\n            return _resetFilterHandler;\\n        }\\n        _resetFilterHandler = resetFilterHandler;\\n        return _chart;\\n    };\\n\\n    function applyFilters (filters) {\\n        if (_chart.dimension() && _chart.dimension().filter) {\\n            var fs = _filterHandler(_chart.dimension(), filters);\\n            if (fs) {\\n                filters = fs;\\n            }\\n        }\\n        return filters;\\n    }\\n\\n    /**\\n     * Replace the chart filter. This is equivalent to calling `chart.filter(null).filter(filter)`\\n     * but more efficient because the filter is only applied once.\\n     *\\n     * @method replaceFilter\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {*} [filter]\\n     * @returns {dc.baseMixin}\\n     **/\\n    _chart.replaceFilter = function (filter) {\\n        _filters = _resetFilterHandler(_filters);\\n        _chart.filter(filter);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\\n     * is given.\\n     *\\n     * The filter parameter can take one of these forms:\\n     * * A single value: the value will be toggled (added if it is not present in the current\\n     * filters, removed if it is present)\\n     * * An array containing a single array of values (`[[value,value,value]]`): each value is\\n     * toggled\\n     * * When appropriate for the chart, a {@link dc.filters dc filter object} such as\\n     *   * {@link dc.filters.RangedFilter `dc.filters.RangedFilter`} for the\\n     * {@link dc.coordinateGridMixin dc.coordinateGridMixin} charts\\n     *   * {@link dc.filters.TwoDimensionalFilter `dc.filters.TwoDimensionalFilter`} for the\\n     * {@link dc.heatMap heat map}\\n     *   * {@link dc.filters.RangedTwoDimensionalFilter `dc.filters.RangedTwoDimensionalFilter`}\\n     * for the {@link dc.scatterPlot scatter plot}\\n     * * `null`: the filter will be reset using the\\n     * {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\\n     *\\n     * Note that this is always a toggle (even when it doesn't make sense for the filter type). If\\n     * you wish to replace the current filter, either call `chart.filter(null)` first - or it's more\\n     * efficient to call {@link dc.baseMixin#replaceFilter `chart.replaceFilter(filter)`} instead.\\n     *\\n     * Each toggle is executed by checking if the value is already present using the\\n     * {@link dc.baseMixin#hasFilterHandler hasFilterHandler}; if it is not present, it is added\\n     * using the {@link dc.baseMixin#addFilterHandler addFilterHandler}; if it is already present,\\n     * it is removed using the {@link dc.baseMixin#removeFilterHandler removeFilterHandler}.\\n     *\\n     * Once the filters array has been updated, the filters are applied to the\\n     * crossfilter dimension, using the {@link dc.baseMixin#filterHandler filterHandler}.\\n     *\\n     * Once you have set the filters, call {@link dc.baseMixin#redrawGroup `chart.redrawGroup()`}\\n     * (or {@link dc.redrawAll `dc.redrawAll()`}) to redraw the chart's group.\\n     * @method filter\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link dc.baseMixin#addFilterHandler addFilterHandler}\\n     * @see {@link dc.baseMixin#removeFilterHandler removeFilterHandler}\\n     * @see {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\\n     * @see {@link dc.baseMixin#filterHandler filterHandler}\\n     * @example\\n     * // filter by a single string\\n     * chart.filter('Sunday');\\n     * // filter by a single age\\n     * chart.filter(18);\\n     * // filter by a set of states\\n     * chart.filter([['MA', 'TX', 'ND', 'WA']]);\\n     * // filter by range -- note the use of dc.filters.RangedFilter, which is different\\n     * // from the syntax for filtering a crossfilter dimension directly, dimension.filter([15,20])\\n     * chart.filter(dc.filters.RangedFilter(15,20));\\n     * @param {*} [filter]\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.filter = function (filter) {\\n        if (!arguments.length) {\\n            return _filters.length > 0 ? _filters[0] : null;\\n        }\\n        var filters = _filters;\\n        if (filter instanceof Array && filter[0] instanceof Array && !filter.isFiltered) {\\n            // toggle each filter\\n            filter[0].forEach(function (f) {\\n                if (_hasFilterHandler(filters, f)) {\\n                    filters = _removeFilterHandler(filters, f);\\n                } else {\\n                    filters = _addFilterHandler(filters, f);\\n                }\\n            });\\n        } else if (filter === null) {\\n            filters = _resetFilterHandler(filters);\\n        } else {\\n            if (_hasFilterHandler(filters, filter)) {\\n                filters = _removeFilterHandler(filters, filter);\\n            } else {\\n                filters = _addFilterHandler(filters, filter);\\n            }\\n        }\\n        _filters = applyFilters(filters);\\n        _chart._invokeFilteredListener(filter);\\n\\n        if (_root !== null && _chart.hasFilter()) {\\n            _chart.turnOnControls();\\n        } else {\\n            _chart.turnOffControls();\\n        }\\n\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns all current filters. This method does not perform defensive cloning of the internal\\n     * filter array before returning, therefore any modification of the returned array will effect the\\n     * chart's internal filter storage.\\n     * @method filters\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {Array<*>}\\n     */\\n    _chart.filters = function () {\\n        return _filters;\\n    };\\n\\n    _chart.highlightSelected = function (e) {\\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, true);\\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\\n    };\\n\\n    _chart.fadeDeselected = function (e) {\\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, true);\\n    };\\n\\n    _chart.resetHighlight = function (e) {\\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\\n    };\\n\\n    /**\\n     * This function is passed to d3 as the onClick handler for each chart. The default behavior is to\\n     * filter on the clicked datum (passed to the callback) and redraw the chart group.\\n     * @method onClick\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {*} datum\\n     */\\n    _chart.onClick = function (datum) {\\n        var filter = _chart.keyAccessor()(datum);\\n        dc.events.trigger(function () {\\n            _chart.filter(filter);\\n            _chart.redrawGroup();\\n        });\\n    };\\n\\n    /**\\n     * Set or get the filter handler. The filter handler is a function that performs the filter action\\n     * on a specific dimension. Using a custom filter handler allows you to perform additional logic\\n     * before or after filtering.\\n     * @method filterHandler\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter crossfilter.dimension.filter}\\n     * @example\\n     * // the default filter handler handles all possible cases for the charts in dc.js\\n     * // you can replace it with something more specialized for your own chart\\n     * chart.filterHandler(function (dimension, filters) {\\n     *     if (filters.length === 0) {\\n     *         // the empty case (no filtering)\\n     *         dimension.filter(null);\\n     *     } else if (filters.length === 1 && !filters[0].isFiltered) {\\n     *         // single value and not a function-based filter\\n     *         dimension.filterExact(filters[0]);\\n     *     } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\\n     *         // single range-based filter\\n     *         dimension.filterRange(filters[0]);\\n     *     } else {\\n     *         // an array of values, or an array of filter objects\\n     *         dimension.filterFunction(function (d) {\\n     *             for (var i = 0; i < filters.length; i++) {\\n     *                 var filter = filters[i];\\n     *                 if (filter.isFiltered && filter.isFiltered(d)) {\\n     *                     return true;\\n     *                 } else if (filter <= d && filter >= d) {\\n     *                     return true;\\n     *                 }\\n     *             }\\n     *             return false;\\n     *         });\\n     *     }\\n     *     return filters;\\n     * });\\n     *\\n     * // custom filter handler\\n     * chart.filterHandler(function(dimension, filter){\\n     *     var newFilter = filter + 10;\\n     *     dimension.filter(newFilter);\\n     *     return newFilter; // set the actual filter value to the new value\\n     * });\\n     * @param {Function} [filterHandler]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.filterHandler = function (filterHandler) {\\n        if (!arguments.length) {\\n            return _filterHandler;\\n        }\\n        _filterHandler = filterHandler;\\n        return _chart;\\n    };\\n\\n    // abstract function stub\\n    _chart._doRender = function () {\\n        // do nothing in base, should be overridden by sub-function\\n        return _chart;\\n    };\\n\\n    _chart._doRedraw = function () {\\n        // do nothing in base, should be overridden by sub-function\\n        return _chart;\\n    };\\n\\n    _chart.legendables = function () {\\n        // do nothing in base, should be overridden by sub-function\\n        return [];\\n    };\\n\\n    _chart.legendHighlight = function () {\\n        // do nothing in base, should be overridden by sub-function\\n    };\\n\\n    _chart.legendReset = function () {\\n        // do nothing in base, should be overridden by sub-function\\n    };\\n\\n    _chart.legendToggle = function () {\\n        // do nothing in base, should be overriden by sub-function\\n    };\\n\\n    _chart.isLegendableHidden = function () {\\n        // do nothing in base, should be overridden by sub-function\\n        return false;\\n    };\\n\\n    /**\\n     * Set or get the key accessor function. The key accessor function is used to retrieve the key\\n     * value from the crossfilter group. Key values are used differently in different charts, for\\n     * example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.\\n     * @method keyAccessor\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default key accessor\\n     * chart.keyAccessor(function(d) { return d.key; });\\n     * // custom key accessor for a multi-value crossfilter reduction\\n     * chart.keyAccessor(function(p) { return p.value.absGain; });\\n     * @param {Function} [keyAccessor]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.keyAccessor = function (keyAccessor) {\\n        if (!arguments.length) {\\n            return _keyAccessor;\\n        }\\n        _keyAccessor = keyAccessor;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the value accessor function. The value accessor function is used to retrieve the\\n     * value from the crossfilter group. Group values are used differently in different charts, for\\n     * example values correspond to slice sizes in a pie chart and y axis positions in a grid\\n     * coordinate chart.\\n     * @method valueAccessor\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default value accessor\\n     * chart.valueAccessor(function(d) { return d.value; });\\n     * // custom value accessor for a multi-value crossfilter reduction\\n     * chart.valueAccessor(function(p) { return p.value.percentageGain; });\\n     * @param {Function} [valueAccessor]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.valueAccessor = function (valueAccessor) {\\n        if (!arguments.length) {\\n            return _valueAccessor;\\n        }\\n        _valueAccessor = valueAccessor;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the label function. The chart class will use this function to render labels for each\\n     * child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every\\n     * chart supports the label function, for example line chart does not use this function\\n     * at all. By default, enables labels; pass false for the second parameter if this is not desired.\\n     * @method label\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default label function just return the key\\n     * chart.label(function(d) { return d.key; });\\n     * // label function has access to the standard d3 data binding and can get quite complicated\\n     * chart.label(function(d) { return d.data.key + '(' + Math.floor(d.data.value / all.value() * 100) + '%)'; });\\n     * @param {Function} [labelFunction]\\n     * @param {Boolean} [enableLabels=true]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.label = function (labelFunction, enableLabels) {\\n        if (!arguments.length) {\\n            return _label;\\n        }\\n        _label = labelFunction;\\n        if ((enableLabels === undefined) || enableLabels) {\\n            _renderLabel = true;\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off label rendering\\n     * @method renderLabel\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {Boolean} [renderLabel=false]\\n     * @returns {Boolean|dc.baseMixin}\\n     */\\n    _chart.renderLabel = function (renderLabel) {\\n        if (!arguments.length) {\\n            return _renderLabel;\\n        }\\n        _renderLabel = renderLabel;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the title function. The chart class will use this function to render the SVGElement title\\n     * (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice\\n     * in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;\\n     * however in grid coordinate charts you need to turn off the brush in order to see titles, because\\n     * otherwise the brush layer will block tooltip triggering.\\n     * @method title\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * // default title function shows \\\"key: value\\\"\\n     * chart.title(function(d) { return d.key + ': ' + d.value; });\\n     * // title function has access to the standard d3 data binding and can get quite complicated\\n     * chart.title(function(p) {\\n     *    return p.key.getFullYear()\\n     *        + '\\\\n'\\n     *        + 'Index Gain: ' + numberFormat(p.value.absGain) + '\\\\n'\\n     *        + 'Index Gain in Percentage: ' + numberFormat(p.value.percentageGain) + '%\\\\n'\\n     *        + 'Fluctuation / Index Ratio: ' + numberFormat(p.value.fluctuationPercentage) + '%';\\n     * });\\n     * @param {Function} [titleFunction]\\n     * @returns {Function|dc.baseMixin}\\n     */\\n    _chart.title = function (titleFunction) {\\n        if (!arguments.length) {\\n            return _title;\\n        }\\n        _title = titleFunction;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off title rendering, or return the state of the render title flag if no arguments are\\n     * given.\\n     * @method renderTitle\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {Boolean} [renderTitle=true]\\n     * @returns {Boolean|dc.baseMixin}\\n     */\\n    _chart.renderTitle = function (renderTitle) {\\n        if (!arguments.length) {\\n            return _renderTitle;\\n        }\\n        _renderTitle = renderTitle;\\n        return _chart;\\n    };\\n\\n    /**\\n     * A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added\\n     * to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked\\n     * right after the chart finishes its transitions, giving you a way to modify the SVGElements.\\n     * Renderlet functions take the chart instance as the only input parameter and you can\\n     * use the dc API or use raw d3 to achieve pretty much any effect.\\n     *\\n     * Use {@link dc.baseMixin#on on} with a 'renderlet' prefix.\\n     * Generates a random key for the renderlet, which makes it hard to remove.\\n     * @method renderlet\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @deprecated\\n     * @example\\n     * // do this instead of .renderlet(function(chart) { ... })\\n     * chart.on(\\\"renderlet\\\", function(chart){\\n     *     // mix of dc API and d3 manipulation\\n     *     chart.select('g.y').style('display', 'none');\\n     *     // its a closure so you can also access other chart variable available in the closure scope\\n     *     moveChart.filter(chart.filter());\\n     * });\\n     * @param {Function} renderletFunction\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.renderlet = dc.logger.deprecate(function (renderletFunction) {\\n        _chart.on('renderlet.' + dc.utils.uniqueId(), renderletFunction);\\n        return _chart;\\n    }, 'chart.renderlet has been deprecated.  Please use chart.on(\\\"renderlet.<renderletKey>\\\", renderletFunction)');\\n\\n    /**\\n     * Get or set the chart group to which this chart belongs. Chart groups are rendered or redrawn\\n     * together since it is expected they share the same underlying crossfilter data set.\\n     * @method chartGroup\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @param {String} [chartGroup]\\n     * @returns {String|dc.baseMixin}\\n     */\\n    _chart.chartGroup = function (chartGroup) {\\n        if (!arguments.length) {\\n            return _chartGroup;\\n        }\\n        if (!_isChild) {\\n            dc.deregisterChart(_chart, _chartGroup);\\n        }\\n        _chartGroup = chartGroup;\\n        if (!_isChild) {\\n            dc.registerChart(_chart, _chartGroup);\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Expire the internal chart cache. dc charts cache some data internally on a per chart basis to\\n     * speed up rendering and avoid unnecessary calculation; however it might be useful to clear the\\n     * cache if you have changed state which will affect rendering.  For example, if you invoke\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}\\n     * function or reset group or dimension after rendering, it is a good idea to\\n     * clear the cache to make sure charts are rendered properly.\\n     * @method expireCache\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.expireCache = function () {\\n        // do nothing in base, should be overridden by sub-function\\n        return _chart;\\n    };\\n\\n    /**\\n     * Attach a dc.legend widget to this chart. The legend widget will automatically draw legend labels\\n     * based on the color setting and names associated with each group.\\n     * @method legend\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\\n     * @param {dc.legend} [legend]\\n     * @returns {dc.legend|dc.baseMixin}\\n     */\\n    _chart.legend = function (legend) {\\n        if (!arguments.length) {\\n            return _legend;\\n        }\\n        _legend = legend;\\n        _legend.parent(_chart);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns the internal numeric ID of the chart.\\n     * @method chartID\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @returns {String}\\n     */\\n    _chart.chartID = function () {\\n        return _chart.__dcFlag__;\\n    };\\n\\n    /**\\n     * Set chart options using a configuration object. Each key in the object will cause the method of\\n     * the same name to be called with the value to set that attribute for the chart.\\n     * @method options\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @example\\n     * chart.options({dimension: myDimension, group: myGroup});\\n     * @param {{}} opts\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.options = function (opts) {\\n        var applyOptions = [\\n            'anchor',\\n            'group',\\n            'xAxisLabel',\\n            'yAxisLabel',\\n            'stack',\\n            'title',\\n            'point',\\n            'getColor',\\n            'overlayGeoJson'\\n        ];\\n\\n        for (var o in opts) {\\n            if (typeof(_chart[o]) === 'function') {\\n                if (opts[o] instanceof Array && applyOptions.indexOf(o) !== -1) {\\n                    _chart[o].apply(_chart, opts[o]);\\n                } else {\\n                    _chart[o].call(_chart, opts[o]);\\n                }\\n            } else {\\n                dc.logger.debug('Not a valid option setter name: ' + o);\\n            }\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * All dc chart instance supports the following listeners.\\n     * Supports the following events:\\n     * * `renderlet` - This listener function will be invoked after transitions after redraw and render. Replaces the\\n     * deprecated {@link dc.baseMixin#renderlet renderlet} method.\\n     * * `pretransition` - Like `.on('renderlet', ...)` but the event is fired before transitions start.\\n     * * `preRender` - This listener function will be invoked before chart rendering.\\n     * * `postRender` - This listener function will be invoked after chart finish rendering including\\n     * all renderlets' logic.\\n     * * `preRedraw` - This listener function will be invoked before chart redrawing.\\n     * * `postRedraw` - This listener function will be invoked after chart finish redrawing\\n     * including all renderlets' logic.\\n     * * `filtered` - This listener function will be invoked after a filter is applied, added or removed.\\n     * * `zoomed` - This listener function will be invoked after a zoom is triggered.\\n     * @method on\\n     * @memberof dc.baseMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Internals.md#dispatch_on d3.dispatch.on}\\n     * @example\\n     * .on('renderlet', function(chart, filter){...})\\n     * .on('pretransition', function(chart, filter){...})\\n     * .on('preRender', function(chart){...})\\n     * .on('postRender', function(chart){...})\\n     * .on('preRedraw', function(chart){...})\\n     * .on('postRedraw', function(chart){...})\\n     * .on('filtered', function(chart, filter){...})\\n     * .on('zoomed', function(chart, filter){...})\\n     * @param {String} event\\n     * @param {Function} listener\\n     * @returns {dc.baseMixin}\\n     */\\n    _chart.on = function (event, listener) {\\n        _listeners.on(event, listener);\\n        return _chart;\\n    };\\n\\n    return _chart;\\n};\\n\\n/**\\n * Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid\\n * Charts.\\n * @name marginMixin\\n * @memberof dc\\n * @mixin\\n * @param {Object} _chart\\n * @returns {dc.marginMixin}\\n */\\ndc.marginMixin = function (_chart) {\\n    var _margin = {top: 10, right: 50, bottom: 30, left: 30};\\n\\n    /**\\n     * Get or set the margins for a particular coordinate grid chart instance. The margins is stored as\\n     * an associative Javascript array.\\n     * @method margins\\n     * @memberof dc.marginMixin\\n     * @instance\\n     * @example\\n     * var leftMargin = chart.margins().left; // 30 by default\\n     * chart.margins().left = 50;\\n     * leftMargin = chart.margins().left; // now 50\\n     * @param {{top: Number, right: Number, left: Number, bottom: Number}} [margins={top: 10, right: 50, bottom: 30, left: 30}]\\n     * @returns {{top: Number, right: Number, left: Number, bottom: Number}|dc.marginMixin}\\n     */\\n    _chart.margins = function (margins) {\\n        if (!arguments.length) {\\n            return _margin;\\n        }\\n        _margin = margins;\\n        return _chart;\\n    };\\n\\n    _chart.effectiveWidth = function () {\\n        return _chart.width() - _chart.margins().left - _chart.margins().right;\\n    };\\n\\n    _chart.effectiveHeight = function () {\\n        return _chart.height() - _chart.margins().top - _chart.margins().bottom;\\n    };\\n\\n    return _chart;\\n};\\n\\n/**\\n * The Color Mixin is an abstract chart functional class providing universal coloring support\\n * as a mix-in for any concrete chart implementation.\\n * @name colorMixin\\n * @memberof dc\\n * @mixin\\n * @param {Object} _chart\\n * @returns {dc.colorMixin}\\n */\\ndc.colorMixin = function (_chart) {\\n    var _colors = d3.scale.category20c();\\n    var _defaultAccessor = true;\\n\\n    var _colorAccessor = function (d) { return _chart.keyAccessor()(d); };\\n\\n    /**\\n     * Retrieve current color scale or set a new color scale. This methods accepts any function that\\n     * operates like a d3 scale.\\n     * @method colors\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Scales.md d3.scale}\\n     * @example\\n     * // alternate categorical scale\\n     * chart.colors(d3.scale.category20b());\\n     * // ordinal scale\\n     * chart.colors(d3.scale.ordinal().range(['red','green','blue']));\\n     * // convenience method, the same as above\\n     * chart.ordinalColors(['red','green','blue']);\\n     * // set a linear scale\\n     * chart.linearColors([\\\"#4575b4\\\", \\\"#ffffbf\\\", \\\"#a50026\\\"]);\\n     * @param {d3.scale} [colorScale=d3.scale.category20c()]\\n     * @returns {d3.scale|dc.colorMixin}\\n     */\\n    _chart.colors = function (colorScale) {\\n        if (!arguments.length) {\\n            return _colors;\\n        }\\n        if (colorScale instanceof Array) {\\n            _colors = d3.scale.quantize().range(colorScale); // deprecated legacy support, note: this fails for ordinal domains\\n        } else {\\n            _colors = d3.functor(colorScale);\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Convenience method to set the color scale to\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md#ordinal d3.scale.ordinal} with\\n     * range `r`.\\n     * @method ordinalColors\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @param {Array<String>} r\\n     * @returns {dc.colorMixin}\\n     */\\n    _chart.ordinalColors = function (r) {\\n        return _chart.colors(d3.scale.ordinal().range(r));\\n    };\\n\\n    /**\\n     * Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.\\n     * @method linearColors\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @param {Array<Number>} r\\n     * @returns {dc.colorMixin}\\n     */\\n    _chart.linearColors = function (r) {\\n        return _chart.colors(d3.scale.linear()\\n                             .range(r)\\n                             .interpolate(d3.interpolateHcl));\\n    };\\n\\n    /**\\n     * Set or the get color accessor function. This function will be used to map a data point in a\\n     * crossfilter group to a color value on the color scale. The default function uses the key\\n     * accessor.\\n     * @method colorAccessor\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @example\\n     * // default index based color accessor\\n     * .colorAccessor(function (d, i){return i;})\\n     * // color accessor for a multi-value crossfilter reduction\\n     * .colorAccessor(function (d){return d.value.absGain;})\\n     * @param {Function} [colorAccessor]\\n     * @returns {Function|dc.colorMixin}\\n     */\\n    _chart.colorAccessor = function (colorAccessor) {\\n        if (!arguments.length) {\\n            return _colorAccessor;\\n        }\\n        _colorAccessor = colorAccessor;\\n        _defaultAccessor = false;\\n        return _chart;\\n    };\\n\\n    // what is this?\\n    _chart.defaultColorAccessor = function () {\\n        return _defaultAccessor;\\n    };\\n\\n    /**\\n     * Set or get the current domain for the color mapping function. The domain must be supplied as an\\n     * array.\\n     *\\n     * Note: previously this method accepted a callback function. Instead you may use a custom scale\\n     * set by {@link dc.colorMixin#colors .colors}.\\n     * @method colorDomain\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @param {Array<String>} [domain]\\n     * @returns {Array<String>|dc.colorMixin}\\n     */\\n    _chart.colorDomain = function (domain) {\\n        if (!arguments.length) {\\n            return _colors.domain();\\n        }\\n        _colors.domain(domain);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set the domain by determining the min and max values as retrieved by\\n     * {@link dc.colorMixin#colorAccessor .colorAccessor} over the chart's dataset.\\n     * @method calculateColorDomain\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @returns {dc.colorMixin}\\n     */\\n    _chart.calculateColorDomain = function () {\\n        var newDomain = [d3.min(_chart.data(), _chart.colorAccessor()),\\n                         d3.max(_chart.data(), _chart.colorAccessor())];\\n        _colors.domain(newDomain);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get the color for the datum d and counter i. This is used internally by charts to retrieve a color.\\n     * @method getColor\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @param {*} d\\n     * @param {Number} [i]\\n     * @returns {String}\\n     */\\n    _chart.getColor = function (d, i) {\\n        return _colors(_colorAccessor.call(this, d, i));\\n    };\\n\\n    /**\\n     * **Deprecated.** Get/set the color calculator. This actually replaces the\\n     * {@link dc.colorMixin#getColor getColor} method!\\n     *\\n     * This is not recommended, since using a {@link dc.colorMixin#colorAccessor colorAccessor} and\\n     * color scale ({@link dc.colorMixin#colors .colors}) is more powerful and idiomatic d3.\\n     * @method colorCalculator\\n     * @memberof dc.colorMixin\\n     * @instance\\n     * @param {*} [colorCalculator]\\n     * @returns {Function|dc.colorMixin}\\n     */\\n    _chart.colorCalculator = dc.logger.deprecate(function (colorCalculator) {\\n        if (!arguments.length) {\\n            return _chart.getColor;\\n        }\\n        _chart.getColor = colorCalculator;\\n        return _chart;\\n    }, 'colorMixin.colorCalculator has been deprecated. Please colorMixin.colors and colorMixin.colorAccessor instead');\\n\\n    return _chart;\\n};\\n\\n/**\\n * Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based\\n * concrete chart types, e.g. bar chart, line chart, and bubble chart.\\n * @name coordinateGridMixin\\n * @memberof dc\\n * @mixin\\n * @mixes dc.colorMixin\\n * @mixes dc.marginMixin\\n * @mixes dc.baseMixin\\n * @param {Object} _chart\\n * @returns {dc.coordinateGridMixin}\\n */\\ndc.coordinateGridMixin = function (_chart) {\\n    var GRID_LINE_CLASS = 'grid-line';\\n    var HORIZONTAL_CLASS = 'horizontal';\\n    var VERTICAL_CLASS = 'vertical';\\n    var Y_AXIS_LABEL_CLASS = 'y-axis-label';\\n    var X_AXIS_LABEL_CLASS = 'x-axis-label';\\n    var DEFAULT_AXIS_LABEL_PADDING = 12;\\n\\n    _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin(_chart)));\\n\\n    _chart.colors(d3.scale.category10());\\n    _chart._mandatoryAttributes().push('x');\\n    var _parent;\\n    var _g;\\n    var _chartBodyG;\\n\\n    var _x;\\n    var _xOriginalDomain;\\n    var _xAxis = d3.svg.axis().orient('bottom');\\n    var _xUnits = dc.units.integers;\\n    var _xAxisPadding = 0;\\n    var _xAxisPaddingUnit = 'day';\\n    var _xElasticity = false;\\n    var _xAxisLabel;\\n    var _xAxisLabelPadding = 0;\\n    var _lastXDomain;\\n\\n    var _y;\\n    var _yAxis = d3.svg.axis().orient('left');\\n    var _yAxisPadding = 0;\\n    var _yElasticity = false;\\n    var _yAxisLabel;\\n    var _yAxisLabelPadding = 0;\\n\\n    var _brush = d3.svg.brush();\\n    var _brushOn = true;\\n    var _round;\\n\\n    var _renderHorizontalGridLine = false;\\n    var _renderVerticalGridLine = false;\\n\\n    var _refocused = false, _resizing = false;\\n    var _unitCount;\\n\\n    var _zoomScale = [1, Infinity];\\n    var _zoomOutRestrict = true;\\n\\n    var _zoom = d3.behavior.zoom().on('zoom', zoomHandler);\\n    var _nullZoom = d3.behavior.zoom().on('zoom', null);\\n    var _hasBeenMouseZoomable = false;\\n\\n    var _rangeChart;\\n    var _focusChart;\\n\\n    var _mouseZoomable = false;\\n    var _clipPadding = 0;\\n\\n    var _outerRangeBandPadding = 0.5;\\n    var _rangeBandPadding = 0;\\n\\n    var _useRightYAxis = false;\\n\\n    /**\\n     * When changing the domain of the x or y scale, it is necessary to tell the chart to recalculate\\n     * and redraw the axes. (`.rescale()` is called automatically when the x or y scale is replaced\\n     * with {@link dc.coordinateGridMixin+x .x()} or {@link dc.coordinateGridMixin#y .y()}, and has\\n     * no effect on elastic scales.)\\n     * @method rescale\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {dc.coordinateGridMixin}\\n     */\\n    _chart.rescale = function () {\\n        _unitCount = undefined;\\n        _resizing = true;\\n        return _chart;\\n    };\\n\\n    _chart.resizing = function () {\\n        return _resizing;\\n    };\\n\\n    /**\\n     * Get or set the range selection chart associated with this instance. Setting the range selection\\n     * chart using this function will automatically update its selection brush when the current chart\\n     * zooms in. In return the given range chart will also automatically attach this chart as its focus\\n     * chart hence zoom in when range brush updates.\\n     *\\n     * Usually the range and focus charts will share a dimension. The range chart will set the zoom\\n     * boundaries for the focus chart, so its dimension values must be compatible with the domain of\\n     * the focus chart.\\n     *\\n     * See the [Nasdaq 100 Index](http://dc-js.github.com/dc.js/) example for this effect in action.\\n     * @method rangeChart\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {dc.coordinateGridMixin} [rangeChart]\\n     * @returns {dc.coordinateGridMixin}\\n     */\\n    _chart.rangeChart = function (rangeChart) {\\n        if (!arguments.length) {\\n            return _rangeChart;\\n        }\\n        _rangeChart = rangeChart;\\n        _rangeChart.focusChart(_chart);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the scale extent for mouse zooms.\\n     * @method zoomScale\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Array<Number|Date>} [extent=[1, Infinity]]\\n     * @returns {Array<Number|Date>|dc.coordinateGridMixin}\\n     */\\n    _chart.zoomScale = function (extent) {\\n        if (!arguments.length) {\\n            return _zoomScale;\\n        }\\n        _zoomScale = extent;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the zoom restriction for the chart. If true limits the zoom to origional domain of the chart.\\n     * @method zoomOutRestrict\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [zoomOutRestrict=true]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.zoomOutRestrict = function (zoomOutRestrict) {\\n        if (!arguments.length) {\\n            return _zoomOutRestrict;\\n        }\\n        _zoomScale[0] = zoomOutRestrict ? 1 : 0;\\n        _zoomOutRestrict = zoomOutRestrict;\\n        return _chart;\\n    };\\n\\n    _chart._generateG = function (parent) {\\n        if (parent === undefined) {\\n            _parent = _chart.svg();\\n        } else {\\n            _parent = parent;\\n        }\\n\\n        var href = window.location.href.split('#')[0];\\n\\n        _g = _parent.append('g');\\n\\n        _chartBodyG = _g.append('g').attr('class', 'chart-body')\\n            .attr('transform', 'translate(' + _chart.margins().left + ', ' + _chart.margins().top + ')')\\n            .attr('clip-path', 'url(' + href + '#' + getClipPathId() + ')');\\n\\n        return _g;\\n    };\\n\\n    /**\\n     * Get or set the root g element. This method is usually used to retrieve the g element in order to\\n     * overlay custom svg drawing programatically. **Caution**: The root g element is usually generated\\n     * by dc.js internals, and resetting it might produce unpredictable result.\\n     * @method g\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {SVGElement} [gElement]\\n     * @returns {SVGElement|dc.coordinateGridMixin}\\n     */\\n    _chart.g = function (gElement) {\\n        if (!arguments.length) {\\n            return _g;\\n        }\\n        _g = gElement;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get mouse zoom capability flag (default: false). When turned on the chart will be\\n     * zoomable using the mouse wheel. If the range selector chart is attached zooming will also update\\n     * the range selection brush on the associated range selector chart.\\n     * @method mouseZoomable\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [mouseZoomable=false]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.mouseZoomable = function (mouseZoomable) {\\n        if (!arguments.length) {\\n            return _mouseZoomable;\\n        }\\n        _mouseZoomable = mouseZoomable;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Retrieve the svg group for the chart body.\\n     * @method chartBodyG\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {SVGElement} [chartBodyG]\\n     * @returns {SVGElement}\\n     */\\n    _chart.chartBodyG = function (chartBodyG) {\\n        if (!arguments.length) {\\n            return _chartBodyG;\\n        }\\n        _chartBodyG = chartBodyG;\\n        return _chart;\\n    };\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Get or set the x scale. The x scale can be any d3\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md quantitive scale} or\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md ordinal scale}.\\n     * @method x\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Scales.md d3.scale}\\n     * @example\\n     * // set x to a linear scale\\n     * chart.x(d3.scale.linear().domain([-2500, 2500]))\\n     * // set x to a time scale to generate histogram\\n     * chart.x(d3.time.scale().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\\n     * @param {d3.scale} [xScale]\\n     * @returns {d3.scale|dc.coordinateGridMixin}\\n     */\\n    _chart.x = function (xScale) {\\n        if (!arguments.length) {\\n            return _x;\\n        }\\n        _x = xScale;\\n        _xOriginalDomain = _x.domain();\\n        _chart.rescale();\\n        return _chart;\\n    };\\n\\n    _chart.xOriginalDomain = function () {\\n        return _xOriginalDomain;\\n    };\\n\\n    /**\\n     * Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate\\n     * the number of data projections on x axis such as the number of bars for a bar chart or the\\n     * number of dots for a line chart. This function is expected to return a Javascript array of all\\n     * data points on x axis, or the number of points on the axis. [d3 time range functions\\n     * d3.time.days, d3.time.months, and\\n     * d3.time.years](https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Intervals.md#aliases) are all valid xUnits\\n     * function. dc.js also provides a few units function, see the {@link dc.units Units Namespace} for\\n     * a list of built-in units functions.\\n     * @method xUnits\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @todo Add docs for utilities\\n     * @example\\n     * // set x units to count days\\n     * chart.xUnits(d3.time.days);\\n     * // set x units to count months\\n     * chart.xUnits(d3.time.months);\\n     *\\n     * // A custom xUnits function can be used as long as it follows the following interface:\\n     * // units in integer\\n     * function(start, end, xDomain) {\\n     *      // simply calculates how many integers in the domain\\n     *      return Math.abs(end - start);\\n     * };\\n     *\\n     * // fixed units\\n     * function(start, end, xDomain) {\\n     *      // be aware using fixed units will disable the focus/zoom ability on the chart\\n     *      return 1000;\\n     * @param {Function} [xUnits=dc.units.integers]\\n     * @returns {Function|dc.coordinateGridMixin}\\n     */\\n    _chart.xUnits = function (xUnits) {\\n        if (!arguments.length) {\\n            return _xUnits;\\n        }\\n        _xUnits = xUnits;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the x axis used by a particular coordinate grid chart instance. This function is most\\n     * useful when x axis customization is required. The x axis in dc.js is an instance of a\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis d3 axis object};\\n     * therefore it supports any valid d3 axis manipulation.\\n     *\\n     * **Caution**: The x axis is usually generated internally by dc; resetting it may cause\\n     * unexpected results. Note also that when used as a getter, this function is not chainable:\\n     * it returns the axis, not the chart,\\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\\n     * so attempting to call chart functions after calling `.xAxis()` will fail}.\\n     * @method xAxis\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis d3.svg.axis}\\n     * @example\\n     * // customize x axis tick format\\n     * chart.xAxis().tickFormat(function(v) {return v + '%';});\\n     * // customize x axis tick values\\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\\n     * @param {d3.svg.axis} [xAxis=d3.svg.axis().orient('bottom')]\\n     * @returns {d3.svg.axis|dc.coordinateGridMixin}\\n     */\\n    _chart.xAxis = function (xAxis) {\\n        if (!arguments.length) {\\n            return _xAxis;\\n        }\\n        _xAxis = xAxis;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will\\n     * attempt to recalculate the x axis range whenever a redraw event is triggered.\\n     * @method elasticX\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [elasticX=false]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.elasticX = function (elasticX) {\\n        if (!arguments.length) {\\n            return _xElasticity;\\n        }\\n        _xElasticity = elasticX;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x\\n     * axis if elasticX is turned on; otherwise it is ignored.\\n     *\\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\\n     * number or date x axes.  When padding a date axis, an integer represents number of units being padded\\n     * and a percentage string will be treated the same as an integer. The unit will be determined by the\\n     * xAxisPaddingUnit variable.\\n     * @method xAxisPadding\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Number|String} [padding=0]\\n     * @returns {Number|String|dc.coordinateGridMixin}\\n     */\\n    _chart.xAxisPadding = function (padding) {\\n        if (!arguments.length) {\\n            return _xAxisPadding;\\n        }\\n        _xAxisPadding = padding;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get x axis padding unit for the elastic x axis. The padding unit will determine which unit to\\n     * use when applying xAxis padding if elasticX is turned on and if x-axis uses a time dimension;\\n     * otherwise it is ignored.\\n     *\\n     * Padding unit is a string that will be used when the padding is calculated. Available parameters are\\n     * the available d3 time intervals; see\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Intervals.md#interval d3.time.interval}.\\n     * @method xAxisPaddingUnit\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {String} [unit='days']\\n     * @returns {String|dc.coordinateGridMixin}\\n     */\\n    _chart.xAxisPaddingUnit = function (unit) {\\n        if (!arguments.length) {\\n            return _xAxisPaddingUnit;\\n        }\\n        _xAxisPaddingUnit = unit;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns the number of units displayed on the x axis using the unit measure configured by\\n     * {@link dc.coordinateGridMixin#xUnits xUnits}.\\n     * @method xUnitCount\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {Number}\\n     */\\n    _chart.xUnitCount = function () {\\n        if (_unitCount === undefined) {\\n            var units = _chart.xUnits()(_chart.x().domain()[0], _chart.x().domain()[1], _chart.x().domain());\\n\\n            if (units instanceof Array) {\\n                _unitCount = units.length;\\n            } else {\\n                _unitCount = units;\\n            }\\n        }\\n\\n        return _unitCount;\\n    };\\n\\n    /**\\n     * Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When\\n     * used with a chart in a composite chart, allows both left and right Y axes to be shown on a\\n     * chart.\\n     * @method useRightYAxis\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [useRightYAxis=false]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.useRightYAxis = function (useRightYAxis) {\\n        if (!arguments.length) {\\n            return _useRightYAxis;\\n        }\\n        _useRightYAxis = useRightYAxis;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns true if the chart is using ordinal xUnits ({@link dc.units.ordinal dc.units.ordinal}, or false\\n     * otherwise. Most charts behave differently with ordinal data and use the result of this method to\\n     * trigger the appropriate logic.\\n     * @method isOrdinal\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {Boolean}\\n     */\\n    _chart.isOrdinal = function () {\\n        return _chart.xUnits() === dc.units.ordinal;\\n    };\\n\\n    _chart._useOuterPadding = function () {\\n        return true;\\n    };\\n\\n    _chart._ordinalXDomain = function () {\\n        var groups = _chart._computeOrderedGroups(_chart.data());\\n        return groups.map(_chart.keyAccessor());\\n    };\\n\\n    function compareDomains (d1, d2) {\\n        return !d1 || !d2 || d1.length !== d2.length ||\\n            d1.some(function (elem, i) { return (elem && d2[i]) ? elem.toString() !== d2[i].toString() : elem === d2[i]; });\\n    }\\n\\n    function prepareXAxis (g, render) {\\n        if (!_chart.isOrdinal()) {\\n            if (_chart.elasticX()) {\\n                _x.domain([_chart.xAxisMin(), _chart.xAxisMax()]);\\n            }\\n        } else { // _chart.isOrdinal()\\n            if (_chart.elasticX() || _x.domain().length === 0) {\\n                _x.domain(_chart._ordinalXDomain());\\n            }\\n        }\\n\\n        // has the domain changed?\\n        var xdom = _x.domain();\\n        if (render || compareDomains(_lastXDomain, xdom)) {\\n            _chart.rescale();\\n        }\\n        _lastXDomain = xdom;\\n\\n        // please can't we always use rangeBands for bar charts?\\n        if (_chart.isOrdinal()) {\\n            _x.rangeBands([0, _chart.xAxisLength()], _rangeBandPadding,\\n                          _chart._useOuterPadding() ? _outerRangeBandPadding : 0);\\n        } else {\\n            _x.range([0, _chart.xAxisLength()]);\\n        }\\n\\n        _xAxis = _xAxis.scale(_chart.x());\\n\\n        renderVerticalGridLines(g);\\n    }\\n\\n    _chart.renderXAxis = function (g) {\\n        var axisXG = g.select('g.x');\\n\\n        if (axisXG.empty()) {\\n            axisXG = g.append('g')\\n                .attr('class', 'axis x')\\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')');\\n        }\\n\\n        var axisXLab = g.select('text.' + X_AXIS_LABEL_CLASS);\\n        if (axisXLab.empty() && _chart.xAxisLabel()) {\\n            axisXLab = g.append('text')\\n                .attr('class', X_AXIS_LABEL_CLASS)\\n                .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\\n                      (_chart.height() - _xAxisLabelPadding) + ')')\\n                .attr('text-anchor', 'middle');\\n        }\\n        if (_chart.xAxisLabel() && axisXLab.text() !== _chart.xAxisLabel()) {\\n            axisXLab.text(_chart.xAxisLabel());\\n        }\\n\\n        dc.transition(axisXG, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')')\\n            .call(_xAxis);\\n        dc.transition(axisXLab, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\\n                  (_chart.height() - _xAxisLabelPadding) + ')');\\n    };\\n\\n    function renderVerticalGridLines (g) {\\n        var gridLineG = g.select('g.' + VERTICAL_CLASS);\\n\\n        if (_renderVerticalGridLine) {\\n            if (gridLineG.empty()) {\\n                gridLineG = g.insert('g', ':first-child')\\n                    .attr('class', GRID_LINE_CLASS + ' ' + VERTICAL_CLASS)\\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\\n            }\\n\\n            var ticks = _xAxis.tickValues() ? _xAxis.tickValues() :\\n                    (typeof _x.ticks === 'function' ? _x.ticks(_xAxis.ticks()[0]) : _x.domain());\\n\\n            var lines = gridLineG.selectAll('line')\\n                .data(ticks);\\n\\n            // enter\\n            var linesGEnter = lines.enter()\\n                .append('line')\\n                .attr('x1', function (d) {\\n                    return _x(d);\\n                })\\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\\n                .attr('x2', function (d) {\\n                    return _x(d);\\n                })\\n                .attr('y2', 0)\\n                .attr('opacity', 0);\\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('opacity', 1);\\n\\n            // update\\n            dc.transition(lines, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('x1', function (d) {\\n                    return _x(d);\\n                })\\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\\n                .attr('x2', function (d) {\\n                    return _x(d);\\n                })\\n                .attr('y2', 0);\\n\\n            // exit\\n            lines.exit().remove();\\n        } else {\\n            gridLineG.selectAll('line').remove();\\n        }\\n    }\\n\\n    _chart._xAxisY = function () {\\n        return (_chart.height() - _chart.margins().bottom);\\n    };\\n\\n    _chart.xAxisLength = function () {\\n        return _chart.effectiveWidth();\\n    };\\n\\n    /**\\n     * Set or get the x axis label. If setting the label, you may optionally include additional padding to\\n     * the margin to make room for the label. By default the padded is set to 12 to accomodate the text height.\\n     * @method xAxisLabel\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {String} [labelText]\\n     * @param {Number} [padding=12]\\n     * @returns {String}\\n     */\\n    _chart.xAxisLabel = function (labelText, padding) {\\n        if (!arguments.length) {\\n            return _xAxisLabel;\\n        }\\n        _xAxisLabel = labelText;\\n        _chart.margins().bottom -= _xAxisLabelPadding;\\n        _xAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\\n        _chart.margins().bottom += _xAxisLabelPadding;\\n        return _chart;\\n    };\\n\\n    _chart._prepareYAxis = function (g) {\\n        if (_y === undefined || _chart.elasticY()) {\\n            if (_y === undefined) {\\n                _y = d3.scale.linear();\\n            }\\n            var min = _chart.yAxisMin() || 0,\\n                max = _chart.yAxisMax() || 0;\\n            _y.domain([min, max]).rangeRound([_chart.yAxisHeight(), 0]);\\n        }\\n\\n        _y.range([_chart.yAxisHeight(), 0]);\\n        _yAxis = _yAxis.scale(_y);\\n\\n        if (_useRightYAxis) {\\n            _yAxis.orient('right');\\n        }\\n\\n        _chart._renderHorizontalGridLinesForAxis(g, _y, _yAxis);\\n    };\\n\\n    _chart.renderYAxisLabel = function (axisClass, text, rotation, labelXPosition) {\\n        labelXPosition = labelXPosition || _yAxisLabelPadding;\\n\\n        var axisYLab = _chart.g().select('text.' + Y_AXIS_LABEL_CLASS + '.' + axisClass + '-label');\\n        var labelYPosition = (_chart.margins().top + _chart.yAxisHeight() / 2);\\n        if (axisYLab.empty() && text) {\\n            axisYLab = _chart.g().append('text')\\n                .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')')\\n                .attr('class', Y_AXIS_LABEL_CLASS + ' ' + axisClass + '-label')\\n                .attr('text-anchor', 'middle')\\n                .text(text);\\n        }\\n        if (text && axisYLab.text() !== text) {\\n            axisYLab.text(text);\\n        }\\n        dc.transition(axisYLab, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')');\\n    };\\n\\n    _chart.renderYAxisAt = function (axisClass, axis, position) {\\n        var axisYG = _chart.g().select('g.' + axisClass);\\n        if (axisYG.empty()) {\\n            axisYG = _chart.g().append('g')\\n                .attr('class', 'axis ' + axisClass)\\n                .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')');\\n        }\\n\\n        dc.transition(axisYG, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')')\\n            .call(axis);\\n    };\\n\\n    _chart.renderYAxis = function () {\\n        var axisPosition = _useRightYAxis ? (_chart.width() - _chart.margins().right) : _chart._yAxisX();\\n        _chart.renderYAxisAt('y', _yAxis, axisPosition);\\n        var labelPosition = _useRightYAxis ? (_chart.width() - _yAxisLabelPadding) : _yAxisLabelPadding;\\n        var rotation = _useRightYAxis ? 90 : -90;\\n        _chart.renderYAxisLabel('y', _chart.yAxisLabel(), rotation, labelPosition);\\n    };\\n\\n    _chart._renderHorizontalGridLinesForAxis = function (g, scale, axis) {\\n        var gridLineG = g.select('g.' + HORIZONTAL_CLASS);\\n\\n        if (_renderHorizontalGridLine) {\\n            var ticks = axis.tickValues() ? axis.tickValues() : scale.ticks(axis.ticks()[0]);\\n\\n            if (gridLineG.empty()) {\\n                gridLineG = g.insert('g', ':first-child')\\n                    .attr('class', GRID_LINE_CLASS + ' ' + HORIZONTAL_CLASS)\\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\\n            }\\n\\n            var lines = gridLineG.selectAll('line')\\n                .data(ticks);\\n\\n            // enter\\n            var linesGEnter = lines.enter()\\n                .append('line')\\n                .attr('x1', 1)\\n                .attr('y1', function (d) {\\n                    return scale(d);\\n                })\\n                .attr('x2', _chart.xAxisLength())\\n                .attr('y2', function (d) {\\n                    return scale(d);\\n                })\\n                .attr('opacity', 0);\\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('opacity', 1);\\n\\n            // update\\n            dc.transition(lines, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('x1', 1)\\n                .attr('y1', function (d) {\\n                    return scale(d);\\n                })\\n                .attr('x2', _chart.xAxisLength())\\n                .attr('y2', function (d) {\\n                    return scale(d);\\n                });\\n\\n            // exit\\n            lines.exit().remove();\\n        } else {\\n            gridLineG.selectAll('line').remove();\\n        }\\n    };\\n\\n    _chart._yAxisX = function () {\\n        return _chart.useRightYAxis() ? _chart.width() - _chart.margins().right : _chart.margins().left;\\n    };\\n\\n    /**\\n     * Set or get the y axis label. If setting the label, you may optionally include additional padding\\n     * to the margin to make room for the label. By default the padding is set to 12 to accommodate the\\n     * text height.\\n     * @method yAxisLabel\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {String} [labelText]\\n     * @param {Number} [padding=12]\\n     * @returns {String|dc.coordinateGridMixin}\\n     */\\n    _chart.yAxisLabel = function (labelText, padding) {\\n        if (!arguments.length) {\\n            return _yAxisLabel;\\n        }\\n        _yAxisLabel = labelText;\\n        _chart.margins().left -= _yAxisLabelPadding;\\n        _yAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\\n        _chart.margins().left += _yAxisLabelPadding;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the y scale. The y scale is typically automatically determined by the chart implementation.\\n     * @method y\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Scales.md d3.scale}\\n     * @param {d3.scale} [yScale]\\n     * @returns {d3.scale|dc.coordinateGridMixin}\\n     */\\n    _chart.y = function (yScale) {\\n        if (!arguments.length) {\\n            return _y;\\n        }\\n        _y = yScale;\\n        _chart.rescale();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the y axis used by the coordinate grid chart instance. This function is most useful\\n     * when y axis customization is required. The y axis in dc.js is simply an instance of a [d3 axis\\n     * object](https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis); therefore it supports any\\n     * valid d3 axis manipulation.\\n     *\\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\\n     * returns the axis, not the chart,\\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\\n     * @method yAxis\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis d3.svg.axis}\\n     * @example\\n     * // customize y axis tick format\\n     * chart.yAxis().tickFormat(function(v) {return v + '%';});\\n     * // customize y axis tick values\\n     * chart.yAxis().tickValues([0, 100, 200, 300]);\\n     * @param {d3.svg.axis} [yAxis=d3.svg.axis().orient('left')]\\n     * @returns {d3.svg.axis|dc.coordinateGridMixin}\\n     */\\n    _chart.yAxis = function (yAxis) {\\n        if (!arguments.length) {\\n            return _yAxis;\\n        }\\n        _yAxis = yAxis;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will\\n     * attempt to recalculate the y axis range whenever a redraw event is triggered.\\n     * @method elasticY\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [elasticY=false]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.elasticY = function (elasticY) {\\n        if (!arguments.length) {\\n            return _yElasticity;\\n        }\\n        _yElasticity = elasticY;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off horizontal grid lines.\\n     * @method renderHorizontalGridLines\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [renderHorizontalGridLines=false]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.renderHorizontalGridLines = function (renderHorizontalGridLines) {\\n        if (!arguments.length) {\\n            return _renderHorizontalGridLine;\\n        }\\n        _renderHorizontalGridLine = renderHorizontalGridLines;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on/off vertical grid lines.\\n     * @method renderVerticalGridLines\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [renderVerticalGridLines=false]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.renderVerticalGridLines = function (renderVerticalGridLines) {\\n        if (!arguments.length) {\\n            return _renderVerticalGridLine;\\n        }\\n        _renderVerticalGridLine = renderVerticalGridLines;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.\\n     * @method xAxisMin\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {*}\\n     */\\n    _chart.xAxisMin = function () {\\n        var min = d3.min(_chart.data(), function (e) {\\n            return _chart.keyAccessor()(e);\\n        });\\n        return dc.utils.subtract(min, _xAxisPadding, _xAxisPaddingUnit);\\n    };\\n\\n    /**\\n     * Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.\\n     * @method xAxisMax\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {*}\\n     */\\n    _chart.xAxisMax = function () {\\n        var max = d3.max(_chart.data(), function (e) {\\n            return _chart.keyAccessor()(e);\\n        });\\n        return dc.utils.add(max, _xAxisPadding, _xAxisPaddingUnit);\\n    };\\n\\n    /**\\n     * Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.\\n     * @method yAxisMin\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {*}\\n     */\\n    _chart.yAxisMin = function () {\\n        var min = d3.min(_chart.data(), function (e) {\\n            return _chart.valueAccessor()(e);\\n        });\\n        return dc.utils.subtract(min, _yAxisPadding);\\n    };\\n\\n    /**\\n     * Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.\\n     * @method yAxisMax\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @returns {*}\\n     */\\n    _chart.yAxisMax = function () {\\n        var max = d3.max(_chart.data(), function (e) {\\n            return _chart.valueAccessor()(e);\\n        });\\n        return dc.utils.add(max, _yAxisPadding);\\n    };\\n\\n    /**\\n     * Set or get y axis padding for the elastic y axis. The padding will be added to the top and\\n     * bottom of the y axis if elasticY is turned on; otherwise it is ignored.\\n     *\\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\\n     * number or date axes. When padding a date axis, an integer represents number of days being padded\\n     * and a percentage string will be treated the same as an integer.\\n     * @method yAxisPadding\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Number|String} [padding=0]\\n     * @returns {Number|dc.coordinateGridMixin}\\n     */\\n    _chart.yAxisPadding = function (padding) {\\n        if (!arguments.length) {\\n            return _yAxisPadding;\\n        }\\n        _yAxisPadding = padding;\\n        return _chart;\\n    };\\n\\n    _chart.yAxisHeight = function () {\\n        return _chart.effectiveHeight();\\n    };\\n\\n    /**\\n     * Set or get the rounding function used to quantize the selection when brushing is enabled.\\n     * @method round\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @example\\n     * // set x unit round to by month, this will make sure range selection brush will\\n     * // select whole months\\n     * chart.round(d3.time.month.round);\\n     * @param {Function} [round]\\n     * @returns {Function|dc.coordinateGridMixin}\\n     */\\n    _chart.round = function (round) {\\n        if (!arguments.length) {\\n            return _round;\\n        }\\n        _round = round;\\n        return _chart;\\n    };\\n\\n    _chart._rangeBandPadding = function (_) {\\n        if (!arguments.length) {\\n            return _rangeBandPadding;\\n        }\\n        _rangeBandPadding = _;\\n        return _chart;\\n    };\\n\\n    _chart._outerRangeBandPadding = function (_) {\\n        if (!arguments.length) {\\n            return _outerRangeBandPadding;\\n        }\\n        _outerRangeBandPadding = _;\\n        return _chart;\\n    };\\n\\n    dc.override(_chart, 'filter', function (_) {\\n        if (!arguments.length) {\\n            return _chart._filter();\\n        }\\n\\n        _chart._filter(_);\\n\\n        if (_) {\\n            _chart.brush().extent(_);\\n        } else {\\n            _chart.brush().clear();\\n        }\\n\\n        return _chart;\\n    });\\n\\n    _chart.brush = function (_) {\\n        if (!arguments.length) {\\n            return _brush;\\n        }\\n        _brush = _;\\n        return _chart;\\n    };\\n\\n    function brushHeight () {\\n        return _chart._xAxisY() - _chart.margins().top;\\n    }\\n\\n    _chart.renderBrush = function (g) {\\n        if (_brushOn) {\\n            _brush.on('brush', _chart._brushing);\\n            _brush.on('brushstart', _chart._disableMouseZoom);\\n            _brush.on('brushend', configureMouseZoom);\\n\\n            var gBrush = g.append('g')\\n                .attr('class', 'brush')\\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')')\\n                .call(_brush.x(_chart.x()));\\n            _chart.setBrushY(gBrush, false);\\n            _chart.setHandlePaths(gBrush);\\n\\n            if (_chart.hasFilter()) {\\n                _chart.redrawBrush(g, false);\\n            }\\n        }\\n    };\\n\\n    _chart.setHandlePaths = function (gBrush) {\\n        gBrush.selectAll('.resize').append('path').attr('d', _chart.resizeHandlePath);\\n    };\\n\\n    _chart.setBrushY = function (gBrush) {\\n        gBrush.selectAll('rect')\\n            .attr('height', brushHeight());\\n        gBrush.selectAll('.resize path')\\n            .attr('d', _chart.resizeHandlePath);\\n    };\\n\\n    _chart.extendBrush = function () {\\n        var extent = _brush.extent();\\n        if (_chart.round()) {\\n            extent[0] = extent.map(_chart.round())[0];\\n            extent[1] = extent.map(_chart.round())[1];\\n\\n            _g.select('.brush')\\n                .call(_brush.extent(extent));\\n        }\\n        return extent;\\n    };\\n\\n    _chart.brushIsEmpty = function (extent) {\\n        return _brush.empty() || !extent || extent[1] <= extent[0];\\n    };\\n\\n    _chart._brushing = function () {\\n        var extent = _chart.extendBrush();\\n\\n        _chart.redrawBrush(_g, false);\\n\\n        if (_chart.brushIsEmpty(extent)) {\\n            dc.events.trigger(function () {\\n                _chart.filter(null);\\n                _chart.redrawGroup();\\n            }, dc.constants.EVENT_DELAY);\\n        } else {\\n            var rangedFilter = dc.filters.RangedFilter(extent[0], extent[1]);\\n\\n            dc.events.trigger(function () {\\n                _chart.replaceFilter(rangedFilter);\\n                _chart.redrawGroup();\\n            }, dc.constants.EVENT_DELAY);\\n        }\\n    };\\n\\n    _chart.redrawBrush = function (g, doTransition) {\\n        if (_brushOn) {\\n            if (_chart.filter() && _chart.brush().empty()) {\\n                _chart.brush().extent(_chart.filter());\\n            }\\n\\n            var gBrush = dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(g.select('g.brush'));\\n            _chart.setBrushY(gBrush);\\n            gBrush.call(_chart.brush()\\n                      .x(_chart.x())\\n                      .extent(_chart.brush().extent()));\\n        }\\n\\n        _chart.fadeDeselectedArea();\\n    };\\n\\n    _chart.fadeDeselectedArea = function () {\\n        // do nothing, sub-chart should override this function\\n    };\\n\\n    // borrowed from Crossfilter example\\n    _chart.resizeHandlePath = function (d) {\\n        var e = +(d === 'e'), x = e ? 1 : -1, y = brushHeight() / 3;\\n        return 'M' + (0.5 * x) + ',' + y +\\n            'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6) +\\n            'V' + (2 * y - 6) +\\n            'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y) +\\n            'Z' +\\n            'M' + (2.5 * x) + ',' + (y + 8) +\\n            'V' + (2 * y - 8) +\\n            'M' + (4.5 * x) + ',' + (y + 8) +\\n            'V' + (2 * y - 8);\\n    };\\n\\n    function getClipPathId () {\\n        return _chart.anchorName().replace(/[ .#=\\\\[\\\\]\\\"]/g, '-') + '-clip';\\n    }\\n\\n    /**\\n     * Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to\\n     * the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area\\n     * will be exactly the chart body area minus the margins.\\n     * @method clipPadding\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Number} [padding=5]\\n     * @returns {Number|dc.coordinateGridMixin}\\n     */\\n    _chart.clipPadding = function (padding) {\\n        if (!arguments.length) {\\n            return _clipPadding;\\n        }\\n        _clipPadding = padding;\\n        return _chart;\\n    };\\n\\n    function generateClipPath () {\\n        var defs = dc.utils.appendOrSelect(_parent, 'defs');\\n        // cannot select <clippath> elements; bug in WebKit, must select by id\\n        // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\\n        var id = getClipPathId();\\n        var chartBodyClip = dc.utils.appendOrSelect(defs, '#' + id, 'clipPath').attr('id', id);\\n\\n        var padding = _clipPadding * 2;\\n\\n        dc.utils.appendOrSelect(chartBodyClip, 'rect')\\n            .attr('width', _chart.xAxisLength() + padding)\\n            .attr('height', _chart.yAxisHeight() + padding)\\n            .attr('transform', 'translate(-' + _clipPadding + ', -' + _clipPadding + ')');\\n    }\\n\\n    _chart._preprocessData = function () {};\\n\\n    _chart._doRender = function () {\\n        _chart.resetSvg();\\n\\n        _chart._preprocessData();\\n\\n        _chart._generateG();\\n        generateClipPath();\\n\\n        drawChart(true);\\n\\n        configureMouseZoom();\\n\\n        return _chart;\\n    };\\n\\n    _chart._doRedraw = function () {\\n        _chart._preprocessData();\\n\\n        drawChart(false);\\n        generateClipPath();\\n\\n        return _chart;\\n    };\\n\\n    function drawChart (render) {\\n        if (_chart.isOrdinal()) {\\n            _brushOn = false;\\n        }\\n\\n        prepareXAxis(_chart.g(), render);\\n        _chart._prepareYAxis(_chart.g());\\n\\n        _chart.plotData();\\n\\n        if (_chart.elasticX() || _resizing || render) {\\n            _chart.renderXAxis(_chart.g());\\n        }\\n\\n        if (_chart.elasticY() || _resizing || render) {\\n            _chart.renderYAxis(_chart.g());\\n        }\\n\\n        if (render) {\\n            _chart.renderBrush(_chart.g(), false);\\n        } else {\\n            _chart.redrawBrush(_chart.g(), _resizing);\\n        }\\n        _chart.fadeDeselectedArea();\\n        _resizing = false;\\n    }\\n\\n    function configureMouseZoom () {\\n        if (_mouseZoomable) {\\n            _chart._enableMouseZoom();\\n        } else if (_hasBeenMouseZoomable) {\\n            _chart._disableMouseZoom();\\n        }\\n    }\\n\\n    _chart._enableMouseZoom = function () {\\n        _hasBeenMouseZoomable = true;\\n        _zoom.x(_chart.x())\\n            .scaleExtent(_zoomScale)\\n            .size([_chart.width(), _chart.height()])\\n            .duration(_chart.transitionDuration());\\n        _chart.root().call(_zoom);\\n    };\\n\\n    _chart._disableMouseZoom = function () {\\n        _chart.root().call(_nullZoom);\\n    };\\n\\n    function zoomHandler () {\\n        _refocused = true;\\n        if (_zoomOutRestrict) {\\n            var constraint = _xOriginalDomain;\\n            if (_rangeChart) {\\n                constraint = intersectExtents(constraint, _rangeChart.x().domain());\\n            }\\n            var constrained = constrainExtent(_chart.x().domain(), constraint);\\n            if (constrained) {\\n                _chart.x().domain(constrained);\\n            }\\n        }\\n\\n        var domain = _chart.x().domain();\\n        var domFilter = dc.filters.RangedFilter(domain[0], domain[1]);\\n\\n        _chart.replaceFilter(domFilter);\\n        _chart.rescale();\\n        _chart.redraw();\\n\\n        if (_rangeChart && !rangesEqual(_chart.filter(), _rangeChart.filter())) {\\n            dc.events.trigger(function () {\\n                _rangeChart.replaceFilter(domFilter);\\n                _rangeChart.redraw();\\n            });\\n        }\\n\\n        _chart._invokeZoomedListener();\\n\\n        dc.events.trigger(function () {\\n            _chart.redrawGroup();\\n        }, dc.constants.EVENT_DELAY);\\n\\n        _refocused = !rangesEqual(domain, _xOriginalDomain);\\n    }\\n\\n    function intersectExtents (ext1, ext2) {\\n        if (ext1[0] > ext2[1] || ext1[1] < ext2[0]) {\\n            console.warn('could not intersect extents');\\n        }\\n        return [Math.max(ext1[0], ext2[0]), Math.min(ext1[1], ext2[1])];\\n    }\\n\\n    function constrainExtent (extent, constraint) {\\n        var size = extent[1] - extent[0];\\n        if (extent[0] < constraint[0]) {\\n            return [constraint[0], Math.min(constraint[1], dc.utils.add(constraint[0], size, 'millis'))];\\n        } else if (extent[1] > constraint[1]) {\\n            return [Math.max(constraint[0], dc.utils.subtract(constraint[1], size, 'millis')), constraint[1]];\\n        } else {\\n            return null;\\n        }\\n    }\\n\\n    /**\\n     * Zoom this chart to focus on the given range. The given range should be an array containing only\\n     * 2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set\\n     * to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;\\n     * otherwise focus will be ignored.\\n     * @method focus\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @example\\n     * chart.on('renderlet', function(chart) {\\n     *     // smooth the rendering through event throttling\\n     *     dc.events.trigger(function(){\\n     *          // focus some other chart to the range selected by user on this chart\\n     *          someOtherChart.focus(chart.filter());\\n     *     });\\n     * })\\n     * @param {Array<Number>} [range]\\n     */\\n    _chart.focus = function (range) {\\n        if (hasRangeSelected(range)) {\\n            _chart.x().domain(range);\\n        } else {\\n            _chart.x().domain(_xOriginalDomain);\\n        }\\n\\n        _zoom.x(_chart.x());\\n        zoomHandler();\\n    };\\n\\n    _chart.refocused = function () {\\n        return _refocused;\\n    };\\n\\n    _chart.focusChart = function (c) {\\n        if (!arguments.length) {\\n            return _focusChart;\\n        }\\n        _focusChart = c;\\n        _chart.on('filtered', function (chart) {\\n            if (!chart.filter()) {\\n                dc.events.trigger(function () {\\n                    _focusChart.x().domain(_focusChart.xOriginalDomain());\\n                });\\n            } else if (!rangesEqual(chart.filter(), _focusChart.filter())) {\\n                dc.events.trigger(function () {\\n                    _focusChart.focus(chart.filter());\\n                });\\n            }\\n        });\\n        return _chart;\\n    };\\n\\n    function rangesEqual (range1, range2) {\\n        if (!range1 && !range2) {\\n            return true;\\n        } else if (!range1 || !range2) {\\n            return false;\\n        } else if (range1.length === 0 && range2.length === 0) {\\n            return true;\\n        } else if (range1[0].valueOf() === range2[0].valueOf() &&\\n            range1[1].valueOf() === range2[1].valueOf()) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse\\n     * across a chart with a quantitative scale to perform range filtering based on the extent of the\\n     * brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and\\n     * un-filter them. However turning on the brush filter will disable other interactive elements on\\n     * the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible\\n     * if enabled, but only via scrolling (panning will be disabled.)\\n     * @method brushOn\\n     * @memberof dc.coordinateGridMixin\\n     * @instance\\n     * @param {Boolean} [brushOn=true]\\n     * @returns {Boolean|dc.coordinateGridMixin}\\n     */\\n    _chart.brushOn = function (brushOn) {\\n        if (!arguments.length) {\\n            return _brushOn;\\n        }\\n        _brushOn = brushOn;\\n        return _chart;\\n    };\\n\\n    function hasRangeSelected (range) {\\n        return range instanceof Array && range.length > 1;\\n    }\\n\\n    return _chart;\\n};\\n\\n/**\\n * Stack Mixin is an mixin that provides cross-chart support of stackability using d3.layout.stack.\\n * @name stackMixin\\n * @memberof dc\\n * @mixin\\n * @param {Object} _chart\\n * @returns {dc.stackMixin}\\n */\\ndc.stackMixin = function (_chart) {\\n\\n    function prepareValues (layer, layerIdx) {\\n        var valAccessor = layer.accessor || _chart.valueAccessor();\\n        layer.name = String(layer.name || layerIdx);\\n        layer.values = layer.group.all().map(function (d, i) {\\n            return {\\n                x: _chart.keyAccessor()(d, i),\\n                y: layer.hidden ? null : valAccessor(d, i),\\n                data: d,\\n                layer: layer.name,\\n                hidden: layer.hidden\\n            };\\n        });\\n\\n        layer.values = layer.values.filter(domainFilter());\\n        return layer.values;\\n    }\\n\\n    var _stackLayout = d3.layout.stack()\\n        .values(prepareValues);\\n\\n    var _stack = [];\\n    var _titles = {};\\n\\n    var _hidableStacks = false;\\n    var _evadeDomainFilter = false;\\n\\n    function domainFilter () {\\n        if (!_chart.x() || _evadeDomainFilter) {\\n            return d3.functor(true);\\n        }\\n        var xDomain = _chart.x().domain();\\n        if (_chart.isOrdinal()) {\\n            // TODO #416\\n            //var domainSet = d3.set(xDomain);\\n            return function () {\\n                return true; //domainSet.has(p.x);\\n            };\\n        }\\n        if (_chart.elasticX()) {\\n            return function () { return true; };\\n        }\\n        return function (p) {\\n            //return true;\\n            return p.x >= xDomain[0] && p.x <= xDomain[xDomain.length - 1];\\n        };\\n    }\\n\\n    /**\\n     * Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks\\n     * in the same chart will share the same key accessor and therefore the same set of keys.\\n     *\\n     * For example, in a stacked bar chart, the bars of each stack will be positioned using the same set\\n     * of keys on the x axis, while stacked vertically. If name is specified then it will be used to\\n     * generate the legend label.\\n     * @method stack\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\\n     * @example\\n     * // stack group using default accessor\\n     * chart.stack(valueSumGroup)\\n     * // stack group using custom accessor\\n     * .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\\n     * @param {crossfilter.group} group\\n     * @param {String} [name]\\n     * @param {Function} [accessor]\\n     * @returns {Array<{group: crossfilter.group, name: String, accessor: Function}>|dc.stackMixin}\\n     */\\n    _chart.stack = function (group, name, accessor) {\\n        if (!arguments.length) {\\n            return _stack;\\n        }\\n\\n        if (arguments.length <= 2) {\\n            accessor = name;\\n        }\\n\\n        var layer = {group: group};\\n        if (typeof name === 'string') {\\n            layer.name = name;\\n        }\\n        if (typeof accessor === 'function') {\\n            layer.accessor = accessor;\\n        }\\n        _stack.push(layer);\\n\\n        return _chart;\\n    };\\n\\n    dc.override(_chart, 'group', function (g, n, f) {\\n        if (!arguments.length) {\\n            return _chart._group();\\n        }\\n        _stack = [];\\n        _titles = {};\\n        _chart.stack(g, n);\\n        if (f) {\\n            _chart.valueAccessor(f);\\n        }\\n        return _chart._group(g, n);\\n    });\\n\\n    /**\\n     * Allow named stacks to be hidden or shown by clicking on legend items.\\n     * This does not affect the behavior of hideStack or showStack.\\n     * @method hidableStacks\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @param {Boolean} [hidableStacks=false]\\n     * @returns {Boolean|dc.stackMixin}\\n     */\\n    _chart.hidableStacks = function (hidableStacks) {\\n        if (!arguments.length) {\\n            return _hidableStacks;\\n        }\\n        _hidableStacks = hidableStacks;\\n        return _chart;\\n    };\\n\\n    function findLayerByName (n) {\\n        var i = _stack.map(dc.pluck('name')).indexOf(n);\\n        return _stack[i];\\n    }\\n\\n    /**\\n     * Hide all stacks on the chart with the given name.\\n     * The chart must be re-rendered for this change to appear.\\n     * @method hideStack\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @param {String} stackName\\n     * @returns {dc.stackMixin}\\n     */\\n    _chart.hideStack = function (stackName) {\\n        var layer = findLayerByName(stackName);\\n        if (layer) {\\n            layer.hidden = true;\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Show all stacks on the chart with the given name.\\n     * The chart must be re-rendered for this change to appear.\\n     * @method showStack\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @param {String} stackName\\n     * @returns {dc.stackMixin}\\n     */\\n    _chart.showStack = function (stackName) {\\n        var layer = findLayerByName(stackName);\\n        if (layer) {\\n            layer.hidden = false;\\n        }\\n        return _chart;\\n    };\\n\\n    _chart.getValueAccessorByIndex = function (index) {\\n        return _stack[index].accessor || _chart.valueAccessor();\\n    };\\n\\n    _chart.yAxisMin = function () {\\n        var min = d3.min(flattenStack(), function (p) {\\n            return (p.y < 0) ? (p.y + p.y0) : p.y0;\\n        });\\n\\n        return dc.utils.subtract(min, _chart.yAxisPadding());\\n\\n    };\\n\\n    _chart.yAxisMax = function () {\\n        var max = d3.max(flattenStack(), function (p) {\\n            return (p.y > 0) ? (p.y + p.y0) : p.y0;\\n        });\\n\\n        return dc.utils.add(max, _chart.yAxisPadding());\\n    };\\n\\n    function flattenStack () {\\n        var valueses = _chart.data().map(function (layer) { return layer.values; });\\n        return Array.prototype.concat.apply([], valueses);\\n    }\\n\\n    _chart.xAxisMin = function () {\\n        var min = d3.min(flattenStack(), dc.pluck('x'));\\n        return dc.utils.subtract(min, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\\n    };\\n\\n    _chart.xAxisMax = function () {\\n        var max = d3.max(flattenStack(), dc.pluck('x'));\\n        return dc.utils.add(max, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\\n    };\\n\\n    /**\\n     * Set or get the title function. Chart class will use this function to render svg title (usually interpreted by\\n     * browser as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart.\\n     * Almost every chart supports title function however in grid coordinate chart you need to turn off brush in order to\\n     * use title otherwise the brush layer will block tooltip trigger.\\n     *\\n     * If the first argument is a stack name, the title function will get or set the title for that stack. If stackName\\n     * is not provided, the first stack is implied.\\n     * @method title\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @example\\n     * // set a title function on 'first stack'\\n     * chart.title('first stack', function(d) { return d.key + ': ' + d.value; });\\n     * // get a title function from 'second stack'\\n     * var secondTitleFunction = chart.title('second stack');\\n     * @param {String} [stackName]\\n     * @param {Function} [titleAccessor]\\n     * @returns {String|dc.stackMixin}\\n     */\\n    dc.override(_chart, 'title', function (stackName, titleAccessor) {\\n        if (!stackName) {\\n            return _chart._title();\\n        }\\n\\n        if (typeof stackName === 'function') {\\n            return _chart._title(stackName);\\n        }\\n        if (stackName === _chart._groupName && typeof titleAccessor === 'function') {\\n            return _chart._title(titleAccessor);\\n        }\\n\\n        if (typeof titleAccessor !== 'function') {\\n            return _titles[stackName] || _chart._title();\\n        }\\n\\n        _titles[stackName] = titleAccessor;\\n\\n        return _chart;\\n    });\\n\\n    /**\\n     * Gets or sets the stack layout algorithm, which computes a baseline for each stack and\\n     * propagates it to the next.\\n     * @method stackLayout\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md d3.layout.stack}\\n     * @param {Function} [stack=d3.layout.stack]\\n     * @returns {Function|dc.stackMixin}\\n     */\\n    _chart.stackLayout = function (stack) {\\n        if (!arguments.length) {\\n            return _stackLayout;\\n        }\\n        _stackLayout = stack;\\n        if (_stackLayout.values() === d3.layout.stack().values()) {\\n            _stackLayout.values(prepareValues);\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Since dc.js 2.0, there has been {@link https://github.com/dc-js/dc.js/issues/949 an issue}\\n     * where points are filtered to the current domain. While this is a useful optimization, it is\\n     * incorrectly implemented: the next point outside the domain is required in order to draw lines\\n     * that are clipped to the bounds, as well as bars that are partly clipped.\\n     *\\n     * A fix will be included in dc.js 2.1.x, but a workaround is needed for dc.js 2.0 and until\\n     * that fix is published, so set this flag to skip any filtering of points.\\n     *\\n     * Once the bug is fixed, this flag will have no effect, and it will be deprecated.\\n     * @method evadeDomainFilter\\n     * @memberof dc.stackMixin\\n     * @instance\\n     * @param {Boolean} [evadeDomainFilter=false]\\n     * @returns {Boolean|dc.stackMixin}\\n     */\\n    _chart.evadeDomainFilter = function (evadeDomainFilter) {\\n        if (!arguments.length) {\\n            return _evadeDomainFilter;\\n        }\\n        _evadeDomainFilter = evadeDomainFilter;\\n        return _chart;\\n    };\\n\\n    function visability (l) {\\n        return !l.hidden;\\n    }\\n\\n    _chart.data(function () {\\n        var layers = _stack.filter(visability);\\n        return layers.length ? _chart.stackLayout()(layers) : [];\\n    });\\n\\n    _chart._ordinalXDomain = function () {\\n        var flat = flattenStack().map(dc.pluck('data'));\\n        var ordered = _chart._computeOrderedGroups(flat);\\n        return ordered.map(_chart.keyAccessor());\\n    };\\n\\n    _chart.colorAccessor(function (d) {\\n        var layer = this.layer || this.name || d.name || d.layer;\\n        return layer;\\n    });\\n\\n    _chart.legendables = function () {\\n        return _stack.map(function (layer, i) {\\n            return {\\n                chart: _chart,\\n                name: layer.name,\\n                hidden: layer.hidden || false,\\n                color: _chart.getColor.call(layer, layer.values, i)\\n            };\\n        });\\n    };\\n\\n    _chart.isLegendableHidden = function (d) {\\n        var layer = findLayerByName(d.name);\\n        return layer ? layer.hidden : false;\\n    };\\n\\n    _chart.legendToggle = function (d) {\\n        if (_hidableStacks) {\\n            if (_chart.isLegendableHidden(d)) {\\n                _chart.showStack(d.name);\\n            } else {\\n                _chart.hideStack(d.name);\\n            }\\n            //_chart.redraw();\\n            _chart.renderGroup();\\n        }\\n    };\\n\\n    return _chart;\\n};\\n\\n/**\\n * Cap is a mixin that groups small data elements below a _cap_ into an *others* grouping for both the\\n * Row and Pie Charts.\\n *\\n * The top ordered elements in the group up to the cap amount will be kept in the chart, and the rest\\n * will be replaced with an *others* element, with value equal to the sum of the replaced values. The\\n * keys of the elements below the cap limit are recorded in order to filter by those keys when the\\n * others* element is clicked.\\n * @name capMixin\\n * @memberof dc\\n * @mixin\\n * @param {Object} _chart\\n * @returns {dc.capMixin}\\n */\\ndc.capMixin = function (_chart) {\\n    var _cap = Infinity, _takeFront = true;\\n    var _othersLabel = 'Others';\\n\\n    // emulate old group.top(N) ordering\\n    _chart.ordering(function (kv) {\\n        return -kv.value;\\n    });\\n\\n    var _othersGrouper = function (topItems, restItems) {\\n        var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\\n            restKeys = restItems.map(_chart.keyAccessor());\\n        if (restItemsSum > 0) {\\n            return topItems.concat([{\\n                others: restKeys,\\n                key: _chart.othersLabel(),\\n                value: restItemsSum\\n            }]);\\n        }\\n        return topItems;\\n    };\\n\\n    _chart.cappedKeyAccessor = function (d, i) {\\n        if (d.others) {\\n            return d.key;\\n        }\\n        return _chart.keyAccessor()(d, i);\\n    };\\n\\n    _chart.cappedValueAccessor = function (d, i) {\\n        if (d.others) {\\n            return d.value;\\n        }\\n        return _chart.valueAccessor()(d, i);\\n    };\\n\\n    // return N \\\"top\\\" groups, where N is the cap, sorted by baseMixin.ordering\\n    // whether top means front or back depends on takeFront\\n    _chart.data(function (group) {\\n        if (_cap === Infinity) {\\n            return _chart._computeOrderedGroups(group.all());\\n        } else {\\n            var items = group.all(), rest;\\n            items = _chart._computeOrderedGroups(items); // sort by baseMixin.ordering\\n\\n            if (_cap) {\\n                if (_takeFront) {\\n                    rest = items.slice(_cap);\\n                    items = items.slice(0, _cap);\\n                } else {\\n                    var start = Math.max(0, items.length - _cap);\\n                    rest = items.slice(0, start);\\n                    items = items.slice(start);\\n                }\\n            }\\n\\n            if (_othersGrouper) {\\n                return _othersGrouper(items, rest);\\n            }\\n            return items;\\n        }\\n    });\\n\\n    /**\\n     * Get or set the count of elements to that will be included in the cap. If there is an\\n     * {@link dc.capMixin#othersGrouper othersGrouper}, any further elements will be combined in an\\n     * extra element with its name determined by {@link dc.capMixin#othersLabel othersLabel}.\\n     *\\n     * As of dc.js 2.1 and onward, the capped charts use\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all()}\\n     * and {@link dc.baseMixin#ordering baseMixin.ordering()} to determine the order of\\n     * elements. Then `cap` and {@link dc.capMixin#takeFront takeFront} determine how many elements\\n     * to keep, from which end of the resulting array.\\n     *\\n     * **Migration note:** Up through dc.js 2.0.*, capping used\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_top group.top(N)},\\n     * which selects the largest items according to\\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_order group.order()}.\\n     * The chart then sorted the items according to {@link dc.baseMixin#ordering baseMixin.ordering()}.\\n     * So the two values essentially had to agree, but if the `group.order()` was incorrect (it's\\n     * easy to forget about), the wrong rows or slices would be displayed, in the correct order.\\n     *\\n     * If your chart previously relied on `group.order()`, use `chart.ordering()` instead. As of\\n     * 2.1.5, the ordering defaults to sorting from greatest to least like `group.top(N)` did.\\n     *\\n     * If you want to cap by one ordering but sort by another, please\\n     * [file an issue](https://github.com/dc-js/dc.js/issues/new) - it's still possible but we'll\\n     * need to work up an example.\\n     * @method cap\\n     * @memberof dc.capMixin\\n     * @instance\\n     * @param {Number} [count=Infinity]\\n     * @returns {Number|dc.capMixin}\\n     */\\n    _chart.cap = function (count) {\\n        if (!arguments.length) {\\n            return _cap;\\n        }\\n        _cap = count;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the direction of capping. If set, the chart takes the first\\n     * {@link dc.capMixin#cap cap} elements from the sorted array of elements; otherwise\\n     * it takes the last `cap` elements.\\n     * @method takeFront\\n     * @memberof dc.capMixin\\n     * @instance\\n     * @param {Boolean} [takeFront=true]\\n     * @returns {Boolean|dc.capMixin}\\n     */\\n    _chart.takeFront = function (takeFront) {\\n        if (!arguments.length) {\\n            return _takeFront;\\n        }\\n        _takeFront = takeFront;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the label for *Others* slice when slices cap is specified.\\n     * @method othersLabel\\n     * @memberof dc.capMixin\\n     * @instance\\n     * @param {String} [label=\\\"Others\\\"]\\n     * @returns {String|dc.capMixin}\\n     */\\n    _chart.othersLabel = function (label) {\\n        if (!arguments.length) {\\n            return _othersLabel;\\n        }\\n        _othersLabel = label;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the grouper function that will perform the insertion of data for the *Others* slice\\n     * if the slices cap is specified. If set to a falsy value, no others will be added.\\n     *\\n     * The grouper function takes an array of included (\\\"top\\\") items, and an array of the rest of\\n     * the items. By default the grouper function computes the sum of the rest.\\n     * @method othersGrouper\\n     * @memberof dc.capMixin\\n     * @instance\\n     * @example\\n     * // Do not show others\\n     * chart.othersGrouper(null);\\n     * // Default others grouper\\n     * chart.othersGrouper(function (topItems, restItems) {\\n     *     var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\\n     *         restKeys = restItems.map(_chart.keyAccessor());\\n     *     if (restItemsSum > 0) {\\n     *         return topItems.concat([{\\n     *             others: restKeys,\\n     *             key: _chart.othersLabel(),\\n     *             value: restItemsSum\\n     *         }]);\\n     *     }\\n     *     return topItems;\\n     * });\\n     * @param {Function} [grouperFunction]\\n     * @returns {Function|dc.capMixin}\\n     */\\n    _chart.othersGrouper = function (grouperFunction) {\\n        if (!arguments.length) {\\n            return _othersGrouper;\\n        }\\n        _othersGrouper = grouperFunction;\\n        return _chart;\\n    };\\n\\n    dc.override(_chart, 'onClick', function (d) {\\n        if (d.others) {\\n            _chart.filter([d.others]);\\n        }\\n        _chart._onClick(d);\\n    });\\n\\n    return _chart;\\n};\\n\\n/**\\n * This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.\\n * @name bubbleMixin\\n * @memberof dc\\n * @mixin\\n * @mixes dc.colorMixin\\n * @param {Object} _chart\\n * @returns {dc.bubbleMixin}\\n */\\ndc.bubbleMixin = function (_chart) {\\n    var _maxBubbleRelativeSize = 0.3;\\n    var _minRadiusWithLabel = 10;\\n    var _sortBubbleSize = false;\\n    var _elasticRadius = false;\\n\\n    _chart.BUBBLE_NODE_CLASS = 'node';\\n    _chart.BUBBLE_CLASS = 'bubble';\\n    _chart.MIN_RADIUS = 10;\\n\\n    _chart = dc.colorMixin(_chart);\\n\\n    _chart.renderLabel(true);\\n\\n    _chart.data(function (group) {\\n        var data = group.all();\\n        if (_sortBubbleSize) {\\n            // sort descending so smaller bubbles are on top\\n            var radiusAccessor = _chart.radiusValueAccessor();\\n            data.sort(function (a, b) { return d3.descending(radiusAccessor(a), radiusAccessor(b)); });\\n        }\\n        return data;\\n    });\\n\\n    var _r = d3.scale.linear().domain([0, 100]);\\n\\n    var _rValueAccessor = function (d) {\\n        return d.r;\\n    };\\n\\n    /**\\n     * Get or set the bubble radius scale. By default the bubble chart uses\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md#linear d3.scale.linear().domain([0, 100])}\\n     * as its radius scale.\\n     * @method r\\n     * @memberof dc.bubbleMixin\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Scales.md d3.scale}\\n     * @param {d3.scale} [bubbleRadiusScale=d3.scale.linear().domain([0, 100])]\\n     * @returns {d3.scale|dc.bubbleMixin}\\n     */\\n    _chart.r = function (bubbleRadiusScale) {\\n        if (!arguments.length) {\\n            return _r;\\n        }\\n        _r = bubbleRadiusScale;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Turn on or off the elastic bubble radius feature, or return the value of the flag. If this\\n     * feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.\\n     * @method elasticRadius\\n     * @memberof dc.bubbleChart\\n     * @instance\\n     * @param {Boolean} [elasticRadius=false]\\n     * @returns {Boolean|dc.bubbleChart}\\n     */\\n    _chart.elasticRadius = function (elasticRadius) {\\n        if (!arguments.length) {\\n            return _elasticRadius;\\n        }\\n        _elasticRadius = elasticRadius;\\n        return _chart;\\n    };\\n\\n    _chart.calculateRadiusDomain = function () {\\n        if (_elasticRadius) {\\n            _chart.r().domain([_chart.rMin(), _chart.rMax()]);\\n        }\\n    };\\n\\n    /**\\n     * Get or set the radius value accessor function. If set, the radius value accessor function will\\n     * be used to retrieve a data value for each bubble. The data retrieved then will be mapped using\\n     * the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble\\n     * size.\\n     * @method radiusValueAccessor\\n     * @memberof dc.bubbleMixin\\n     * @instance\\n     * @param {Function} [radiusValueAccessor]\\n     * @returns {Function|dc.bubbleMixin}\\n     */\\n    _chart.radiusValueAccessor = function (radiusValueAccessor) {\\n        if (!arguments.length) {\\n            return _rValueAccessor;\\n        }\\n        _rValueAccessor = radiusValueAccessor;\\n        return _chart;\\n    };\\n\\n    _chart.rMin = function () {\\n        var min = d3.min(_chart.data(), function (e) {\\n            return _chart.radiusValueAccessor()(e);\\n        });\\n        return min;\\n    };\\n\\n    _chart.rMax = function () {\\n        var max = d3.max(_chart.data(), function (e) {\\n            return _chart.radiusValueAccessor()(e);\\n        });\\n        return max;\\n    };\\n\\n    _chart.bubbleR = function (d) {\\n        var value = _chart.radiusValueAccessor()(d);\\n        var r = _chart.r()(value);\\n        if (isNaN(r) || value <= 0) {\\n            r = 0;\\n        }\\n        return r;\\n    };\\n\\n    var labelFunction = function (d) {\\n        return _chart.label()(d);\\n    };\\n\\n    var shouldLabel = function (d) {\\n        return (_chart.bubbleR(d) > _minRadiusWithLabel);\\n    };\\n\\n    var labelOpacity = function (d) {\\n        return shouldLabel(d) ? 1 : 0;\\n    };\\n\\n    var labelPointerEvent = function (d) {\\n        return shouldLabel(d) ? 'all' : 'none';\\n    };\\n\\n    _chart._doRenderLabel = function (bubbleGEnter) {\\n        if (_chart.renderLabel()) {\\n            var label = bubbleGEnter.select('text');\\n\\n            if (label.empty()) {\\n                label = bubbleGEnter.append('text')\\n                    .attr('text-anchor', 'middle')\\n                    .attr('dy', '.3em')\\n                    .on('click', _chart.onClick);\\n            }\\n\\n            label\\n                .attr('opacity', 0)\\n                .attr('pointer-events', labelPointerEvent)\\n                .text(labelFunction);\\n            dc.transition(label, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('opacity', labelOpacity);\\n        }\\n    };\\n\\n    _chart.doUpdateLabels = function (bubbleGEnter) {\\n        if (_chart.renderLabel()) {\\n            var labels = bubbleGEnter.select('text')\\n                .attr('pointer-events', labelPointerEvent)\\n                .text(labelFunction);\\n            dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('opacity', labelOpacity);\\n        }\\n    };\\n\\n    var titleFunction = function (d) {\\n        return _chart.title()(d);\\n    };\\n\\n    _chart._doRenderTitles = function (g) {\\n        if (_chart.renderTitle()) {\\n            var title = g.select('title');\\n\\n            if (title.empty()) {\\n                g.append('title').text(titleFunction);\\n            }\\n        }\\n    };\\n\\n    _chart.doUpdateTitles = function (g) {\\n        if (_chart.renderTitle()) {\\n            g.select('title').text(titleFunction);\\n        }\\n    };\\n\\n    /**\\n     * Turn on or off the bubble sorting feature, or return the value of the flag. If enabled,\\n     * bubbles will be sorted by their radius, with smaller bubbles in front.\\n     * @method sortBubbleSize\\n     * @memberof dc.bubbleChart\\n     * @instance\\n     * @param {Boolean} [sortBubbleSize=false]\\n     * @returns {Boolean|dc.bubbleChart}\\n     */\\n    _chart.sortBubbleSize = function (sortBubbleSize) {\\n        if (!arguments.length) {\\n            return _sortBubbleSize;\\n        }\\n        _sortBubbleSize = sortBubbleSize;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the minimum radius. This will be used to initialize the radius scale's range.\\n     * @method minRadius\\n     * @memberof dc.bubbleMixin\\n     * @instance\\n     * @param {Number} [radius=10]\\n     * @returns {Number|dc.bubbleMixin}\\n     */\\n    _chart.minRadius = function (radius) {\\n        if (!arguments.length) {\\n            return _chart.MIN_RADIUS;\\n        }\\n        _chart.MIN_RADIUS = radius;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the minimum radius for label rendering. If a bubble's radius is less than this value\\n     * then no label will be rendered.\\n     * @method minRadiusWithLabel\\n     * @memberof dc.bubbleMixin\\n     * @instance\\n     * @param {Number} [radius=10]\\n     * @returns {Number|dc.bubbleMixin}\\n     */\\n\\n    _chart.minRadiusWithLabel = function (radius) {\\n        if (!arguments.length) {\\n            return _minRadiusWithLabel;\\n        }\\n        _minRadiusWithLabel = radius;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the maximum relative size of a bubble to the length of x axis. This value is useful\\n     * when the difference in radius between bubbles is too great.\\n     * @method maxBubbleRelativeSize\\n     * @memberof dc.bubbleMixin\\n     * @instance\\n     * @param {Number} [relativeSize=0.3]\\n     * @returns {Number|dc.bubbleMixin}\\n     */\\n    _chart.maxBubbleRelativeSize = function (relativeSize) {\\n        if (!arguments.length) {\\n            return _maxBubbleRelativeSize;\\n        }\\n        _maxBubbleRelativeSize = relativeSize;\\n        return _chart;\\n    };\\n\\n    _chart.fadeDeselectedArea = function () {\\n        if (_chart.hasFilter()) {\\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function (d) {\\n                if (_chart.isSelectedNode(d)) {\\n                    _chart.highlightSelected(this);\\n                } else {\\n                    _chart.fadeDeselected(this);\\n                }\\n            });\\n        } else {\\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function () {\\n                _chart.resetHighlight(this);\\n            });\\n        }\\n    };\\n\\n    _chart.isSelectedNode = function (d) {\\n        return _chart.hasFilter(d.key);\\n    };\\n\\n    _chart.onClick = function (d) {\\n        var filter = d.key;\\n        dc.events.trigger(function () {\\n            _chart.filter(filter);\\n            _chart.redrawGroup();\\n        });\\n    };\\n\\n    return _chart;\\n};\\n\\n/**\\n * The pie chart implementation is usually used to visualize a small categorical distribution.  The pie\\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering}\\n * which defaults to sorting by key.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * @class pieChart\\n * @memberof dc\\n * @mixes dc.capMixin\\n * @mixes dc.colorMixin\\n * @mixes dc.baseMixin\\n * @example\\n * // create a pie chart under #chart-container1 element using the default global chart group\\n * var chart1 = dc.pieChart('#chart-container1');\\n * // create a pie chart under #chart-container2 element using chart group A\\n * var chart2 = dc.pieChart('#chart-container2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.pieChart}\\n */\\ndc.pieChart = function (parent, chartGroup) {\\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\\n\\n    var _sliceCssClass = 'pie-slice';\\n    var _labelCssClass = 'pie-label';\\n    var _sliceGroupCssClass = 'pie-slice-group';\\n    var _labelGroupCssClass = 'pie-label-group';\\n    var _emptyCssClass = 'empty-chart';\\n    var _emptyTitle = 'empty';\\n\\n    var _radius,\\n        _givenRadius, // specified radius, if any\\n        _innerRadius = 0,\\n        _externalRadiusPadding = 0;\\n\\n    var _g;\\n    var _cx;\\n    var _cy;\\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\\n    var _externalLabelRadius;\\n    var _drawPaths = false;\\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\\n\\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\\n\\n    _chart.title(function (d) {\\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\\n    });\\n\\n    /**\\n     * Get or set the maximum number of slices the pie chart will generate. The top slices are determined by\\n     * value from high to low. Other slices exeeding the cap will be rolled up into one single *Others* slice.\\n     * @method slicesCap\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [cap]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.slicesCap = _chart.cap;\\n\\n    _chart.label(_chart.cappedKeyAccessor);\\n    _chart.renderLabel(true);\\n\\n    _chart.transitionDuration(350);\\n    _chart.transitionDelay(0);\\n\\n    _chart._doRender = function () {\\n        _chart.resetSvg();\\n\\n        _g = _chart.svg()\\n            .append('g')\\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\\n\\n        _g.append('g').attr('class', _sliceGroupCssClass);\\n        _g.append('g').attr('class', _labelGroupCssClass);\\n\\n        drawChart();\\n\\n        return _chart;\\n    };\\n\\n    function drawChart () {\\n        // set radius from chart size if none given, or if given radius is too large\\n        var maxRadius =  d3.min([_chart.width(), _chart.height()]) / 2;\\n        _radius = _givenRadius && _givenRadius < maxRadius ? _givenRadius : maxRadius;\\n\\n        var arc = buildArcs();\\n\\n        var pie = pieLayout();\\n        var pieData;\\n        // if we have data...\\n        if (d3.sum(_chart.data(), _chart.valueAccessor())) {\\n            pieData = pie(_chart.data());\\n            _g.classed(_emptyCssClass, false);\\n        } else {\\n            // otherwise we'd be getting NaNs, so override\\n            // note: abuse others for its ignoring the value accessor\\n            pieData = pie([{key: _emptyTitle, value: 1, others: [_emptyTitle]}]);\\n            _g.classed(_emptyCssClass, true);\\n        }\\n\\n        if (_g) {\\n            var slices = _g.select('g.' + _sliceGroupCssClass)\\n                .selectAll('g.' + _sliceCssClass)\\n                .data(pieData);\\n\\n            var labels = _g.select('g.' + _labelGroupCssClass)\\n                .selectAll('text.' + _labelCssClass)\\n                .data(pieData);\\n\\n            createElements(slices, labels, arc, pieData);\\n\\n            updateElements(pieData, arc);\\n\\n            removeElements(slices, labels);\\n\\n            highlightFilter();\\n\\n            dc.transition(_g, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\\n        }\\n    }\\n\\n    function createElements (slices, labels, arc, pieData) {\\n        var slicesEnter = createSliceNodes(slices);\\n\\n        createSlicePath(slicesEnter, arc);\\n\\n        createTitles(slicesEnter);\\n\\n        createLabels(labels, pieData, arc);\\n    }\\n\\n    function createSliceNodes (slices) {\\n        var slicesEnter = slices\\n            .enter()\\n            .append('g')\\n            .attr('class', function (d, i) {\\n                return _sliceCssClass + ' _' + i;\\n            });\\n        return slicesEnter;\\n    }\\n\\n    function createSlicePath (slicesEnter, arc) {\\n        var slicePath = slicesEnter.append('path')\\n            .attr('fill', fill)\\n            .on('click', onClick)\\n            .attr('d', function (d, i) {\\n                return safeArc(d, i, arc);\\n            });\\n\\n        var transition = dc.transition(slicePath, _chart.transitionDuration(), _chart.transitionDelay());\\n        if (transition.attrTween) {\\n            transition.attrTween('d', tweenPie);\\n        }\\n    }\\n\\n    function createTitles (slicesEnter) {\\n        if (_chart.renderTitle()) {\\n            slicesEnter.append('title').text(function (d) {\\n                return _chart.title()(d.data);\\n            });\\n        }\\n    }\\n\\n    _chart._applyLabelText = function (labels) {\\n        labels\\n            .text(function (d) {\\n                var data = d.data;\\n                if ((sliceHasNoData(data) || sliceTooSmall(d)) && !isSelectedSlice(d)) {\\n                    return '';\\n                }\\n                return _chart.label()(d.data);\\n            });\\n    };\\n\\n    function positionLabels (labels, arc) {\\n        _chart._applyLabelText(labels);\\n        dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', function (d) {\\n                return labelPosition(d, arc);\\n            })\\n            .attr('text-anchor', 'middle');\\n    }\\n\\n    function highlightSlice (i, whether) {\\n        _chart.select('g.pie-slice._' + i)\\n            .classed('highlight', whether);\\n    }\\n\\n    function createLabels (labels, pieData, arc) {\\n        if (_chart.renderLabel()) {\\n            var labelsEnter = labels\\n                .enter()\\n                .append('text')\\n                .attr('class', function (d, i) {\\n                    var classes = _sliceCssClass + ' ' + _labelCssClass + ' _' + i;\\n                    if (_externalLabelRadius) {\\n                        classes += ' external';\\n                    }\\n                    return classes;\\n                })\\n                .on('click', onClick)\\n                .on('mouseover', function (d, i) {\\n                    highlightSlice(i, true);\\n                })\\n                .on('mouseout', function (d, i) {\\n                    highlightSlice(i, false);\\n                });\\n            positionLabels(labelsEnter, arc);\\n            if (_externalLabelRadius && _drawPaths) {\\n                updateLabelPaths(pieData, arc);\\n            }\\n        }\\n    }\\n\\n    function updateLabelPaths (pieData, arc) {\\n        var polyline = _g.selectAll('polyline.' + _sliceCssClass)\\n                .data(pieData);\\n\\n        polyline\\n                .enter()\\n                .append('polyline')\\n                .attr('class', function (d, i) {\\n                    return 'pie-path _' + i + ' ' + _sliceCssClass;\\n                })\\n                .on('click', onClick)\\n                .on('mouseover', function (d, i) {\\n                    highlightSlice(i, true);\\n                })\\n                .on('mouseout', function (d, i) {\\n                    highlightSlice(i, false);\\n                });\\n\\n        polyline.exit().remove();\\n        var arc2 = d3.svg.arc()\\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\\n                .innerRadius(_radius - _externalRadiusPadding);\\n        var transition = dc.transition(polyline, _chart.transitionDuration(), _chart.transitionDelay());\\n        // this is one rare case where d3.selection differs from d3.transition\\n        if (transition.attrTween) {\\n            transition\\n                .attrTween('points', function (d) {\\n                    var current = this._current || d;\\n                    current = {startAngle: current.startAngle, endAngle: current.endAngle};\\n                    var interpolate = d3.interpolate(current, d);\\n                    this._current = interpolate(0);\\n                    return function (t) {\\n                        var d2 = interpolate(t);\\n                        return [arc.centroid(d2), arc2.centroid(d2)];\\n                    };\\n                });\\n        } else {\\n            transition.attr('points', function (d) {\\n                return [arc.centroid(d), arc2.centroid(d)];\\n            });\\n        }\\n        transition.style('visibility', function (d) {\\n            return d.endAngle - d.startAngle < 0.0001 ? 'hidden' : 'visible';\\n        });\\n\\n    }\\n\\n    function updateElements (pieData, arc) {\\n        updateSlicePaths(pieData, arc);\\n        updateLabels(pieData, arc);\\n        updateTitles(pieData);\\n    }\\n\\n    function updateSlicePaths (pieData, arc) {\\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\\n            .data(pieData)\\n            .select('path')\\n            .attr('d', function (d, i) {\\n                return safeArc(d, i, arc);\\n            });\\n        var transition = dc.transition(slicePaths, _chart.transitionDuration(), _chart.transitionDelay());\\n        if (transition.attrTween) {\\n            transition.attrTween('d', tweenPie);\\n        }\\n        transition.attr('fill', fill);\\n    }\\n\\n    function updateLabels (pieData, arc) {\\n        if (_chart.renderLabel()) {\\n            var labels = _g.selectAll('text.' + _labelCssClass)\\n                .data(pieData);\\n            positionLabels(labels, arc);\\n            if (_externalLabelRadius && _drawPaths) {\\n                updateLabelPaths(pieData, arc);\\n            }\\n        }\\n    }\\n\\n    function updateTitles (pieData) {\\n        if (_chart.renderTitle()) {\\n            _g.selectAll('g.' + _sliceCssClass)\\n                .data(pieData)\\n                .select('title')\\n                .text(function (d) {\\n                    return _chart.title()(d.data);\\n                });\\n        }\\n    }\\n\\n    function removeElements (slices, labels) {\\n        slices.exit().remove();\\n        labels.exit().remove();\\n    }\\n\\n    function highlightFilter () {\\n        if (_chart.hasFilter()) {\\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\\n                if (isSelectedSlice(d)) {\\n                    _chart.highlightSelected(this);\\n                } else {\\n                    _chart.fadeDeselected(this);\\n                }\\n            });\\n        } else {\\n            _chart.selectAll('g.' + _sliceCssClass).each(function () {\\n                _chart.resetHighlight(this);\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Get or set the external radius padding of the pie chart. This will force the radius of the\\n     * pie chart to become smaller or larger depending on the value.\\n     * @method externalRadiusPadding\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [externalRadiusPadding=0]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.externalRadiusPadding = function (externalRadiusPadding) {\\n        if (!arguments.length) {\\n            return _externalRadiusPadding;\\n        }\\n        _externalRadiusPadding = externalRadiusPadding;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the\\n     * pie chart will be rendered as a doughnut chart.\\n     * @method innerRadius\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [innerRadius=0]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.innerRadius = function (innerRadius) {\\n        if (!arguments.length) {\\n            return _innerRadius;\\n        }\\n        _innerRadius = innerRadius;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\\n     * chart width and height.\\n     * @method radius\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [radius]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.radius = function (radius) {\\n        if (!arguments.length) {\\n            return _givenRadius;\\n        }\\n        _givenRadius = radius;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set center x coordinate position. Default is center of svg.\\n     * @method cx\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [cx]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.cx = function (cx) {\\n        if (!arguments.length) {\\n            return (_cx ||  _chart.width() / 2);\\n        }\\n        _cx = cx;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set center y coordinate position. Default is center of svg.\\n     * @method cy\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [cy]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.cy = function (cy) {\\n        if (!arguments.length) {\\n            return (_cy ||  _chart.height() / 2);\\n        }\\n        _cy = cy;\\n        return _chart;\\n    };\\n\\n    function buildArcs () {\\n        return d3.svg.arc()\\n            .outerRadius(_radius - _externalRadiusPadding)\\n            .innerRadius(_innerRadius);\\n    }\\n\\n    function isSelectedSlice (d) {\\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d.data));\\n    }\\n\\n    _chart._doRedraw = function () {\\n        drawChart();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\\n     * display a slice label.\\n     * @method minAngleForLabel\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [minAngleForLabel=0.5]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.minAngleForLabel = function (minAngleForLabel) {\\n        if (!arguments.length) {\\n            return _minAngleForLabel;\\n        }\\n        _minAngleForLabel = minAngleForLabel;\\n        return _chart;\\n    };\\n\\n    function pieLayout () {\\n        return d3.layout.pie().sort(null).value(_chart.cappedValueAccessor);\\n    }\\n\\n    function sliceTooSmall (d) {\\n        var angle = (d.endAngle - d.startAngle);\\n        return isNaN(angle) || angle < _minAngleForLabel;\\n    }\\n\\n    function sliceHasNoData (d) {\\n        return _chart.cappedValueAccessor(d) === 0;\\n    }\\n\\n    function tweenPie (b) {\\n        b.innerRadius = _innerRadius;\\n        var current = this._current;\\n        if (isOffCanvas(current)) {\\n            current = {startAngle: 0, endAngle: 0};\\n        } else {\\n            // only interpolate startAngle & endAngle, not the whole data object\\n            current = {startAngle: current.startAngle, endAngle: current.endAngle};\\n        }\\n        var i = d3.interpolate(current, b);\\n        this._current = i(0);\\n        return function (t) {\\n            return safeArc(i(t), 0, buildArcs());\\n        };\\n    }\\n\\n    function isOffCanvas (current) {\\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\\n    }\\n\\n    function fill (d, i) {\\n        return _chart.getColor(d.data, i);\\n    }\\n\\n    function onClick (d, i) {\\n        if (_g.attr('class') !== _emptyCssClass) {\\n            _chart.onClick(d.data, i);\\n        }\\n    }\\n\\n    function safeArc (d, i, arc) {\\n        var path = arc(d, i);\\n        if (path.indexOf('NaN') >= 0) {\\n            path = 'M0,0';\\n        }\\n        return path;\\n    }\\n\\n    /**\\n     * Title to use for the only slice when there is no data.\\n     * @method emptyTitle\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {String} [title]\\n     * @returns {String|dc.pieChart}\\n     */\\n    _chart.emptyTitle = function (title) {\\n        if (arguments.length === 0) {\\n            return _emptyTitle;\\n        }\\n        _emptyTitle = title;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Position slice labels offset from the outer edge of the chart.\\n     *\\n     * The argument specifies the extra radius to be added for slice labels.\\n     * @method externalLabels\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Number} [externalLabelRadius]\\n     * @returns {Number|dc.pieChart}\\n     */\\n    _chart.externalLabels = function (externalLabelRadius) {\\n        if (arguments.length === 0) {\\n            return _externalLabelRadius;\\n        } else if (externalLabelRadius) {\\n            _externalLabelRadius = externalLabelRadius;\\n        } else {\\n            _externalLabelRadius = undefined;\\n        }\\n\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set whether to draw lines from pie slices to their labels.\\n     *\\n     * @method drawPaths\\n     * @memberof dc.pieChart\\n     * @instance\\n     * @param {Boolean} [drawPaths]\\n     * @returns {Boolean|dc.pieChart}\\n     */\\n    _chart.drawPaths = function (drawPaths) {\\n        if (arguments.length === 0) {\\n            return _drawPaths;\\n        }\\n        _drawPaths = drawPaths;\\n        return _chart;\\n    };\\n\\n    function labelPosition (d, arc) {\\n        var centroid;\\n        if (_externalLabelRadius) {\\n            centroid = d3.svg.arc()\\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\\n                .innerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\\n                .centroid(d);\\n        } else {\\n            centroid = arc.centroid(d);\\n        }\\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\\n            return 'translate(0,0)';\\n        } else {\\n            return 'translate(' + centroid + ')';\\n        }\\n    }\\n\\n    _chart.legendables = function () {\\n        return _chart.data().map(function (d, i) {\\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\\n            legendable.color = _chart.getColor(d, i);\\n            return legendable;\\n        });\\n    };\\n\\n    _chart.legendHighlight = function (d) {\\n        highlightSliceFromLegendable(d, true);\\n    };\\n\\n    _chart.legendReset = function (d) {\\n        highlightSliceFromLegendable(d, false);\\n    };\\n\\n    _chart.legendToggle = function (d) {\\n        _chart.onClick({key: d.name, others: d.others});\\n    };\\n\\n    function highlightSliceFromLegendable (legendable, highlighted) {\\n        _chart.selectAll('g.pie-slice').each(function (d) {\\n            if (legendable.name === d.data.key) {\\n                d3.select(this).classed('highlight', highlighted);\\n            }\\n        });\\n    }\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * Concrete bar chart/histogram implementation.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\\n * @class barChart\\n * @memberof dc\\n * @mixes dc.stackMixin\\n * @mixes dc.coordinateGridMixin\\n * @example\\n * // create a bar chart under #chart-container1 element using the default global chart group\\n * var chart1 = dc.barChart('#chart-container1');\\n * // create a bar chart under #chart-container2 element using chart group A\\n * var chart2 = dc.barChart('#chart-container2', 'chartGroupA');\\n * // create a sub-chart under a composite parent chart\\n * var chart3 = dc.barChart(compositeChart);\\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector}\\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the bar\\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\\n * composite chart instance instead.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.barChart}\\n */\\ndc.barChart = function (parent, chartGroup) {\\n    var MIN_BAR_WIDTH = 1;\\n    var DEFAULT_GAP_BETWEEN_BARS = 2;\\n    var LABEL_PADDING = 3;\\n\\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\\n\\n    var _gap = DEFAULT_GAP_BETWEEN_BARS;\\n    var _centerBar = false;\\n    var _alwaysUseRounding = false;\\n\\n    var _barWidth;\\n\\n    dc.override(_chart, 'rescale', function () {\\n        _chart._rescale();\\n        _barWidth = undefined;\\n        return _chart;\\n    });\\n\\n    dc.override(_chart, 'render', function () {\\n        if (_chart.round() && _centerBar && !_alwaysUseRounding) {\\n            dc.logger.warn('By default, brush rounding is disabled if bars are centered. ' +\\n                         'See dc.js bar chart API documentation for details.');\\n        }\\n\\n        return _chart._render();\\n    });\\n\\n    _chart.label(function (d) {\\n        return dc.utils.printSingleValue(d.y0 + d.y);\\n    }, false);\\n\\n    _chart.plotData = function () {\\n        var layers = _chart.chartBodyG().selectAll('g.stack')\\n            .data(_chart.data());\\n\\n        calculateBarWidth();\\n\\n        layers\\n            .enter()\\n            .append('g')\\n            .attr('class', function (d, i) {\\n                return 'stack ' + '_' + i;\\n            });\\n\\n        var last = layers.size() - 1;\\n        layers.each(function (d, i) {\\n            var layer = d3.select(this);\\n\\n            renderBars(layer, i, d);\\n\\n            if (_chart.renderLabel() && last === i) {\\n                renderLabels(layer, i, d);\\n            }\\n        });\\n    };\\n\\n    function barHeight (d) {\\n        return dc.utils.safeNumber(Math.abs(_chart.y()(d.y + d.y0) - _chart.y()(d.y0)));\\n    }\\n\\n    function renderLabels (layer, layerIndex, d) {\\n        var labels = layer.selectAll('text.barLabel')\\n            .data(d.values, dc.pluck('x'));\\n\\n        labels.enter()\\n            .append('text')\\n            .attr('class', 'barLabel')\\n            .attr('text-anchor', 'middle');\\n\\n        if (_chart.isOrdinal()) {\\n            labels.on('click', _chart.onClick);\\n            labels.attr('cursor', 'pointer');\\n        }\\n\\n        dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('x', function (d) {\\n                var x = _chart.x()(d.x);\\n                if (!_centerBar) {\\n                    x += _barWidth / 2;\\n                }\\n                return dc.utils.safeNumber(x);\\n            })\\n            .attr('y', function (d) {\\n                var y = _chart.y()(d.y + d.y0);\\n\\n                if (d.y < 0) {\\n                    y -= barHeight(d);\\n                }\\n\\n                return dc.utils.safeNumber(y - LABEL_PADDING);\\n            })\\n            .text(function (d) {\\n                return _chart.label()(d);\\n            });\\n\\n        dc.transition(labels.exit(), _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('height', 0)\\n            .remove();\\n    }\\n\\n    function renderBars (layer, layerIndex, d) {\\n        var bars = layer.selectAll('rect.bar')\\n            .data(d.values, dc.pluck('x'));\\n\\n        var enter = bars.enter()\\n            .append('rect')\\n            .attr('class', 'bar')\\n            .attr('fill', dc.pluck('data', _chart.getColor))\\n            .attr('y', _chart.yAxisHeight())\\n            .attr('height', 0);\\n\\n        if (_chart.renderTitle()) {\\n            enter.append('title').text(dc.pluck('data', _chart.title(d.name)));\\n        }\\n\\n        if (_chart.isOrdinal()) {\\n            bars.on('click', _chart.onClick);\\n        }\\n\\n        dc.transition(bars, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('x', function (d) {\\n                var x = _chart.x()(d.x);\\n                if (_centerBar) {\\n                    x -= _barWidth / 2;\\n                }\\n                if (_chart.isOrdinal() && _gap !== undefined) {\\n                    x += _gap / 2;\\n                }\\n                return dc.utils.safeNumber(x);\\n            })\\n            .attr('y', function (d) {\\n                var y = _chart.y()(d.y + d.y0);\\n\\n                if (d.y < 0) {\\n                    y -= barHeight(d);\\n                }\\n\\n                return dc.utils.safeNumber(y);\\n            })\\n            .attr('width', _barWidth)\\n            .attr('height', function (d) {\\n                return barHeight(d);\\n            })\\n            .attr('fill', dc.pluck('data', _chart.getColor))\\n            .select('title').text(dc.pluck('data', _chart.title(d.name)));\\n\\n        dc.transition(bars.exit(), _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('x', function (d) { return _chart.x()(d.x); })\\n            .attr('width', _barWidth * 0.9)\\n            .remove();\\n    }\\n\\n    function calculateBarWidth () {\\n        if (_barWidth === undefined) {\\n            var numberOfBars = _chart.xUnitCount();\\n\\n            // please can't we always use rangeBands for bar charts?\\n            if (_chart.isOrdinal() && _gap === undefined) {\\n                _barWidth = Math.floor(_chart.x().rangeBand());\\n            } else if (_gap) {\\n                _barWidth = Math.floor((_chart.xAxisLength() - (numberOfBars - 1) * _gap) / numberOfBars);\\n            } else {\\n                _barWidth = Math.floor(_chart.xAxisLength() / (1 + _chart.barPadding()) / numberOfBars);\\n            }\\n\\n            if (_barWidth === Infinity || isNaN(_barWidth) || _barWidth < MIN_BAR_WIDTH) {\\n                _barWidth = MIN_BAR_WIDTH;\\n            }\\n        }\\n    }\\n\\n    _chart.fadeDeselectedArea = function () {\\n        var bars = _chart.chartBodyG().selectAll('rect.bar');\\n        var extent = _chart.brush().extent();\\n\\n        if (_chart.isOrdinal()) {\\n            if (_chart.hasFilter()) {\\n                bars.classed(dc.constants.SELECTED_CLASS, function (d) {\\n                    return _chart.hasFilter(d.x);\\n                });\\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\\n                    return !_chart.hasFilter(d.x);\\n                });\\n            } else {\\n                bars.classed(dc.constants.SELECTED_CLASS, false);\\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\\n            }\\n        } else {\\n            if (!_chart.brushIsEmpty(extent)) {\\n                var start = extent[0];\\n                var end = extent[1];\\n\\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\\n                    return d.x < start || d.x >= end;\\n                });\\n            } else {\\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\\n            }\\n        }\\n    };\\n\\n    /**\\n     * Whether the bar chart will render each bar centered around the data position on the x-axis.\\n     * @method centerBar\\n     * @memberof dc.barChart\\n     * @instance\\n     * @param {Boolean} [centerBar=false]\\n     * @returns {Boolean|dc.barChart}\\n     */\\n    _chart.centerBar = function (centerBar) {\\n        if (!arguments.length) {\\n            return _centerBar;\\n        }\\n        _centerBar = centerBar;\\n        return _chart;\\n    };\\n\\n    dc.override(_chart, 'onClick', function (d) {\\n        _chart._onClick(d.data);\\n    });\\n\\n    /**\\n     * Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.\\n     * Setting this value will also remove any previously set {@link dc.barChart#gap gap}. See the\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md#ordinal_rangeBands d3 docs}\\n     * for a visual description of how the padding is applied.\\n     * @method barPadding\\n     * @memberof dc.barChart\\n     * @instance\\n     * @param {Number} [barPadding=0]\\n     * @returns {Number|dc.barChart}\\n     */\\n    _chart.barPadding = function (barPadding) {\\n        if (!arguments.length) {\\n            return _chart._rangeBandPadding();\\n        }\\n        _chart._rangeBandPadding(barPadding);\\n        _gap = undefined;\\n        return _chart;\\n    };\\n\\n    _chart._useOuterPadding = function () {\\n        return _gap === undefined;\\n    };\\n\\n    /**\\n     * Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.\\n     * Will pad the width by `padding * barWidth` on each side of the chart.\\n     * @method outerPadding\\n     * @memberof dc.barChart\\n     * @instance\\n     * @param {Number} [padding=0.5]\\n     * @returns {Number|dc.barChart}\\n     */\\n    _chart.outerPadding = _chart._outerRangeBandPadding;\\n\\n    /**\\n     * Manually set fixed gap (in px) between bars instead of relying on the default auto-generated\\n     * gap.  By default the bar chart implementation will calculate and set the gap automatically\\n     * based on the number of data points and the length of the x axis.\\n     * @method gap\\n     * @memberof dc.barChart\\n     * @instance\\n     * @param {Number} [gap=2]\\n     * @returns {Number|dc.barChart}\\n     */\\n    _chart.gap = function (gap) {\\n        if (!arguments.length) {\\n            return _gap;\\n        }\\n        _gap = gap;\\n        return _chart;\\n    };\\n\\n    _chart.extendBrush = function () {\\n        var extent = _chart.brush().extent();\\n        if (_chart.round() && (!_centerBar || _alwaysUseRounding)) {\\n            extent[0] = extent.map(_chart.round())[0];\\n            extent[1] = extent.map(_chart.round())[1];\\n\\n            _chart.chartBodyG().select('.brush')\\n                .call(_chart.brush().extent(extent));\\n        }\\n\\n        return extent;\\n    };\\n\\n    /**\\n     * Set or get whether rounding is enabled when bars are centered. If false, using\\n     * rounding with centered bars will result in a warning and rounding will be ignored.  This flag\\n     * has no effect if bars are not {@link dc.barChart#centerBar centered}.\\n     * When using standard d3.js rounding methods, the brush often doesn't align correctly with\\n     * centered bars since the bars are offset.  The rounding function must add an offset to\\n     * compensate, such as in the following example.\\n     * @method alwaysUseRounding\\n     * @memberof dc.barChart\\n     * @instance\\n     * @example\\n     * chart.round(function(n) { return Math.floor(n) + 0.5; });\\n     * @param {Boolean} [alwaysUseRounding=false]\\n     * @returns {Boolean|dc.barChart}\\n     */\\n    _chart.alwaysUseRounding = function (alwaysUseRounding) {\\n        if (!arguments.length) {\\n            return _alwaysUseRounding;\\n        }\\n        _alwaysUseRounding = alwaysUseRounding;\\n        return _chart;\\n    };\\n\\n    function colorFilter (color, inv) {\\n        return function () {\\n            var item = d3.select(this);\\n            var match = item.attr('fill') === color;\\n            return inv ? !match : match;\\n        };\\n    }\\n\\n    _chart.legendHighlight = function (d) {\\n        if (!_chart.isLegendableHidden(d)) {\\n            _chart.g().selectAll('rect.bar')\\n                .classed('highlight', colorFilter(d.color))\\n                .classed('fadeout', colorFilter(d.color, true));\\n        }\\n    };\\n\\n    _chart.legendReset = function () {\\n        _chart.g().selectAll('rect.bar')\\n            .classed('highlight', false)\\n            .classed('fadeout', false);\\n    };\\n\\n    dc.override(_chart, 'xAxisMax', function () {\\n        var max = this._xAxisMax();\\n        if ('resolution' in _chart.xUnits()) {\\n            var res = _chart.xUnits().resolution;\\n            max += res;\\n        }\\n        return max;\\n    });\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * Concrete line/area chart implementation.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\\n * @class lineChart\\n * @memberof dc\\n * @mixes dc.stackMixin\\n * @mixes dc.coordinateGridMixin\\n * @example\\n * // create a line chart under #chart-container1 element using the default global chart group\\n * var chart1 = dc.lineChart('#chart-container1');\\n * // create a line chart under #chart-container2 element using chart group A\\n * var chart2 = dc.lineChart('#chart-container2', 'chartGroupA');\\n * // create a sub-chart under a composite parent chart\\n * var chart3 = dc.lineChart(compositeChart);\\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector}\\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the line\\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\\n * composite chart instance instead.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.lineChart}\\n */\\ndc.lineChart = function (parent, chartGroup) {\\n    var DEFAULT_DOT_RADIUS = 5;\\n    var TOOLTIP_G_CLASS = 'dc-tooltip';\\n    var DOT_CIRCLE_CLASS = 'dot';\\n    var Y_AXIS_REF_LINE_CLASS = 'yRef';\\n    var X_AXIS_REF_LINE_CLASS = 'xRef';\\n    var DEFAULT_DOT_OPACITY = 1e-6;\\n    var LABEL_PADDING = 3;\\n\\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\\n    var _renderArea = false;\\n    var _dotRadius = DEFAULT_DOT_RADIUS;\\n    var _dataPointRadius = null;\\n    var _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\\n    var _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\\n    var _interpolate = 'linear';\\n    var _tension = 0.7;\\n    var _defined;\\n    var _dashStyle;\\n    var _xyTipsOn = true;\\n\\n    _chart.transitionDuration(500);\\n    _chart.transitionDelay(0);\\n    _chart._rangeBandPadding(1);\\n\\n    _chart.plotData = function () {\\n        var chartBody = _chart.chartBodyG();\\n        var layersList = chartBody.select('g.stack-list');\\n\\n        if (layersList.empty()) {\\n            layersList = chartBody.append('g').attr('class', 'stack-list');\\n        }\\n\\n        var layers = layersList.selectAll('g.stack').data(_chart.data());\\n\\n        var layersEnter = layers\\n            .enter()\\n            .append('g')\\n            .attr('class', function (d, i) {\\n                return 'stack ' + '_' + i;\\n            });\\n\\n        drawLine(layersEnter, layers);\\n\\n        drawArea(layersEnter, layers);\\n\\n        drawDots(chartBody, layers);\\n\\n        if (_chart.renderLabel()) {\\n            drawLabels(layers);\\n        }\\n    };\\n\\n    /**\\n     * Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step\\n     * functions, splines, and cubic interpolation.  This is passed to\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#line_interpolate d3.svg.line.interpolate} and\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#area_interpolate d3.svg.area.interpolate},\\n     * where you can find a complete list of valid arguments.\\n     * @method interpolate\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#line_interpolate d3.svg.line.interpolate}\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#area_interpolate d3.svg.area.interpolate}\\n     * @param  {String} [interpolate='linear']\\n     * @returns {String|dc.lineChart}\\n     */\\n    _chart.interpolate = function (interpolate) {\\n        if (!arguments.length) {\\n            return _interpolate;\\n        }\\n        _interpolate = interpolate;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the tension to use for lines drawn, in the range 0 to 1.\\n     * This parameter further customizes the interpolation behavior.  It is passed to\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#line_tension d3.svg.line.tension} and\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#area_tension d3.svg.area.tension}.\\n     * @method tension\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#line_interpolate d3.svg.line.interpolate}\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#area_interpolate d3.svg.area.interpolate}\\n     * @param  {Number} [tension=0.7]\\n     * @returns {Number|dc.lineChart}\\n     */\\n    _chart.tension = function (tension) {\\n        if (!arguments.length) {\\n            return _tension;\\n        }\\n        _tension = tension;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets a function that will determine discontinuities in the line which should be\\n     * skipped: the path will be broken into separate subpaths if some points are undefined.\\n     * This function is passed to\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#line_defined d3.svg.line.defined}\\n     *\\n     * Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write\\n     * custom reduce functions to get this to work, depending on your data. See\\n     * {@link https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248 this GitHub comment}\\n     * for more details and an example.\\n     * @method defined\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#line_defined d3.svg.line.defined}\\n     * @param  {Function} [defined]\\n     * @returns {Function|dc.lineChart}\\n     */\\n    _chart.defined = function (defined) {\\n        if (!arguments.length) {\\n            return _defined;\\n        }\\n        _defined = defined;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set the line's d3 dashstyle. This value becomes the 'stroke-dasharray' of line. Defaults to empty\\n     * array (solid line).\\n     * @method dashStyle\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray stroke-dasharray}\\n     * @example\\n     * // create a Dash Dot Dot Dot\\n     * chart.dashStyle([3,1,1,1]);\\n     * @param  {Array<Number>} [dashStyle=[]]\\n     * @returns {Array<Number>|dc.lineChart}\\n     */\\n    _chart.dashStyle = function (dashStyle) {\\n        if (!arguments.length) {\\n            return _dashStyle;\\n        }\\n        _dashStyle = dashStyle;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set render area flag. If the flag is set to true then the chart will render the area\\n     * beneath each line and the line chart effectively becomes an area chart.\\n     * @method renderArea\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @param  {Boolean} [renderArea=false]\\n     * @returns {Boolean|dc.lineChart}\\n     */\\n    _chart.renderArea = function (renderArea) {\\n        if (!arguments.length) {\\n            return _renderArea;\\n        }\\n        _renderArea = renderArea;\\n        return _chart;\\n    };\\n\\n    function colors (d, i) {\\n        return _chart.getColor.call(d, d.values, i);\\n    }\\n\\n    function drawLine (layersEnter, layers) {\\n        var line = d3.svg.line()\\n            .x(function (d) {\\n                return _chart.x()(d.x);\\n            })\\n            .y(function (d) {\\n                return _chart.y()(d.y + d.y0);\\n            })\\n            .interpolate(_interpolate)\\n            .tension(_tension);\\n        if (_defined) {\\n            line.defined(_defined);\\n        }\\n\\n        var path = layersEnter.append('path')\\n            .attr('class', 'line')\\n            .attr('stroke', colors);\\n        if (_dashStyle) {\\n            path.attr('stroke-dasharray', _dashStyle);\\n        }\\n\\n        dc.transition(layers.select('path.line'), _chart.transitionDuration(), _chart.transitionDelay())\\n            //.ease('linear')\\n            .attr('stroke', colors)\\n            .attr('d', function (d) {\\n                return safeD(line(d.values));\\n            });\\n    }\\n\\n    function drawArea (layersEnter, layers) {\\n        if (_renderArea) {\\n            var area = d3.svg.area()\\n                .x(function (d) {\\n                    return _chart.x()(d.x);\\n                })\\n                .y(function (d) {\\n                    return _chart.y()(d.y + d.y0);\\n                })\\n                .y0(function (d) {\\n                    return _chart.y()(d.y0);\\n                })\\n                .interpolate(_interpolate)\\n                .tension(_tension);\\n            if (_defined) {\\n                area.defined(_defined);\\n            }\\n\\n            layersEnter.append('path')\\n                .attr('class', 'area')\\n                .attr('fill', colors)\\n                .attr('d', function (d) {\\n                    return safeD(area(d.values));\\n                });\\n\\n            dc.transition(layers.select('path.area'), _chart.transitionDuration(), _chart.transitionDelay())\\n                //.ease('linear')\\n                .attr('fill', colors)\\n                .attr('d', function (d) {\\n                    return safeD(area(d.values));\\n                });\\n        }\\n    }\\n\\n    function safeD (d) {\\n        return (!d || d.indexOf('NaN') >= 0) ? 'M0,0' : d;\\n    }\\n\\n    function drawDots (chartBody, layers) {\\n        if (_chart.xyTipsOn() === 'always' || (!_chart.brushOn() && _chart.xyTipsOn())) {\\n            var tooltipListClass = TOOLTIP_G_CLASS + '-list';\\n            var tooltips = chartBody.select('g.' + tooltipListClass);\\n\\n            if (tooltips.empty()) {\\n                tooltips = chartBody.append('g').attr('class', tooltipListClass);\\n            }\\n\\n            layers.each(function (d, layerIndex) {\\n                var points = d.values;\\n                if (_defined) {\\n                    points = points.filter(_defined);\\n                }\\n\\n                var g = tooltips.select('g.' + TOOLTIP_G_CLASS + '._' + layerIndex);\\n                if (g.empty()) {\\n                    g = tooltips.append('g').attr('class', TOOLTIP_G_CLASS + ' _' + layerIndex);\\n                }\\n\\n                createRefLines(g);\\n\\n                var dots = g.selectAll('circle.' + DOT_CIRCLE_CLASS)\\n                    .data(points, dc.pluck('x'));\\n\\n                dots.enter()\\n                    .append('circle')\\n                    .attr('class', DOT_CIRCLE_CLASS)\\n                    .attr('r', getDotRadius())\\n                    .style('fill-opacity', _dataPointFillOpacity)\\n                    .style('stroke-opacity', _dataPointStrokeOpacity)\\n                    .attr('fill', _chart.getColor)\\n                    .on('mousemove', function () {\\n                        var dot = d3.select(this);\\n                        showDot(dot);\\n                        showRefLines(dot, g);\\n                    })\\n                    .on('mouseout', function () {\\n                        var dot = d3.select(this);\\n                        hideDot(dot);\\n                        hideRefLines(g);\\n                    });\\n\\n                dots.call(renderTitle, d);\\n\\n                dc.transition(dots, _chart.transitionDuration())\\n                    .attr('cx', function (d) {\\n                        return dc.utils.safeNumber(_chart.x()(d.x));\\n                    })\\n                    .attr('cy', function (d) {\\n                        return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\\n                    })\\n                    .attr('fill', _chart.getColor);\\n\\n                dots.exit().remove();\\n            });\\n        }\\n    }\\n\\n    _chart.label(function (d) {\\n        return dc.utils.printSingleValue(d.y0 + d.y);\\n    }, false);\\n\\n    function drawLabels (layers) {\\n        layers.each(function (d, layerIndex) {\\n            var layer = d3.select(this);\\n            var labels = layer.selectAll('text.lineLabel')\\n                .data(d.values, dc.pluck('x'));\\n\\n            labels.enter()\\n                .append('text')\\n                .attr('class', 'lineLabel')\\n                .attr('text-anchor', 'middle');\\n\\n            dc.transition(labels, _chart.transitionDuration())\\n                .attr('x', function (d) {\\n                    return dc.utils.safeNumber(_chart.x()(d.x));\\n                })\\n                .attr('y', function (d) {\\n                    var y = _chart.y()(d.y + d.y0) - LABEL_PADDING;\\n                    return dc.utils.safeNumber(y);\\n                })\\n                .text(function (d) {\\n                    return _chart.label()(d);\\n                });\\n\\n            dc.transition(labels.exit(), _chart.transitionDuration())\\n                .attr('height', 0)\\n                .remove();\\n        });\\n    }\\n\\n    function createRefLines (g) {\\n        var yRefLine = g.select('path.' + Y_AXIS_REF_LINE_CLASS).empty() ?\\n            g.append('path').attr('class', Y_AXIS_REF_LINE_CLASS) : g.select('path.' + Y_AXIS_REF_LINE_CLASS);\\n        yRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\\n\\n        var xRefLine = g.select('path.' + X_AXIS_REF_LINE_CLASS).empty() ?\\n            g.append('path').attr('class', X_AXIS_REF_LINE_CLASS) : g.select('path.' + X_AXIS_REF_LINE_CLASS);\\n        xRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\\n    }\\n\\n    function showDot (dot) {\\n        dot.style('fill-opacity', 0.8);\\n        dot.style('stroke-opacity', 0.8);\\n        dot.attr('r', _dotRadius);\\n        return dot;\\n    }\\n\\n    function showRefLines (dot, g) {\\n        var x = dot.attr('cx');\\n        var y = dot.attr('cy');\\n        var yAxisX = (_chart._yAxisX() - _chart.margins().left);\\n        var yAxisRefPathD = 'M' + yAxisX + ' ' + y + 'L' + (x) + ' ' + (y);\\n        var xAxisRefPathD = 'M' + x + ' ' + _chart.yAxisHeight() + 'L' + x + ' ' + y;\\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', '').attr('d', yAxisRefPathD);\\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', '').attr('d', xAxisRefPathD);\\n    }\\n\\n    function getDotRadius () {\\n        return _dataPointRadius || _dotRadius;\\n    }\\n\\n    function hideDot (dot) {\\n        dot.style('fill-opacity', _dataPointFillOpacity)\\n            .style('stroke-opacity', _dataPointStrokeOpacity)\\n            .attr('r', getDotRadius());\\n    }\\n\\n    function hideRefLines (g) {\\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', 'none');\\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', 'none');\\n    }\\n\\n    function renderTitle (dot, d) {\\n        if (_chart.renderTitle()) {\\n            dot.select('title').remove();\\n            dot.append('title').text(dc.pluck('data', _chart.title(d.name)));\\n        }\\n    }\\n\\n    /**\\n     * Turn on/off the mouseover behavior of an individual data point which renders a circle and x/y axis\\n     * dashed lines back to each respective axis.  This is ignored if the chart\\n     * {@link dc.coordinateGridMixin#brushOn brush} is on\\n     * @method xyTipsOn\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @param  {Boolean} [xyTipsOn=false]\\n     * @returns {Boolean|dc.lineChart}\\n     */\\n    _chart.xyTipsOn = function (xyTipsOn) {\\n        if (!arguments.length) {\\n            return _xyTipsOn;\\n        }\\n        _xyTipsOn = xyTipsOn;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the radius (in px) for dots displayed on the data points.\\n     * @method dotRadius\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @param  {Number} [dotRadius=5]\\n     * @returns {Number|dc.lineChart}\\n     */\\n    _chart.dotRadius = function (dotRadius) {\\n        if (!arguments.length) {\\n            return _dotRadius;\\n        }\\n        _dotRadius = dotRadius;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Always show individual dots for each datapoint.\\n     *\\n     * If `options` is falsy, it disables data point rendering. If no `options` are provided, the\\n     * current `options` values are instead returned.\\n     * @method renderDataPoints\\n     * @memberof dc.lineChart\\n     * @instance\\n     * @example\\n     * chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.8})\\n     * @param  {{fillOpacity: Number, strokeOpacity: Number, radius: Number}} [options={fillOpacity: 0.8, strokeOpacity: 0.8, radius: 2}]\\n     * @returns {{fillOpacity: Number, strokeOpacity: Number, radius: Number}|dc.lineChart}\\n     */\\n    _chart.renderDataPoints = function (options) {\\n        if (!arguments.length) {\\n            return {\\n                fillOpacity: _dataPointFillOpacity,\\n                strokeOpacity: _dataPointStrokeOpacity,\\n                radius: _dataPointRadius\\n            };\\n        } else if (!options) {\\n            _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\\n            _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\\n            _dataPointRadius = null;\\n        } else {\\n            _dataPointFillOpacity = options.fillOpacity || 0.8;\\n            _dataPointStrokeOpacity = options.strokeOpacity || 0.8;\\n            _dataPointRadius = options.radius || 2;\\n        }\\n        return _chart;\\n    };\\n\\n    function colorFilter (color, dashstyle, inv) {\\n        return function () {\\n            var item = d3.select(this);\\n            var match = (item.attr('stroke') === color &&\\n                item.attr('stroke-dasharray') === ((dashstyle instanceof Array) ?\\n                    dashstyle.join(',') : null)) || item.attr('fill') === color;\\n            return inv ? !match : match;\\n        };\\n    }\\n\\n    _chart.legendHighlight = function (d) {\\n        if (!_chart.isLegendableHidden(d)) {\\n            _chart.g().selectAll('path.line, path.area')\\n                .classed('highlight', colorFilter(d.color, d.dashstyle))\\n                .classed('fadeout', colorFilter(d.color, d.dashstyle, true));\\n        }\\n    };\\n\\n    _chart.legendReset = function () {\\n        _chart.g().selectAll('path.line, path.area')\\n            .classed('highlight', false)\\n            .classed('fadeout', false);\\n    };\\n\\n    dc.override(_chart, 'legendables', function () {\\n        var legendables = _chart._legendables();\\n        if (!_dashStyle) {\\n            return legendables;\\n        }\\n        return legendables.map(function (l) {\\n            l.dashstyle = _dashStyle;\\n            return l;\\n        });\\n    });\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * The data count widget is a simple widget designed to display the number of records selected by the\\n * current filters out of the total number of records in the data set. Once created the data count widget\\n * will automatically update the text content of child elements with the following classes:\\n *\\n * * `.total-count` - total number of records\\n * * `.filter-count` - number of records matched by the current filters\\n *\\n * Note: this widget works best for the specific case of showing the number of records out of a\\n * total. If you want a more general-purpose numeric display, please use the\\n * {@link dc.numberDisplay} widget instead.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * @class dataCount\\n * @memberof dc\\n * @mixes dc.baseMixin\\n * @example\\n * var ndx = crossfilter(data);\\n * var all = ndx.groupAll();\\n *\\n * dc.dataCount('.dc-data-count')\\n *     .dimension(ndx)\\n *     .group(all);\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.dataCount}\\n */\\ndc.dataCount = function (parent, chartGroup) {\\n    var _formatNumber = d3.format(',d');\\n    var _chart = dc.baseMixin({});\\n    var _html = {some: '', all: ''};\\n\\n    /**\\n     * Gets or sets an optional object specifying HTML templates to use depending how many items are\\n     * selected. The text `%total-count` will replaced with the total number of records, and the text\\n     * `%filter-count` will be replaced with the number of selected records.\\n     * - all: HTML template to use if all items are selected\\n     * - some: HTML template to use if not all items are selected\\n     * @method html\\n     * @memberof dc.dataCount\\n     * @instance\\n     * @example\\n     * counter.html({\\n     *      some: '%filter-count out of %total-count records selected',\\n     *      all: 'All records selected. Click on charts to apply filters'\\n     * })\\n     * @param {{some:String, all: String}} [options]\\n     * @returns {{some:String, all: String}|dc.dataCount}\\n     */\\n    _chart.html = function (options) {\\n        if (!arguments.length) {\\n            return _html;\\n        }\\n        if (options.all) {\\n            _html.all = options.all;\\n        }\\n        if (options.some) {\\n            _html.some = options.some;\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets an optional function to format the filter count and total count.\\n     * @method formatNumber\\n     * @memberof dc.dataCount\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md d3.format}\\n     * @example\\n     * counter.formatNumber(d3.format('.2g'))\\n     * @param {Function} [formatter=d3.format('.2g')]\\n     * @returns {Function|dc.dataCount}\\n     */\\n    _chart.formatNumber = function (formatter) {\\n        if (!arguments.length) {\\n            return _formatNumber;\\n        }\\n        _formatNumber = formatter;\\n        return _chart;\\n    };\\n\\n    _chart._doRender = function () {\\n        var tot = _chart.dimension().size(),\\n            val = _chart.group().value();\\n        var all = _formatNumber(tot);\\n        var selected = _formatNumber(val);\\n\\n        if ((tot === val) && (_html.all !== '')) {\\n            _chart.root().html(_html.all.replace('%total-count', all).replace('%filter-count', selected));\\n        } else if (_html.some !== '') {\\n            _chart.root().html(_html.some.replace('%total-count', all).replace('%filter-count', selected));\\n        } else {\\n            _chart.selectAll('.total-count').text(all);\\n            _chart.selectAll('.filter-count').text(selected);\\n        }\\n        return _chart;\\n    };\\n\\n    _chart._doRedraw = function () {\\n        return _chart._doRender();\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * The data table is a simple widget designed to list crossfilter focused data set (rows being\\n * filtered) in a good old tabular fashion.\\n *\\n * Note: Unlike other charts, the data table (and data grid chart) use the {@link dc.dataTable#group group} attribute as a\\n * keying function for {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#nest nesting} the data\\n * together in groups.  Do not pass in a crossfilter group as this will not work.\\n *\\n * Another interesting feature of the data table is that you can pass a crossfilter group to the `dimension`, as\\n * long as you specify the {@link dc.dataTable#order order} as `d3.descending`, since the data\\n * table will use `dimension.top()` to fetch the data in that case, and the method is equally\\n * supported on the crossfilter group as the crossfilter dimension.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * - {@link http://dc-js.github.io/dc.js/examples/table-on-aggregated-data.html dataTable on a crossfilter group}\\n * ({@link https://github.com/dc-js/dc.js/blob/develop/web/examples/table-on-aggregated-data.html source})\\n * @class dataTable\\n * @memberof dc\\n * @mixes dc.baseMixin\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.dataTable}\\n */\\ndc.dataTable = function (parent, chartGroup) {\\n    var LABEL_CSS_CLASS = 'dc-table-label';\\n    var ROW_CSS_CLASS = 'dc-table-row';\\n    var COLUMN_CSS_CLASS = 'dc-table-column';\\n    var GROUP_CSS_CLASS = 'dc-table-group';\\n    var HEAD_CSS_CLASS = 'dc-table-head';\\n\\n    var _chart = dc.baseMixin({});\\n\\n    var _size = 25;\\n    var _columns = [];\\n    var _sortBy = function (d) {\\n        return d;\\n    };\\n    var _order = d3.ascending;\\n    var _beginSlice = 0;\\n    var _endSlice;\\n    var _showGroups = true;\\n\\n    _chart._doRender = function () {\\n        _chart.selectAll('tbody').remove();\\n\\n        renderRows(renderGroups());\\n\\n        return _chart;\\n    };\\n\\n    _chart._doColumnValueFormat = function (v, d) {\\n        return ((typeof v === 'function') ?\\n                v(d) :                          // v as function\\n                ((typeof v === 'string') ?\\n                 d[v] :                         // v is field name string\\n                 v.format(d)                        // v is Object, use fn (element 2)\\n                )\\n               );\\n    };\\n\\n    _chart._doColumnHeaderFormat = function (d) {\\n        // if 'function', convert to string representation\\n        // show a string capitalized\\n        // if an object then display its label string as-is.\\n        return (typeof d === 'function') ?\\n                _chart._doColumnHeaderFnToString(d) :\\n                ((typeof d === 'string') ?\\n                 _chart._doColumnHeaderCapitalize(d) : String(d.label));\\n    };\\n\\n    _chart._doColumnHeaderCapitalize = function (s) {\\n        // capitalize\\n        return s.charAt(0).toUpperCase() + s.slice(1);\\n    };\\n\\n    _chart._doColumnHeaderFnToString = function (f) {\\n        // columnString(f) {\\n        var s = String(f);\\n        var i1 = s.indexOf('return ');\\n        if (i1 >= 0) {\\n            var i2 = s.lastIndexOf(';');\\n            if (i2 >= 0) {\\n                s = s.substring(i1 + 7, i2);\\n                var i3 = s.indexOf('numberFormat');\\n                if (i3 >= 0) {\\n                    s = s.replace('numberFormat', '');\\n                }\\n            }\\n        }\\n        return s;\\n    };\\n\\n    function renderGroups () {\\n        // The 'original' example uses all 'functions'.\\n        // If all 'functions' are used, then don't remove/add a header, and leave\\n        // the html alone. This preserves the functionality of earlier releases.\\n        // A 2nd option is a string representing a field in the data.\\n        // A third option is to supply an Object such as an array of 'information', and\\n        // supply your own _doColumnHeaderFormat and _doColumnValueFormat functions to\\n        // create what you need.\\n        var bAllFunctions = true;\\n        _columns.forEach(function (f) {\\n            bAllFunctions = bAllFunctions & (typeof f === 'function');\\n        });\\n\\n        if (!bAllFunctions) {\\n            // ensure one thead\\n            var thead = _chart.selectAll('thead').data([0]);\\n            thead.enter().append('thead');\\n            thead.exit().remove();\\n\\n            // with one tr\\n            var headrow = thead.selectAll('tr').data([0]);\\n            headrow.enter().append('tr');\\n            headrow.exit().remove();\\n\\n            // with a th for each column\\n            var headcols = headrow.selectAll('th')\\n                .data(_columns);\\n            headcols.enter().append('th');\\n            headcols.exit().remove();\\n\\n            headcols\\n                .attr('class', HEAD_CSS_CLASS)\\n                    .html(function (d) {\\n                        return (_chart._doColumnHeaderFormat(d));\\n\\n                    });\\n        }\\n\\n        var groups = _chart.root().selectAll('tbody')\\n            .data(nestEntries(), function (d) {\\n                return _chart.keyAccessor()(d);\\n            });\\n\\n        var rowGroup = groups\\n            .enter()\\n            .append('tbody');\\n\\n        if (_showGroups === true) {\\n            rowGroup\\n                .append('tr')\\n                .attr('class', GROUP_CSS_CLASS)\\n                    .append('td')\\n                    .attr('class', LABEL_CSS_CLASS)\\n                    .attr('colspan', _columns.length)\\n                    .html(function (d) {\\n                        return _chart.keyAccessor()(d);\\n                    });\\n        }\\n\\n        groups.exit().remove();\\n\\n        return rowGroup;\\n    }\\n\\n    function nestEntries () {\\n        var entries;\\n        if (_order === d3.ascending) {\\n            entries = _chart.dimension().bottom(_size);\\n        } else {\\n            entries = _chart.dimension().top(_size);\\n        }\\n\\n        return d3.nest()\\n            .key(_chart.group())\\n            .sortKeys(_order)\\n            .entries(entries.sort(function (a, b) {\\n                return _order(_sortBy(a), _sortBy(b));\\n            }).slice(_beginSlice, _endSlice));\\n    }\\n\\n    function renderRows (groups) {\\n        var rows = groups.order()\\n            .selectAll('tr.' + ROW_CSS_CLASS)\\n            .data(function (d) {\\n                return d.values;\\n            });\\n\\n        var rowEnter = rows.enter()\\n            .append('tr')\\n            .attr('class', ROW_CSS_CLASS);\\n\\n        _columns.forEach(function (v, i) {\\n            rowEnter.append('td')\\n                .attr('class', COLUMN_CSS_CLASS + ' _' + i)\\n                .html(function (d) {\\n                    return _chart._doColumnValueFormat(v, d);\\n                });\\n        });\\n\\n        rows.exit().remove();\\n\\n        return rows;\\n    }\\n\\n    _chart._doRedraw = function () {\\n        return _chart._doRender();\\n    };\\n\\n    /**\\n     * Get or set the group function for the data table. The group function takes a data row and\\n     * returns the key to specify to {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_nest d3.nest}\\n     * to split rows into groups.\\n     *\\n     * Do not pass in a crossfilter group as this will not work.\\n     * @method group\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @example\\n     * // group rows by the value of their field\\n     * chart\\n     *     .group(function(d) { return d.field; })\\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\\n     * @returns {Function|dc.dataTable}\\n     */\\n\\n    /**\\n     * Get or set the table size which determines the number of rows displayed by the widget.\\n     * @method size\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @param {Number} [size=25]\\n     * @returns {Number|dc.dataTable}\\n     */\\n    _chart.size = function (size) {\\n        if (!arguments.length) {\\n            return _size;\\n        }\\n        _size = size;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the index of the beginning slice which determines which entries get displayed\\n     * by the widget. Useful when implementing pagination.\\n     *\\n     * Note: the sortBy function will determine how the rows are ordered for pagination purposes.\\n\\n     * See the {@link http://dc-js.github.io/dc.js/examples/table-pagination.html table pagination example}\\n     * to see how to implement the pagination user interface using `beginSlice` and `endSlice`.\\n     * @method beginSlice\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @param {Number} [beginSlice=0]\\n     * @returns {Number|dc.dataTable}\\n     */\\n    _chart.beginSlice = function (beginSlice) {\\n        if (!arguments.length) {\\n            return _beginSlice;\\n        }\\n        _beginSlice = beginSlice;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the index of the end slice which determines which entries get displayed by the\\n     * widget. Useful when implementing pagination. See {@link dc.dataTable#beginSlice `beginSlice`} for more information.\\n     * @method endSlice\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @param {Number|undefined} [endSlice=undefined]\\n     * @returns {Number|dc.dataTable}\\n     */\\n    _chart.endSlice = function (endSlice) {\\n        if (!arguments.length) {\\n            return _endSlice;\\n        }\\n        _endSlice = endSlice;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set column functions. The data table widget supports several methods of specifying the\\n     * columns to display.\\n     *\\n     * The original method uses an array of functions to generate dynamic columns. Column functions\\n     * are simple javascript functions with only one input argument `d` which represents a row in\\n     * the data set. The return value of these functions will be used to generate the content for\\n     * each cell. However, this method requires the HTML for the table to have a fixed set of column\\n     * headers.\\n     *\\n     * <pre><code>chart.columns([\\n     *     function(d) { return d.date; },\\n     *     function(d) { return d.open; },\\n     *     function(d) { return d.close; },\\n     *     function(d) { return numberFormat(d.close - d.open); },\\n     *     function(d) { return d.volume; }\\n     * ]);\\n     * </code></pre>\\n     *\\n     * In the second method, you can list the columns to read from the data without specifying it as\\n     * a function, except where necessary (ie, computed columns).  Note the data element name is\\n     * capitalized when displayed in the table header. You can also mix in functions as necessary,\\n     * using the third `{label, format}` form, as shown below.\\n     *\\n     * <pre><code>chart.columns([\\n     *     \\\"date\\\",    // d[\\\"date\\\"], ie, a field accessor; capitalized automatically\\n     *     \\\"open\\\",    // ...\\n     *     \\\"close\\\",   // ...\\n     *     {\\n     *         label: \\\"Change\\\",\\n     *         format: function (d) {\\n     *             return numberFormat(d.close - d.open);\\n     *         }\\n     *     },\\n     *     \\\"volume\\\"   // d[\\\"volume\\\"], ie, a field accessor; capitalized automatically\\n     * ]);\\n     * </code></pre>\\n     *\\n     * In the third example, we specify all fields using the `{label, format}` method:\\n     * <pre><code>chart.columns([\\n     *     {\\n     *         label: \\\"Date\\\",\\n     *         format: function (d) { return d.date; }\\n     *     },\\n     *     {\\n     *         label: \\\"Open\\\",\\n     *         format: function (d) { return numberFormat(d.open); }\\n     *     },\\n     *     {\\n     *         label: \\\"Close\\\",\\n     *         format: function (d) { return numberFormat(d.close); }\\n     *     },\\n     *     {\\n     *         label: \\\"Change\\\",\\n     *         format: function (d) { return numberFormat(d.close - d.open); }\\n     *     },\\n     *     {\\n     *         label: \\\"Volume\\\",\\n     *         format: function (d) { return d.volume; }\\n     *     }\\n     * ]);\\n     * </code></pre>\\n     *\\n     * You may wish to override the dataTable functions `_doColumnHeaderCapitalize` and\\n     * `_doColumnHeaderFnToString`, which are used internally to translate the column information or\\n     * function into a displayed header. The first one is used on the \\\"string\\\" column specifier; the\\n     * second is used to transform a stringified function into something displayable. For the Stock\\n     * example, the function for Change becomes the table header **d.close - d.open**.\\n     *\\n     * Finally, you can even specify a completely different form of column definition. To do this,\\n     * override `_chart._doColumnHeaderFormat` and `_chart._doColumnValueFormat` Be aware that\\n     * fields without numberFormat specification will be displayed just as they are stored in the\\n     * data, unformatted.\\n     * @method columns\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @param {Array<Function>} [columns=[]]\\n     * @returns {Array<Function>}|dc.dataTable}\\n     */\\n    _chart.columns = function (columns) {\\n        if (!arguments.length) {\\n            return _columns;\\n        }\\n        _columns = columns;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set sort-by function. This function works as a value accessor at row level and returns a\\n     * particular field to be sorted by.\\n     * @method sortBy\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @example\\n     * chart.sortBy(function(d) {\\n     *     return d.date;\\n     * });\\n     * @param {Function} [sortBy=identity function]\\n     * @returns {Function|dc.dataTable}\\n     */\\n    _chart.sortBy = function (sortBy) {\\n        if (!arguments.length) {\\n            return _sortBy;\\n        }\\n        _sortBy = sortBy;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set sort order. If the order is `d3.ascending`, the data table will use\\n     * `dimension().bottom()` to fetch the data; otherwise it will use `dimension().top()`\\n     * @method order\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_ascending d3.ascending}\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_descending d3.descending}\\n     * @example\\n     * chart.order(d3.descending);\\n     * @param {Function} [order=d3.ascending]\\n     * @returns {Function|dc.dataTable}\\n     */\\n    _chart.order = function (order) {\\n        if (!arguments.length) {\\n            return _order;\\n        }\\n        _order = order;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set if group rows will be shown. The dataTable {@link dc.dataTable#group group}\\n     * function must be specified even if groups are not shown.\\n     * @method showGroups\\n     * @memberof dc.dataTable\\n     * @instance\\n     * @example\\n     * chart\\n     *     .group([value], [name])\\n     *     .showGroups(true|false);\\n     * @param {Boolean} [showGroups=true]\\n     * @returns {Boolean|dc.dataTable}\\n     */\\n    _chart.showGroups = function (showGroups) {\\n        if (!arguments.length) {\\n            return _showGroups;\\n        }\\n        _showGroups = showGroups;\\n        return _chart;\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * Data grid is a simple widget designed to list the filtered records, providing\\n * a simple way to define how the items are displayed.\\n *\\n * Note: Unlike other charts, the data grid chart (and data table) use the {@link dc.dataGrid#group group} attribute as a keying function\\n * for {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#nest nesting} the data together in groups.\\n * Do not pass in a crossfilter group as this will not work.\\n *\\n * Examples:\\n * - {@link http://europarl.me/dc.js/web/ep/index.html List of members of the european parliament}\\n * @class dataGrid\\n * @memberof dc\\n * @mixes dc.baseMixin\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.dataGrid}\\n */\\ndc.dataGrid = function (parent, chartGroup) {\\n    var LABEL_CSS_CLASS = 'dc-grid-label';\\n    var ITEM_CSS_CLASS = 'dc-grid-item';\\n    var GROUP_CSS_CLASS = 'dc-grid-group';\\n    var GRID_CSS_CLASS = 'dc-grid-top';\\n\\n    var _chart = dc.baseMixin({});\\n\\n    var _size = 999; // shouldn't be needed, but you might\\n    var _html = function (d) { return 'you need to provide an html() handling param:  ' + JSON.stringify(d); };\\n    var _sortBy = function (d) {\\n        return d;\\n    };\\n    var _order = d3.ascending;\\n    var _beginSlice = 0, _endSlice;\\n\\n    var _htmlGroup = function (d) {\\n        return '<div class=\\\\'' + GROUP_CSS_CLASS + '\\\\'><h1 class=\\\\'' + LABEL_CSS_CLASS + '\\\\'>' +\\n            _chart.keyAccessor()(d) + '</h1></div>';\\n    };\\n\\n    _chart._doRender = function () {\\n        _chart.selectAll('div.' + GRID_CSS_CLASS).remove();\\n\\n        renderItems(renderGroups());\\n\\n        return _chart;\\n    };\\n\\n    function renderGroups () {\\n        var groups = _chart.root().selectAll('div.' + GRID_CSS_CLASS)\\n                .data(nestEntries(), function (d) {\\n                    return _chart.keyAccessor()(d);\\n                });\\n\\n        var itemGroup = groups\\n                .enter()\\n                .append('div')\\n                .attr('class', GRID_CSS_CLASS);\\n\\n        if (_htmlGroup) {\\n            itemGroup\\n                .html(function (d) {\\n                    return _htmlGroup(d);\\n                });\\n        }\\n\\n        groups.exit().remove();\\n        return itemGroup;\\n    }\\n\\n    function nestEntries () {\\n        var entries = _chart.dimension().top(_size);\\n\\n        return d3.nest()\\n            .key(_chart.group())\\n            .sortKeys(_order)\\n            .entries(entries.sort(function (a, b) {\\n                return _order(_sortBy(a), _sortBy(b));\\n            }).slice(_beginSlice, _endSlice));\\n    }\\n\\n    function renderItems (groups) {\\n        var items = groups.order()\\n                .selectAll('div.' + ITEM_CSS_CLASS)\\n                .data(function (d) {\\n                    return d.values;\\n                });\\n\\n        items.enter()\\n            .append('div')\\n            .attr('class', ITEM_CSS_CLASS)\\n            .html(function (d) {\\n                return _html(d);\\n            });\\n\\n        items.exit().remove();\\n\\n        return items;\\n    }\\n\\n    _chart._doRedraw = function () {\\n        return _chart._doRender();\\n    };\\n\\n    /**\\n     * Get or set the group function for the data grid. The group function takes a data row and\\n     * returns the key to specify to {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_nest d3.nest}\\n     * to split rows into groups.\\n     *\\n     * Do not pass in a crossfilter group as this will not work.\\n     * @method group\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @example\\n     * // group rows by the value of their field\\n     * chart\\n     *     .group(function(d) { return d.field; })\\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\\n     * @returns {Function|dc.dataTable}\\n     */\\n\\n    /**\\n     * Get or set the index of the beginning slice which determines which entries get displayed by the widget.\\n     * Useful when implementing pagination.\\n     * @method beginSlice\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @param {Number} [beginSlice=0]\\n     * @returns {Number|dc.dataGrid}\\n     */\\n    _chart.beginSlice = function (beginSlice) {\\n        if (!arguments.length) {\\n            return _beginSlice;\\n        }\\n        _beginSlice = beginSlice;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the index of the end slice which determines which entries get displayed by the widget.\\n     * Useful when implementing pagination.\\n     * @method endSlice\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @param {Number} [endSlice]\\n     * @returns {Number|dc.dataGrid}\\n     */\\n    _chart.endSlice = function (endSlice) {\\n        if (!arguments.length) {\\n            return _endSlice;\\n        }\\n        _endSlice = endSlice;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the grid size which determines the number of items displayed by the widget.\\n     * @method size\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @param {Number} [size=999]\\n     * @returns {Number|dc.dataGrid}\\n     */\\n    _chart.size = function (size) {\\n        if (!arguments.length) {\\n            return _size;\\n        }\\n        _size = size;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the function that formats an item. The data grid widget uses a\\n     * function to generate dynamic html. Use your favourite templating engine or\\n     * generate the string directly.\\n     * @method html\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @example\\n     * chart.html(function (d) { return '<div class='item '+data.exampleCategory+''>'+data.exampleString+'</div>';});\\n     * @param {Function} [html]\\n     * @returns {Function|dc.dataGrid}\\n     */\\n    _chart.html = function (html) {\\n        if (!arguments.length) {\\n            return _html;\\n        }\\n        _html = html;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the function that formats a group label.\\n     * @method htmlGroup\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @example\\n     * chart.htmlGroup (function (d) { return '<h2>'.d.key . 'with ' . d.values.length .' items</h2>'});\\n     * @param {Function} [htmlGroup]\\n     * @returns {Function|dc.dataGrid}\\n     */\\n    _chart.htmlGroup = function (htmlGroup) {\\n        if (!arguments.length) {\\n            return _htmlGroup;\\n        }\\n        _htmlGroup = htmlGroup;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set sort-by function. This function works as a value accessor at the item\\n     * level and returns a particular field to be sorted.\\n     * @method sortBy\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @example\\n     * chart.sortBy(function(d) {\\n     *     return d.date;\\n     * });\\n     * @param {Function} [sortByFunction]\\n     * @returns {Function|dc.dataGrid}\\n     */\\n    _chart.sortBy = function (sortByFunction) {\\n        if (!arguments.length) {\\n            return _sortBy;\\n        }\\n        _sortBy = sortByFunction;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set sort the order function.\\n     * @method order\\n     * @memberof dc.dataGrid\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_ascending d3.ascending}\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_descending d3.descending}\\n     * @example\\n     * chart.order(d3.descending);\\n     * @param {Function} [order=d3.ascending]\\n     * @returns {Function|dc.dataGrid}\\n     */\\n    _chart.order = function (order) {\\n        if (!arguments.length) {\\n            return _order;\\n        }\\n        _order = order;\\n        return _chart;\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * A concrete implementation of a general purpose bubble chart that allows data visualization using the\\n * following dimensions:\\n * - x axis position\\n * - y axis position\\n * - bubble radius\\n * - color\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\\n * @class bubbleChart\\n * @memberof dc\\n * @mixes dc.bubbleMixin\\n * @mixes dc.coordinateGridMixin\\n * @example\\n * // create a bubble chart under #chart-container1 element using the default global chart group\\n * var bubbleChart1 = dc.bubbleChart('#chart-container1');\\n * // create a bubble chart under #chart-container2 element using chart group A\\n * var bubbleChart2 = dc.bubbleChart('#chart-container2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.bubbleChart}\\n */\\ndc.bubbleChart = function (parent, chartGroup) {\\n    var _chart = dc.bubbleMixin(dc.coordinateGridMixin({}));\\n\\n    _chart.transitionDuration(750);\\n\\n    _chart.transitionDelay(0);\\n\\n    var bubbleLocator = function (d) {\\n        return 'translate(' + (bubbleX(d)) + ',' + (bubbleY(d)) + ')';\\n    };\\n\\n    _chart.plotData = function () {\\n        _chart.calculateRadiusDomain();\\n        _chart.r().range([_chart.MIN_RADIUS, _chart.xAxisLength() * _chart.maxBubbleRelativeSize()]);\\n\\n        var data = _chart.data();\\n        var bubbleG = _chart.chartBodyG().selectAll('g.' + _chart.BUBBLE_NODE_CLASS)\\n                .data(data, function (d) { return d.key; });\\n        if (_chart.sortBubbleSize()) {\\n            // update dom order based on sort\\n            bubbleG.order();\\n        }\\n\\n        renderNodes(bubbleG);\\n\\n        updateNodes(bubbleG);\\n\\n        removeNodes(bubbleG);\\n\\n        _chart.fadeDeselectedArea();\\n    };\\n\\n    function renderNodes (bubbleG) {\\n        var bubbleGEnter = bubbleG.enter().append('g');\\n\\n        bubbleGEnter\\n            .attr('class', _chart.BUBBLE_NODE_CLASS)\\n            .attr('transform', bubbleLocator)\\n            .append('circle').attr('class', function (d, i) {\\n                return _chart.BUBBLE_CLASS + ' _' + i;\\n            })\\n            .on('click', _chart.onClick)\\n            .attr('fill', _chart.getColor)\\n            .attr('r', 0);\\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\\n            .select('circle.' + _chart.BUBBLE_CLASS)\\n            .attr('r', function (d) {\\n                return _chart.bubbleR(d);\\n            })\\n            .attr('opacity', function (d) {\\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\\n            });\\n\\n        _chart._doRenderLabel(bubbleGEnter);\\n\\n        _chart._doRenderTitles(bubbleGEnter);\\n    }\\n\\n    function updateNodes (bubbleG) {\\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', bubbleLocator)\\n            .select('circle.' + _chart.BUBBLE_CLASS)\\n            .attr('fill', _chart.getColor)\\n            .attr('r', function (d) {\\n                return _chart.bubbleR(d);\\n            })\\n            .attr('opacity', function (d) {\\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\\n            });\\n\\n        _chart.doUpdateLabels(bubbleG);\\n        _chart.doUpdateTitles(bubbleG);\\n    }\\n\\n    function removeNodes (bubbleG) {\\n        bubbleG.exit().remove();\\n    }\\n\\n    function bubbleX (d) {\\n        var x = _chart.x()(_chart.keyAccessor()(d));\\n        if (isNaN(x)) {\\n            x = 0;\\n        }\\n        return x;\\n    }\\n\\n    function bubbleY (d) {\\n        var y = _chart.y()(_chart.valueAccessor()(d));\\n        if (isNaN(y)) {\\n            y = 0;\\n        }\\n        return y;\\n    }\\n\\n    _chart.renderBrush = function () {\\n        // override default x axis brush from parent chart\\n    };\\n\\n    _chart.redrawBrush = function () {\\n        // override default x axis brush from parent chart\\n        _chart.fadeDeselectedArea();\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * Composite charts are a special kind of chart that render multiple charts on the same Coordinate\\n * Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to\\n * achieve some quite flexible charting effects.\\n * @class compositeChart\\n * @memberof dc\\n * @mixes dc.coordinateGridMixin\\n * @example\\n * // create a composite chart under #chart-container1 element using the default global chart group\\n * var compositeChart1 = dc.compositeChart('#chart-container1');\\n * // create a composite chart under #chart-container2 element using chart group A\\n * var compositeChart2 = dc.compositeChart('#chart-container2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.compositeChart}\\n */\\ndc.compositeChart = function (parent, chartGroup) {\\n\\n    var SUB_CHART_CLASS = 'sub';\\n    var DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;\\n\\n    var _chart = dc.coordinateGridMixin({});\\n    var _children = [];\\n\\n    var _childOptions = {};\\n\\n    var _shareColors = false,\\n        _shareTitle = true,\\n        _alignYAxes = false;\\n\\n    var _rightYAxis = d3.svg.axis(),\\n        _rightYAxisLabel = 0,\\n        _rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING,\\n        _rightY,\\n        _rightAxisGridLines = false;\\n\\n    _chart._mandatoryAttributes([]);\\n    _chart.transitionDuration(500);\\n    _chart.transitionDelay(0);\\n\\n    dc.override(_chart, '_generateG', function () {\\n        var g = this.__generateG();\\n\\n        for (var i = 0; i < _children.length; ++i) {\\n            var child = _children[i];\\n\\n            generateChildG(child, i);\\n\\n            if (!child.dimension()) {\\n                child.dimension(_chart.dimension());\\n            }\\n            if (!child.group()) {\\n                child.group(_chart.group());\\n            }\\n\\n            child.chartGroup(_chart.chartGroup());\\n            child.svg(_chart.svg());\\n            child.xUnits(_chart.xUnits());\\n            child.transitionDuration(_chart.transitionDuration(), _chart.transitionDelay());\\n            child.brushOn(_chart.brushOn());\\n            child.renderTitle(_chart.renderTitle());\\n            child.elasticX(_chart.elasticX());\\n        }\\n\\n        return g;\\n    });\\n\\n    _chart._brushing = function () {\\n        var extent = _chart.extendBrush();\\n        var brushIsEmpty = _chart.brushIsEmpty(extent);\\n\\n        for (var i = 0; i < _children.length; ++i) {\\n            _children[i].replaceFilter(brushIsEmpty ? null : extent);\\n        }\\n    };\\n\\n    _chart._prepareYAxis = function () {\\n        var left = (leftYAxisChildren().length !== 0);\\n        var right = (rightYAxisChildren().length !== 0);\\n        var ranges = calculateYAxisRanges(left, right);\\n\\n        if (left) { prepareLeftYAxis(ranges); }\\n        if (right) { prepareRightYAxis(ranges); }\\n\\n        if (leftYAxisChildren().length > 0 && !_rightAxisGridLines) {\\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _chart.y(), _chart.yAxis());\\n        } else if (rightYAxisChildren().length > 0) {\\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _rightY, _rightYAxis);\\n        }\\n    };\\n\\n    _chart.renderYAxis = function () {\\n        if (leftYAxisChildren().length !== 0) {\\n            _chart.renderYAxisAt('y', _chart.yAxis(), _chart.margins().left);\\n            _chart.renderYAxisLabel('y', _chart.yAxisLabel(), -90);\\n        }\\n\\n        if (rightYAxisChildren().length !== 0) {\\n            _chart.renderYAxisAt('yr', _chart.rightYAxis(), _chart.width() - _chart.margins().right);\\n            _chart.renderYAxisLabel('yr', _chart.rightYAxisLabel(), 90, _chart.width() - _rightYAxisLabelPadding);\\n        }\\n    };\\n\\n    function calculateYAxisRanges (left, right) {\\n        var lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax;\\n        var ranges;\\n\\n        if (left) {\\n            lyAxisMin = yAxisMin();\\n            lyAxisMax = yAxisMax();\\n        }\\n\\n        if (right) {\\n            ryAxisMin = rightYAxisMin();\\n            ryAxisMax = rightYAxisMax();\\n        }\\n\\n        if (_chart.alignYAxes() && left && right) {\\n            ranges = alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax);\\n        }\\n\\n        return ranges || {\\n            lyAxisMin: lyAxisMin,\\n            lyAxisMax: lyAxisMax,\\n            ryAxisMin: ryAxisMin,\\n            ryAxisMax: ryAxisMax\\n        };\\n    }\\n\\n    function alignYAxisRanges (lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax) {\\n        // since the two series will share a zero, each Y is just a multiple\\n        // of the other. and the ratio should be the ratio of the ranges of the\\n        // input data, so that they come out the same height. so we just min/max\\n\\n        // note: both ranges already include zero due to the stack mixin (#667)\\n        // if #667 changes, we can reconsider whether we want data height or\\n        // height from zero to be equal. and it will be possible for the axes\\n        // to be aligned but not visible.\\n        var extentRatio = (ryAxisMax - ryAxisMin) / (lyAxisMax - lyAxisMin);\\n\\n        return {\\n            lyAxisMin: Math.min(lyAxisMin, ryAxisMin / extentRatio),\\n            lyAxisMax: Math.max(lyAxisMax, ryAxisMax / extentRatio),\\n            ryAxisMin: Math.min(ryAxisMin, lyAxisMin * extentRatio),\\n            ryAxisMax: Math.max(ryAxisMax, lyAxisMax * extentRatio)\\n        };\\n    }\\n\\n    function prepareRightYAxis (ranges) {\\n        var needDomain = _chart.rightY() === undefined || _chart.elasticY(),\\n            needRange = needDomain || _chart.resizing();\\n        if (_chart.rightY() === undefined) {\\n            _chart.rightY(d3.scale.linear());\\n        }\\n        if (needDomain) {\\n            _chart.rightY().domain([ranges.ryAxisMin, ranges.ryAxisMax]);\\n        }\\n        if (needRange) {\\n            _chart.rightY().rangeRound([_chart.yAxisHeight(), 0]);\\n        }\\n\\n        _chart.rightY().range([_chart.yAxisHeight(), 0]);\\n        _chart.rightYAxis(_chart.rightYAxis().scale(_chart.rightY()));\\n\\n        _chart.rightYAxis().orient('right');\\n    }\\n\\n    function prepareLeftYAxis (ranges) {\\n        var needDomain = _chart.y() === undefined || _chart.elasticY(),\\n            needRange = needDomain || _chart.resizing();\\n        if (_chart.y() === undefined) {\\n            _chart.y(d3.scale.linear());\\n        }\\n        if (needDomain) {\\n            _chart.y().domain([ranges.lyAxisMin, ranges.lyAxisMax]);\\n        }\\n        if (needRange) {\\n            _chart.y().rangeRound([_chart.yAxisHeight(), 0]);\\n        }\\n\\n        _chart.y().range([_chart.yAxisHeight(), 0]);\\n        _chart.yAxis(_chart.yAxis().scale(_chart.y()));\\n\\n        _chart.yAxis().orient('left');\\n    }\\n\\n    function generateChildG (child, i) {\\n        child._generateG(_chart.g());\\n        child.g().attr('class', SUB_CHART_CLASS + ' _' + i);\\n    }\\n\\n    _chart.plotData = function () {\\n        for (var i = 0; i < _children.length; ++i) {\\n            var child = _children[i];\\n\\n            if (!child.g()) {\\n                generateChildG(child, i);\\n            }\\n\\n            if (_shareColors) {\\n                child.colors(_chart.colors());\\n            }\\n\\n            child.x(_chart.x());\\n\\n            child.xAxis(_chart.xAxis());\\n\\n            if (child.useRightYAxis()) {\\n                child.y(_chart.rightY());\\n                child.yAxis(_chart.rightYAxis());\\n            } else {\\n                child.y(_chart.y());\\n                child.yAxis(_chart.yAxis());\\n            }\\n\\n            child.plotData();\\n\\n            child._activateRenderlets();\\n        }\\n    };\\n\\n    /**\\n     * Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the\\n     * default behavior. This option is only respected when subcharts with both left and right y-axes\\n     * are present.\\n     * @method useRightAxisGridLines\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @param {Boolean} [useRightAxisGridLines=false]\\n     * @returns {Boolean|dc.compositeChart}\\n     */\\n    _chart.useRightAxisGridLines = function (useRightAxisGridLines) {\\n        if (!arguments) {\\n            return _rightAxisGridLines;\\n        }\\n\\n        _rightAxisGridLines = useRightAxisGridLines;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set chart-specific options for all child charts. This is equivalent to calling\\n     * {@link dc.baseMixin#options .options} on each child chart.\\n     * @method childOptions\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @param {Object} [childOptions]\\n     * @returns {Object|dc.compositeChart}\\n     */\\n    _chart.childOptions = function (childOptions) {\\n        if (!arguments.length) {\\n            return _childOptions;\\n        }\\n        _childOptions = childOptions;\\n        _children.forEach(function (child) {\\n            child.options(_childOptions);\\n        });\\n        return _chart;\\n    };\\n\\n    _chart.fadeDeselectedArea = function () {\\n        for (var i = 0; i < _children.length; ++i) {\\n            var child = _children[i];\\n            child.brush(_chart.brush());\\n            child.fadeDeselectedArea();\\n        }\\n    };\\n\\n    /**\\n     * Set or get the right y axis label.\\n     * @method rightYAxisLabel\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @param {String} [rightYAxisLabel]\\n     * @param {Number} [padding]\\n     * @returns {String|dc.compositeChart}\\n     */\\n    _chart.rightYAxisLabel = function (rightYAxisLabel, padding) {\\n        if (!arguments.length) {\\n            return _rightYAxisLabel;\\n        }\\n        _rightYAxisLabel = rightYAxisLabel;\\n        _chart.margins().right -= _rightYAxisLabelPadding;\\n        _rightYAxisLabelPadding = (padding === undefined) ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;\\n        _chart.margins().right += _rightYAxisLabelPadding;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Combine the given charts into one single composite coordinate grid chart.\\n     * @method compose\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @example\\n     * moveChart.compose([\\n     *     // when creating sub-chart you need to pass in the parent chart\\n     *     dc.lineChart(moveChart)\\n     *         .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\\n     *         .valueAccessor(function (d){return d.value.avg;})\\n     *         // most of the normal functions will continue to work in a composed chart\\n     *         .renderArea(true)\\n     *         .stack(monthlyMoveGroup, function (d){return d.value;})\\n     *         .title(function (d){\\n     *             var value = d.value.avg?d.value.avg:d.value;\\n     *             if(isNaN(value)) value = 0;\\n     *             return dateFormat(d.key) + '\\\\n' + numberFormat(value);\\n     *         }),\\n     *     dc.barChart(moveChart)\\n     *         .group(volumeByMonthGroup)\\n     *         .centerBar(true)\\n     * ]);\\n     * @param {Array<Chart>} [subChartArray]\\n     * @returns {dc.compositeChart}\\n     */\\n    _chart.compose = function (subChartArray) {\\n        _children = subChartArray;\\n        _children.forEach(function (child) {\\n            child.height(_chart.height());\\n            child.width(_chart.width());\\n            child.margins(_chart.margins());\\n\\n            if (_shareTitle) {\\n                child.title(_chart.title());\\n            }\\n\\n            child.options(_childOptions);\\n        });\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns the child charts which are composed into the composite chart.\\n     * @method children\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @returns {Array<dc.baseMixin>}\\n     */\\n    _chart.children = function () {\\n        return _children;\\n    };\\n\\n    /**\\n     * Get or set color sharing for the chart. If set, the {@link dc.colorMixin#colors .colors()} value from this chart\\n     * will be shared with composed children. Additionally if the child chart implements\\n     * Stackable and has not set a custom .colorAccessor, then it will generate a color\\n     * specific to its order in the composition.\\n     * @method shareColors\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @param {Boolean} [shareColors=false]\\n     * @returns {Boolean|dc.compositeChart}\\n     */\\n    _chart.shareColors = function (shareColors) {\\n        if (!arguments.length) {\\n            return _shareColors;\\n        }\\n        _shareColors = shareColors;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set title sharing for the chart. If set, the {@link dc.baseMixin#title .title()} value from\\n     * this chart will be shared with composed children.\\n     * @method shareTitle\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @param {Boolean} [shareTitle=true]\\n     * @returns {Boolean|dc.compositeChart}\\n     */\\n    _chart.shareTitle = function (shareTitle) {\\n        if (!arguments.length) {\\n            return _shareTitle;\\n        }\\n        _shareTitle = shareTitle;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the y scale for the right axis. The right y scale is typically automatically\\n     * generated by the chart implementation.\\n     * @method rightY\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Scales.md d3.scale}\\n     * @param {d3.scale} [yScale]\\n     * @returns {d3.scale|dc.compositeChart}\\n     */\\n    _chart.rightY = function (yScale) {\\n        if (!arguments.length) {\\n            return _rightY;\\n        }\\n        _rightY = yScale;\\n        _chart.rescale();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set alignment between left and right y axes. A line connecting '0' on both y axis\\n     * will be parallel to x axis. This only has effect when {@link #dc.coordinateGridMixin+elasticY elasticY} is true.\\n     * @method alignYAxes\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @param {Boolean} [alignYAxes=false]\\n     * @returns {Chart}\\n     */\\n    _chart.alignYAxes = function (alignYAxes) {\\n        if (!arguments.length) {\\n            return _alignYAxes;\\n        }\\n        _alignYAxes = alignYAxes;\\n        _chart.rescale();\\n        return _chart;\\n    };\\n\\n    function leftYAxisChildren () {\\n        return _children.filter(function (child) {\\n            return !child.useRightYAxis();\\n        });\\n    }\\n\\n    function rightYAxisChildren () {\\n        return _children.filter(function (child) {\\n            return child.useRightYAxis();\\n        });\\n    }\\n\\n    function getYAxisMin (charts) {\\n        return charts.map(function (c) {\\n            return c.yAxisMin();\\n        });\\n    }\\n\\n    delete _chart.yAxisMin;\\n    function yAxisMin () {\\n        return d3.min(getYAxisMin(leftYAxisChildren()));\\n    }\\n\\n    function rightYAxisMin () {\\n        return d3.min(getYAxisMin(rightYAxisChildren()));\\n    }\\n\\n    function getYAxisMax (charts) {\\n        return charts.map(function (c) {\\n            return c.yAxisMax();\\n        });\\n    }\\n\\n    delete _chart.yAxisMax;\\n    function yAxisMax () {\\n        return dc.utils.add(d3.max(getYAxisMax(leftYAxisChildren())), _chart.yAxisPadding());\\n    }\\n\\n    function rightYAxisMax () {\\n        return dc.utils.add(d3.max(getYAxisMax(rightYAxisChildren())), _chart.yAxisPadding());\\n    }\\n\\n    function getAllXAxisMinFromChildCharts () {\\n        return _children.map(function (c) {\\n            return c.xAxisMin();\\n        });\\n    }\\n\\n    dc.override(_chart, 'xAxisMin', function () {\\n        return dc.utils.subtract(d3.min(getAllXAxisMinFromChildCharts()), _chart.xAxisPadding());\\n    });\\n\\n    function getAllXAxisMaxFromChildCharts () {\\n        return _children.map(function (c) {\\n            return c.xAxisMax();\\n        });\\n    }\\n\\n    dc.override(_chart, 'xAxisMax', function () {\\n        return dc.utils.add(d3.max(getAllXAxisMaxFromChildCharts()), _chart.xAxisPadding());\\n    });\\n\\n    _chart.legendables = function () {\\n        return _children.reduce(function (items, child) {\\n            if (_shareColors) {\\n                child.colors(_chart.colors());\\n            }\\n            items.push.apply(items, child.legendables());\\n            return items;\\n        }, []);\\n    };\\n\\n    _chart.legendHighlight = function (d) {\\n        for (var j = 0; j < _children.length; ++j) {\\n            var child = _children[j];\\n            child.legendHighlight(d);\\n        }\\n    };\\n\\n    _chart.legendReset = function (d) {\\n        for (var j = 0; j < _children.length; ++j) {\\n            var child = _children[j];\\n            child.legendReset(d);\\n        }\\n    };\\n\\n    _chart.legendToggle = function () {\\n        console.log('composite should not be getting legendToggle itself');\\n    };\\n\\n    /**\\n     * Set or get the right y axis used by the composite chart. This function is most useful when y\\n     * axis customization is required. The y axis in dc.js is an instance of a [d3 axis\\n     * object](https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis) therefore it supports any valid\\n     * d3 axis manipulation.\\n     *\\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\\n     * unexpected results.\\n     * @method rightYAxis\\n     * @memberof dc.compositeChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis d3.svg.axis}\\n     * @example\\n     * // customize y axis tick format\\n     * chart.rightYAxis().tickFormat(function (v) {return v + '%';});\\n     * // customize y axis tick values\\n     * chart.rightYAxis().tickValues([0, 100, 200, 300]);\\n     * @param {d3.svg.axis} [rightYAxis]\\n     * @returns {d3.svg.axis|dc.compositeChart}\\n     */\\n    _chart.rightYAxis = function (rightYAxis) {\\n        if (!arguments.length) {\\n            return _rightYAxis;\\n        }\\n        _rightYAxis = rightYAxis;\\n        return _chart;\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * A series chart is a chart that shows multiple series of data overlaid on one chart, where the\\n * series is specified in the data. It is a specialization of Composite Chart and inherits all\\n * composite features other than recomposing the chart.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.io/dc.js/examples/series.html Series Chart}\\n * @class seriesChart\\n * @memberof dc\\n * @mixes dc.compositeChart\\n * @example\\n * // create a series chart under #chart-container1 element using the default global chart group\\n * var seriesChart1 = dc.seriesChart(\\\"#chart-container1\\\");\\n * // create a series chart under #chart-container2 element using chart group A\\n * var seriesChart2 = dc.seriesChart(\\\"#chart-container2\\\", \\\"chartGroupA\\\");\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.seriesChart}\\n */\\ndc.seriesChart = function (parent, chartGroup) {\\n    var _chart = dc.compositeChart(parent, chartGroup);\\n\\n    function keySort (a, b) {\\n        return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\\n    }\\n\\n    var _charts = {};\\n    var _chartFunction = dc.lineChart;\\n    var _seriesAccessor;\\n    var _seriesSort = d3.ascending;\\n    var _valueSort = keySort;\\n\\n    _chart._mandatoryAttributes().push('seriesAccessor', 'chart');\\n    _chart.shareColors(true);\\n\\n    _chart._preprocessData = function () {\\n        var keep = [];\\n        var childrenChanged;\\n        var nester = d3.nest().key(_seriesAccessor);\\n        if (_seriesSort) {\\n            nester.sortKeys(_seriesSort);\\n        }\\n        if (_valueSort) {\\n            nester.sortValues(_valueSort);\\n        }\\n        var nesting = nester.entries(_chart.data());\\n        var children =\\n            nesting.map(function (sub, i) {\\n                var subChart = _charts[sub.key] || _chartFunction.call(_chart, _chart, chartGroup, sub.key, i);\\n                if (!_charts[sub.key]) {\\n                    childrenChanged = true;\\n                }\\n                _charts[sub.key] = subChart;\\n                keep.push(sub.key);\\n                return subChart\\n                    .dimension(_chart.dimension())\\n                    .group({all: d3.functor(sub.values)}, sub.key)\\n                    .keyAccessor(_chart.keyAccessor())\\n                    .valueAccessor(_chart.valueAccessor())\\n                    .brushOn(_chart.brushOn());\\n            });\\n        // this works around the fact compositeChart doesn't really\\n        // have a removal interface\\n        Object.keys(_charts)\\n            .filter(function (c) {return keep.indexOf(c) === -1;})\\n            .forEach(function (c) {\\n                clearChart(c);\\n                childrenChanged = true;\\n            });\\n        _chart._compose(children);\\n        if (childrenChanged && _chart.legend()) {\\n            _chart.legend().render();\\n        }\\n    };\\n\\n    function clearChart (c) {\\n        if (_charts[c].g()) {\\n            _charts[c].g().remove();\\n        }\\n        delete _charts[c];\\n    }\\n\\n    function resetChildren () {\\n        Object.keys(_charts).map(clearChart);\\n        _charts = {};\\n    }\\n\\n    /**\\n     * Get or set the chart function, which generates the child charts.\\n     * @method chart\\n     * @memberof dc.seriesChart\\n     * @instance\\n     * @example\\n     * // put interpolation on the line charts used for the series\\n     * chart.chart(function(c) { return dc.lineChart(c).interpolate('basis'); })\\n     * // do a scatter series chart\\n     * chart.chart(dc.scatterPlot)\\n     * @param {Function} [chartFunction=dc.lineChart]\\n     * @returns {Function|dc.seriesChart}\\n     */\\n    _chart.chart = function (chartFunction) {\\n        if (!arguments.length) {\\n            return _chartFunction;\\n        }\\n        _chartFunction = chartFunction;\\n        resetChildren();\\n        return _chart;\\n    };\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Get or set accessor function for the displayed series. Given a datum, this function\\n     * should return the series that datum belongs to.\\n     * @method seriesAccessor\\n     * @memberof dc.seriesChart\\n     * @instance\\n     * @example\\n     * // simple series accessor\\n     * chart.seriesAccessor(function(d) { return \\\"Expt: \\\" + d.key[0]; })\\n     * @param {Function} [accessor]\\n     * @returns {Function|dc.seriesChart}\\n     */\\n    _chart.seriesAccessor = function (accessor) {\\n        if (!arguments.length) {\\n            return _seriesAccessor;\\n        }\\n        _seriesAccessor = accessor;\\n        resetChildren();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set a function to sort the list of series by, given series values.\\n     * @method seriesSort\\n     * @memberof dc.seriesChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_ascending d3.ascending}\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_descending d3.descending}\\n     * @example\\n     * chart.seriesSort(d3.descending);\\n     * @param {Function} [sortFunction=d3.ascending]\\n     * @returns {Function|dc.seriesChart}\\n     */\\n    _chart.seriesSort = function (sortFunction) {\\n        if (!arguments.length) {\\n            return _seriesSort;\\n        }\\n        _seriesSort = sortFunction;\\n        resetChildren();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set a function to sort each series values by. By default this is the key accessor which,\\n     * for example, will ensure a lineChart series connects its points in increasing key/x order,\\n     * rather than haphazardly.\\n     * @method valueSort\\n     * @memberof dc.seriesChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_ascending d3.ascending}\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Arrays.md#d3_descending d3.descending}\\n     * @example\\n     * // Default value sort\\n     * _chart.valueSort(function keySort (a, b) {\\n     *     return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\\n     * });\\n     * @param {Function} [sortFunction]\\n     * @returns {Function|dc.seriesChart}\\n     */\\n    _chart.valueSort = function (sortFunction) {\\n        if (!arguments.length) {\\n            return _valueSort;\\n        }\\n        _valueSort = sortFunction;\\n        resetChildren();\\n        return _chart;\\n    };\\n\\n    // make compose private\\n    _chart._compose = _chart.compose;\\n    delete _chart.compose;\\n\\n    return _chart;\\n};\\n\\n/**\\n * The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map\\n * from GeoJson data. This chart implementation was inspired by\\n * {@link http://bl.ocks.org/4060606 the great d3 choropleth example}.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\\n * @class geoChoroplethChart\\n * @memberof dc\\n * @mixes dc.colorMixin\\n * @mixes dc.baseMixin\\n * @example\\n * // create a choropleth chart under '#us-chart' element using the default global chart group\\n * var chart1 = dc.geoChoroplethChart('#us-chart');\\n * // create a choropleth chart under '#us-chart2' element using chart group A\\n * var chart2 = dc.compositeChart('#us-chart2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.geoChoroplethChart}\\n */\\ndc.geoChoroplethChart = function (parent, chartGroup) {\\n    var _chart = dc.colorMixin(dc.baseMixin({}));\\n\\n    _chart.colorAccessor(function (d) {\\n        return d || 0;\\n    });\\n\\n    var _geoPath = d3.geo.path();\\n    var _projectionFlag;\\n\\n    var _geoJsons = [];\\n\\n    _chart._doRender = function () {\\n        _chart.resetSvg();\\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\\n            var states = _chart.svg().append('g')\\n                .attr('class', 'layer' + layerIndex);\\n\\n            var regionG = states.selectAll('g.' + geoJson(layerIndex).name)\\n                .data(geoJson(layerIndex).data)\\n                .enter()\\n                .append('g')\\n                .attr('class', geoJson(layerIndex).name);\\n\\n            regionG\\n                .append('path')\\n                .attr('fill', 'white')\\n                .attr('d', _geoPath);\\n\\n            regionG.append('title');\\n\\n            plotData(layerIndex);\\n        }\\n        _projectionFlag = false;\\n    };\\n\\n    function plotData (layerIndex) {\\n        var data = generateLayeredData();\\n\\n        if (isDataLayer(layerIndex)) {\\n            var regionG = renderRegionG(layerIndex);\\n\\n            renderPaths(regionG, layerIndex, data);\\n\\n            renderTitle(regionG, layerIndex, data);\\n        }\\n    }\\n\\n    function generateLayeredData () {\\n        var data = {};\\n        var groupAll = _chart.data();\\n        for (var i = 0; i < groupAll.length; ++i) {\\n            data[_chart.keyAccessor()(groupAll[i])] = _chart.valueAccessor()(groupAll[i]);\\n        }\\n        return data;\\n    }\\n\\n    function isDataLayer (layerIndex) {\\n        return geoJson(layerIndex).keyAccessor;\\n    }\\n\\n    function renderRegionG (layerIndex) {\\n        var regionG = _chart.svg()\\n            .selectAll(layerSelector(layerIndex))\\n            .classed('selected', function (d) {\\n                return isSelected(layerIndex, d);\\n            })\\n            .classed('deselected', function (d) {\\n                return isDeselected(layerIndex, d);\\n            })\\n            .attr('class', function (d) {\\n                var layerNameClass = geoJson(layerIndex).name;\\n                var regionClass = dc.utils.nameToId(geoJson(layerIndex).keyAccessor(d));\\n                var baseClasses = layerNameClass + ' ' + regionClass;\\n                if (isSelected(layerIndex, d)) {\\n                    baseClasses += ' selected';\\n                }\\n                if (isDeselected(layerIndex, d)) {\\n                    baseClasses += ' deselected';\\n                }\\n                return baseClasses;\\n            });\\n        return regionG;\\n    }\\n\\n    function layerSelector (layerIndex) {\\n        return 'g.layer' + layerIndex + ' g.' + geoJson(layerIndex).name;\\n    }\\n\\n    function isSelected (layerIndex, d) {\\n        return _chart.hasFilter() && _chart.hasFilter(getKey(layerIndex, d));\\n    }\\n\\n    function isDeselected (layerIndex, d) {\\n        return _chart.hasFilter() && !_chart.hasFilter(getKey(layerIndex, d));\\n    }\\n\\n    function getKey (layerIndex, d) {\\n        return geoJson(layerIndex).keyAccessor(d);\\n    }\\n\\n    function geoJson (index) {\\n        return _geoJsons[index];\\n    }\\n\\n    function renderPaths (regionG, layerIndex, data) {\\n        var paths = regionG\\n            .select('path')\\n            .attr('fill', function () {\\n                var currentFill = d3.select(this).attr('fill');\\n                if (currentFill) {\\n                    return currentFill;\\n                }\\n                return 'none';\\n            })\\n            .on('click', function (d) {\\n                return _chart.onClick(d, layerIndex);\\n            });\\n\\n        dc.transition(paths, _chart.transitionDuration(), _chart.transitionDelay()).attr('fill', function (d, i) {\\n            return _chart.getColor(data[geoJson(layerIndex).keyAccessor(d)], i);\\n        });\\n    }\\n\\n    _chart.onClick = function (d, layerIndex) {\\n        var selectedRegion = geoJson(layerIndex).keyAccessor(d);\\n        dc.events.trigger(function () {\\n            _chart.filter(selectedRegion);\\n            _chart.redrawGroup();\\n        });\\n    };\\n\\n    function renderTitle (regionG, layerIndex, data) {\\n        if (_chart.renderTitle()) {\\n            regionG.selectAll('title').text(function (d) {\\n                var key = getKey(layerIndex, d);\\n                var value = data[key];\\n                return _chart.title()({key: key, value: value});\\n            });\\n        }\\n    }\\n\\n    _chart._doRedraw = function () {\\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\\n            plotData(layerIndex);\\n            if (_projectionFlag) {\\n                _chart.svg().selectAll('g.' + geoJson(layerIndex).name + ' path').attr('d', _geoPath);\\n            }\\n        }\\n        _projectionFlag = false;\\n    };\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Use this function to insert a new GeoJson map layer. This function can be invoked multiple times\\n     * if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple\\n     * layers with the same name the new overlay will override the existing one.\\n     * @method overlayGeoJson\\n     * @memberof dc.geoChoroplethChart\\n     * @instance\\n     * @see {@link http://geojson.org/ GeoJSON}\\n     * @see {@link https://github.com/topojson/topojson/wiki TopoJSON}\\n     * @see {@link https://github.com/topojson/topojson-1.x-api-reference/blob/master/API-Reference.md#wiki-feature topojson.feature}\\n     * @example\\n     * // insert a layer for rendering US states\\n     * chart.overlayGeoJson(statesJson.features, 'state', function(d) {\\n     *      return d.properties.name;\\n     * });\\n     * @param {geoJson} json - a geojson feed\\n     * @param {String} name - name of the layer\\n     * @param {Function} keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by\\n     * this function should match the keys returned by the crossfilter groups.\\n     * @returns {dc.geoChoroplethChart}\\n     */\\n    _chart.overlayGeoJson = function (json, name, keyAccessor) {\\n        for (var i = 0; i < _geoJsons.length; ++i) {\\n            if (_geoJsons[i].name === name) {\\n                _geoJsons[i].data = json;\\n                _geoJsons[i].keyAccessor = keyAccessor;\\n                return _chart;\\n            }\\n        }\\n        _geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set custom geo projection function. See the available\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Geo-Projections.md d3 geo projection functions}.\\n     * @method projection\\n     * @memberof dc.geoChoroplethChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Geo-Projections.md d3.geo.projection}\\n     * @see {@link https://github.com/d3/d3-geo-projection Extended d3.geo.projection}\\n     * @param {d3.projection} [projection=d3.geo.albersUsa()]\\n     * @returns {dc.geoChoroplethChart}\\n     */\\n    _chart.projection = function (projection) {\\n        _geoPath.projection(projection);\\n        _projectionFlag = true;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Returns all GeoJson layers currently registered with this chart. The returned array is a\\n     * reference to this chart's internal data structure, so any modification to this array will also\\n     * modify this chart's internal registration.\\n     * @method geoJsons\\n     * @memberof dc.geoChoroplethChart\\n     * @instance\\n     * @returns {Array<{name:String, data: Object, accessor: Function}>}\\n     */\\n    _chart.geoJsons = function () {\\n        return _geoJsons;\\n    };\\n\\n    /**\\n     * Returns the {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Geo-Paths.md#path d3.geo.path} object used to\\n     * render the projection and features.  Can be useful for figuring out the bounding box of the\\n     * feature set and thus a way to calculate scale and translation for the projection.\\n     * @method geoPath\\n     * @memberof dc.geoChoroplethChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Geo-Paths.md#path d3.geo.path}\\n     * @returns {d3.geo.path}\\n     */\\n    _chart.geoPath = function () {\\n        return _geoPath;\\n    };\\n\\n    /**\\n     * Remove a GeoJson layer from this chart by name\\n     * @method removeGeoJson\\n     * @memberof dc.geoChoroplethChart\\n     * @instance\\n     * @param {String} name\\n     * @returns {dc.geoChoroplethChart}\\n     */\\n    _chart.removeGeoJson = function (name) {\\n        var geoJsons = [];\\n\\n        for (var i = 0; i < _geoJsons.length; ++i) {\\n            var layer = _geoJsons[i];\\n            if (layer.name !== name) {\\n                geoJsons.push(layer);\\n            }\\n        }\\n\\n        _geoJsons = geoJsons;\\n\\n        return _chart;\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay\\n * chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the\\n * typical x and y positioning while retaining the capability to visualize data using bubble radius\\n * and coloring.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\\n * @class bubbleOverlay\\n * @memberof dc\\n * @mixes dc.bubbleMixin\\n * @mixes dc.baseMixin\\n * @example\\n * // create a bubble overlay chart on top of the '#chart-container1 svg' element using the default global chart group\\n * var bubbleChart1 = dc.bubbleOverlayChart('#chart-container1').svg(d3.select('#chart-container1 svg'));\\n * // create a bubble overlay chart on top of the '#chart-container2 svg' element using chart group A\\n * var bubbleChart2 = dc.compositeChart('#chart-container2', 'chartGroupA').svg(d3.select('#chart-container2 svg'));\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.bubbleOverlay}\\n */\\ndc.bubbleOverlay = function (parent, chartGroup) {\\n    var BUBBLE_OVERLAY_CLASS = 'bubble-overlay';\\n    var BUBBLE_NODE_CLASS = 'node';\\n    var BUBBLE_CLASS = 'bubble';\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Set the underlying svg image element. Unlike other dc charts this chart will not generate a svg\\n     * element; therefore the bubble overlay chart will not work if this function is not invoked. If the\\n     * underlying image is a bitmap, then an empty svg will need to be created on top of the image.\\n     * @method svg\\n     * @memberof dc.bubbleOverlay\\n     * @instance\\n     * @example\\n     * // set up underlying svg element\\n     * chart.svg(d3.select('#chart svg'));\\n     * @param {SVGElement|d3.selection} [imageElement]\\n     * @returns {dc.bubbleOverlay}\\n     */\\n    var _chart = dc.bubbleMixin(dc.baseMixin({}));\\n    var _g;\\n    var _points = [];\\n\\n    _chart.transitionDuration(750);\\n\\n    _chart.transitionDelay(0);\\n\\n    _chart.radiusValueAccessor(function (d) {\\n        return d.value;\\n    });\\n\\n    /**\\n     * **mandatory**\\n     *\\n     * Set up a data point on the overlay. The name of a data point should match a specific 'key' among\\n     * data groups generated using keyAccessor.  If a match is found (point name <-> data group key)\\n     * then a bubble will be generated at the position specified by the function. x and y\\n     * value specified here are relative to the underlying svg.\\n     * @method point\\n     * @memberof dc.bubbleOverlay\\n     * @instance\\n     * @param {String} name\\n     * @param {Number} x\\n     * @param {Number} y\\n     * @returns {dc.bubbleOverlay}\\n     */\\n    _chart.point = function (name, x, y) {\\n        _points.push({name: name, x: x, y: y});\\n        return _chart;\\n    };\\n\\n    _chart._doRender = function () {\\n        _g = initOverlayG();\\n\\n        _chart.r().range([_chart.MIN_RADIUS, _chart.width() * _chart.maxBubbleRelativeSize()]);\\n\\n        initializeBubbles();\\n\\n        _chart.fadeDeselectedArea();\\n\\n        return _chart;\\n    };\\n\\n    function initOverlayG () {\\n        _g = _chart.select('g.' + BUBBLE_OVERLAY_CLASS);\\n        if (_g.empty()) {\\n            _g = _chart.svg().append('g').attr('class', BUBBLE_OVERLAY_CLASS);\\n        }\\n        return _g;\\n    }\\n\\n    function initializeBubbles () {\\n        var data = mapData();\\n        _chart.calculateRadiusDomain();\\n\\n        _points.forEach(function (point) {\\n            var nodeG = getNodeG(point, data);\\n\\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\\n\\n            if (circle.empty()) {\\n                circle = nodeG.append('circle')\\n                    .attr('class', BUBBLE_CLASS)\\n                    .attr('r', 0)\\n                    .attr('fill', _chart.getColor)\\n                    .on('click', _chart.onClick);\\n            }\\n\\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('r', function (d) {\\n                    return _chart.bubbleR(d);\\n                });\\n\\n            _chart._doRenderLabel(nodeG);\\n\\n            _chart._doRenderTitles(nodeG);\\n        });\\n    }\\n\\n    function mapData () {\\n        var data = {};\\n        _chart.data().forEach(function (datum) {\\n            data[_chart.keyAccessor()(datum)] = datum;\\n        });\\n        return data;\\n    }\\n\\n    function getNodeG (point, data) {\\n        var bubbleNodeClass = BUBBLE_NODE_CLASS + ' ' + dc.utils.nameToId(point.name);\\n\\n        var nodeG = _g.select('g.' + dc.utils.nameToId(point.name));\\n\\n        if (nodeG.empty()) {\\n            nodeG = _g.append('g')\\n                .attr('class', bubbleNodeClass)\\n                .attr('transform', 'translate(' + point.x + ',' + point.y + ')');\\n        }\\n\\n        nodeG.datum(data[point.name]);\\n\\n        return nodeG;\\n    }\\n\\n    _chart._doRedraw = function () {\\n        updateBubbles();\\n\\n        _chart.fadeDeselectedArea();\\n\\n        return _chart;\\n    };\\n\\n    function updateBubbles () {\\n        var data = mapData();\\n        _chart.calculateRadiusDomain();\\n\\n        _points.forEach(function (point) {\\n            var nodeG = getNodeG(point, data);\\n\\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\\n\\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('r', function (d) {\\n                    return _chart.bubbleR(d);\\n                })\\n                .attr('fill', _chart.getColor);\\n\\n            _chart.doUpdateLabels(nodeG);\\n\\n            _chart.doUpdateTitles(nodeG);\\n        });\\n    }\\n\\n    _chart.debug = function (flag) {\\n        if (flag) {\\n            var debugG = _chart.select('g.' + dc.constants.DEBUG_GROUP_CLASS);\\n\\n            if (debugG.empty()) {\\n                debugG = _chart.svg()\\n                    .append('g')\\n                    .attr('class', dc.constants.DEBUG_GROUP_CLASS);\\n            }\\n\\n            var debugText = debugG.append('text')\\n                .attr('x', 10)\\n                .attr('y', 20);\\n\\n            debugG\\n                .append('rect')\\n                .attr('width', _chart.width())\\n                .attr('height', _chart.height())\\n                .on('mousemove', function () {\\n                    var position = d3.mouse(debugG.node());\\n                    var msg = position[0] + ', ' + position[1];\\n                    debugText.text(msg);\\n                });\\n        } else {\\n            _chart.selectAll('.debug').remove();\\n        }\\n\\n        return _chart;\\n    };\\n\\n    _chart.anchor(parent, chartGroup);\\n\\n    return _chart;\\n};\\n\\n/**\\n * Concrete row chart implementation.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * @class rowChart\\n * @memberof dc\\n * @mixes dc.capMixin\\n * @mixes dc.marginMixin\\n * @mixes dc.colorMixin\\n * @mixes dc.baseMixin\\n * @example\\n * // create a row chart under #chart-container1 element using the default global chart group\\n * var chart1 = dc.rowChart('#chart-container1');\\n * // create a row chart under #chart-container2 element using chart group A\\n * var chart2 = dc.rowChart('#chart-container2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.rowChart}\\n */\\ndc.rowChart = function (parent, chartGroup) {\\n\\n    var _g;\\n\\n    var _labelOffsetX = 10;\\n    var _labelOffsetY = 15;\\n    var _hasLabelOffsetY = false;\\n    var _dyOffset = '0.35em';  // this helps center labels https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#svg_text\\n    var _titleLabelOffsetX = 2;\\n\\n    var _gap = 5;\\n\\n    var _fixedBarHeight = false;\\n    var _rowCssClass = 'row';\\n    var _titleRowCssClass = 'titlerow';\\n    var _renderTitleLabel = false;\\n\\n    var _chart = dc.capMixin(dc.marginMixin(dc.colorMixin(dc.baseMixin({}))));\\n\\n    var _x;\\n\\n    var _elasticX;\\n\\n    var _xAxis = d3.svg.axis().orient('bottom');\\n\\n    var _rowData;\\n\\n    _chart.rowsCap = _chart.cap;\\n\\n    function calculateAxisScale () {\\n        if (!_x || _elasticX) {\\n            var extent = d3.extent(_rowData, _chart.cappedValueAccessor);\\n            if (extent[0] > 0) {\\n                extent[0] = 0;\\n            }\\n            if (extent[1] < 0) {\\n                extent[1] = 0;\\n            }\\n            _x = d3.scale.linear().domain(extent)\\n                .range([0, _chart.effectiveWidth()]);\\n        }\\n        _xAxis.scale(_x);\\n    }\\n\\n    function drawAxis () {\\n        var axisG = _g.select('g.axis');\\n\\n        calculateAxisScale();\\n\\n        if (axisG.empty()) {\\n            axisG = _g.append('g').attr('class', 'axis');\\n        }\\n        axisG.attr('transform', 'translate(0, ' + _chart.effectiveHeight() + ')');\\n\\n        dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\\n            .call(_xAxis);\\n    }\\n\\n    _chart._doRender = function () {\\n        _chart.resetSvg();\\n\\n        _g = _chart.svg()\\n            .append('g')\\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\\n\\n        drawChart();\\n\\n        return _chart;\\n    };\\n\\n    _chart.title(function (d) {\\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\\n    });\\n\\n    _chart.label(_chart.cappedKeyAccessor);\\n\\n    /**\\n     * Gets or sets the x scale. The x scale can be any d3\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md quantitive scale}.\\n     * @method x\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md quantitive scale}\\n     * @param {d3.scale} [scale]\\n     * @returns {d3.scale|dc.rowChart}\\n     */\\n    _chart.x = function (scale) {\\n        if (!arguments.length) {\\n            return _x;\\n        }\\n        _x = scale;\\n        return _chart;\\n    };\\n\\n    function drawGridLines () {\\n        _g.selectAll('g.tick')\\n            .select('line.grid-line')\\n            .remove();\\n\\n        _g.selectAll('g.tick')\\n            .append('line')\\n            .attr('class', 'grid-line')\\n            .attr('x1', 0)\\n            .attr('y1', 0)\\n            .attr('x2', 0)\\n            .attr('y2', function () {\\n                return -_chart.effectiveHeight();\\n            });\\n    }\\n\\n    function drawChart () {\\n        _rowData = _chart.data();\\n\\n        drawAxis();\\n        drawGridLines();\\n\\n        var rows = _g.selectAll('g.' + _rowCssClass)\\n            .data(_rowData);\\n\\n        createElements(rows);\\n        removeElements(rows);\\n        updateElements(rows);\\n    }\\n\\n    function createElements (rows) {\\n        var rowEnter = rows.enter()\\n            .append('g')\\n            .attr('class', function (d, i) {\\n                return _rowCssClass + ' _' + i;\\n            });\\n\\n        rowEnter.append('rect').attr('width', 0);\\n\\n        createLabels(rowEnter);\\n    }\\n\\n    function removeElements (rows) {\\n        rows.exit().remove();\\n    }\\n\\n    function rootValue () {\\n        var root = _x(0);\\n        return (root === -Infinity || root !== root) ? _x(1) : root;\\n    }\\n\\n    function updateElements (rows) {\\n        var n = _rowData.length;\\n\\n        var height;\\n        if (!_fixedBarHeight) {\\n            height = (_chart.effectiveHeight() - (n + 1) * _gap) / n;\\n        } else {\\n            height = _fixedBarHeight;\\n        }\\n\\n        // vertically align label in center unless they override the value via property setter\\n        if (!_hasLabelOffsetY) {\\n            _labelOffsetY = height / 2;\\n        }\\n\\n        var rect = rows.attr('transform', function (d, i) {\\n                return 'translate(0,' + ((i + 1) * _gap + i * height) + ')';\\n            }).select('rect')\\n            .attr('height', height)\\n            .attr('fill', _chart.getColor)\\n            .on('click', onClick)\\n            .classed('deselected', function (d) {\\n                return (_chart.hasFilter()) ? !isSelectedRow(d) : false;\\n            })\\n            .classed('selected', function (d) {\\n                return (_chart.hasFilter()) ? isSelectedRow(d) : false;\\n            });\\n\\n        dc.transition(rect, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('width', function (d) {\\n                return Math.abs(rootValue() - _x(_chart.valueAccessor()(d)));\\n            })\\n            .attr('transform', translateX);\\n\\n        createTitles(rows);\\n        updateLabels(rows);\\n    }\\n\\n    function createTitles (rows) {\\n        if (_chart.renderTitle()) {\\n            rows.select('title').remove();\\n            rows.append('title').text(_chart.title());\\n        }\\n    }\\n\\n    function createLabels (rowEnter) {\\n        if (_chart.renderLabel()) {\\n            rowEnter.append('text')\\n                .on('click', onClick);\\n        }\\n        if (_chart.renderTitleLabel()) {\\n            rowEnter.append('text')\\n                .attr('class', _titleRowCssClass)\\n                .on('click', onClick);\\n        }\\n    }\\n\\n    function updateLabels (rows) {\\n        if (_chart.renderLabel()) {\\n            var lab = rows.select('text')\\n                .attr('x', _labelOffsetX)\\n                .attr('y', _labelOffsetY)\\n                .attr('dy', _dyOffset)\\n                .on('click', onClick)\\n                .attr('class', function (d, i) {\\n                    return _rowCssClass + ' _' + i;\\n                })\\n                .text(function (d) {\\n                    return _chart.label()(d);\\n                });\\n            dc.transition(lab, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('transform', translateX);\\n        }\\n        if (_chart.renderTitleLabel()) {\\n            var titlelab = rows.select('.' + _titleRowCssClass)\\n                    .attr('x', _chart.effectiveWidth() - _titleLabelOffsetX)\\n                    .attr('y', _labelOffsetY)\\n                    .attr('dy', _dyOffset)\\n                    .attr('text-anchor', 'end')\\n                    .on('click', onClick)\\n                    .attr('class', function (d, i) {\\n                        return _titleRowCssClass + ' _' + i ;\\n                    })\\n                    .text(function (d) {\\n                        return _chart.title()(d);\\n                    });\\n            dc.transition(titlelab, _chart.transitionDuration(), _chart.transitionDelay())\\n                .attr('transform', translateX);\\n        }\\n    }\\n\\n    /**\\n     * Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'.\\n     * @method renderTitleLabel\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @param {Boolean} [renderTitleLabel=false]\\n     * @returns {Boolean|dc.rowChart}\\n     */\\n    _chart.renderTitleLabel = function (renderTitleLabel) {\\n        if (!arguments.length) {\\n            return _renderTitleLabel;\\n        }\\n        _renderTitleLabel = renderTitleLabel;\\n        return _chart;\\n    };\\n\\n    function onClick (d) {\\n        _chart.onClick(d);\\n    }\\n\\n    function translateX (d) {\\n        var x = _x(_chart.cappedValueAccessor(d)),\\n            x0 = rootValue(),\\n            s = x > x0 ? x0 : x;\\n        return 'translate(' + s + ',0)';\\n    }\\n\\n    _chart._doRedraw = function () {\\n        drawChart();\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get the x axis for the row chart instance.  Note: not settable for row charts.\\n     * See the {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis d3 axis object}\\n     * documention for more information.\\n     * @method xAxis\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#axis d3.svg.axis}\\n     * @example\\n     * // customize x axis tick format\\n     * chart.xAxis().tickFormat(function (v) {return v + '%';});\\n     * // customize x axis tick values\\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\\n     * @returns {d3.svg.axis}\\n     */\\n    _chart.xAxis = function () {\\n        return _xAxis;\\n    };\\n\\n    /**\\n     * Get or set the fixed bar height. Default is [false] which will auto-scale bars.\\n     * For example, if you want to fix the height for a specific number of bars (useful in TopN charts)\\n     * you could fix height as follows (where count = total number of bars in your TopN and gap is\\n     * your vertical gap space).\\n     * @method fixedBarHeight\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @example\\n     * chart.fixedBarHeight( chartheight - (count + 1) * gap / count);\\n     * @param {Boolean|Number} [fixedBarHeight=false]\\n     * @returns {Boolean|Number|dc.rowChart}\\n     */\\n    _chart.fixedBarHeight = function (fixedBarHeight) {\\n        if (!arguments.length) {\\n            return _fixedBarHeight;\\n        }\\n        _fixedBarHeight = fixedBarHeight;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the vertical gap space between rows on a particular row chart instance.\\n     * @method gap\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @param {Number} [gap=5]\\n     * @returns {Number|dc.rowChart}\\n     */\\n    _chart.gap = function (gap) {\\n        if (!arguments.length) {\\n            return _gap;\\n        }\\n        _gap = gap;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescle to auto-fit the\\n     * data range when filtered.\\n     * @method elasticX\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @param {Boolean} [elasticX]\\n     * @returns {Boolean|dc.rowChart}\\n     */\\n    _chart.elasticX = function (elasticX) {\\n        if (!arguments.length) {\\n            return _elasticX;\\n        }\\n        _elasticX = elasticX;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart.\\n     * @method labelOffsetX\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @param {Number} [labelOffsetX=10]\\n     * @returns {Number|dc.rowChart}\\n     */\\n    _chart.labelOffsetX = function (labelOffsetX) {\\n        if (!arguments.length) {\\n            return _labelOffsetX;\\n        }\\n        _labelOffsetX = labelOffsetX;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart.\\n     * @method labelOffsetY\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @param {Number} [labelOffsety=15]\\n     * @returns {Number|dc.rowChart}\\n     */\\n    _chart.labelOffsetY = function (labelOffsety) {\\n        if (!arguments.length) {\\n            return _labelOffsetY;\\n        }\\n        _labelOffsetY = labelOffsety;\\n        _hasLabelOffsetY = true;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get of set the x offset (horizontal space between right edge of row and right edge or text.\\n     * @method titleLabelOffsetX\\n     * @memberof dc.rowChart\\n     * @instance\\n     * @param {Number} [titleLabelOffsetX=2]\\n     * @returns {Number|dc.rowChart}\\n     */\\n    _chart.titleLabelOffsetX = function (titleLabelOffsetX) {\\n        if (!arguments.length) {\\n            return _titleLabelOffsetX;\\n        }\\n        _titleLabelOffsetX = titleLabelOffsetX;\\n        return _chart;\\n    };\\n\\n    function isSelectedRow (d) {\\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d));\\n    }\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * Legend is a attachable widget that can be added to other dc charts to render horizontal legend\\n * labels.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\\n * @class legend\\n * @memberof dc\\n * @example\\n * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\\n * @returns {dc.legend}\\n */\\ndc.legend = function () {\\n    var LABEL_GAP = 2;\\n\\n    var _legend = {},\\n        _parent,\\n        _x = 0,\\n        _y = 0,\\n        _itemHeight = 12,\\n        _gap = 5,\\n        _horizontal = false,\\n        _legendWidth = 560,\\n        _itemWidth = 70,\\n        _autoItemWidth = false,\\n        _legendText = dc.pluck('name'),\\n        _maxItems;\\n\\n    var _g;\\n\\n    _legend.parent = function (p) {\\n        if (!arguments.length) {\\n            return _parent;\\n        }\\n        _parent = p;\\n        return _legend;\\n    };\\n\\n    _legend.render = function () {\\n        _parent.svg().select('g.dc-legend').remove();\\n        _g = _parent.svg().append('g')\\n            .attr('class', 'dc-legend')\\n            .attr('transform', 'translate(' + _x + ',' + _y + ')');\\n        var legendables = _parent.legendables();\\n\\n        if (_maxItems !== undefined) {\\n            legendables = legendables.slice(0, _maxItems);\\n        }\\n\\n        var itemEnter = _g.selectAll('g.dc-legend-item')\\n            .data(legendables)\\n            .enter()\\n            .append('g')\\n            .attr('class', 'dc-legend-item')\\n            .on('mouseover', function (d) {\\n                _parent.legendHighlight(d);\\n            })\\n            .on('mouseout', function (d) {\\n                _parent.legendReset(d);\\n            })\\n            .on('click', function (d) {\\n                d.chart.legendToggle(d);\\n            });\\n\\n        _g.selectAll('g.dc-legend-item')\\n            .classed('fadeout', function (d) {\\n                return d.chart.isLegendableHidden(d);\\n            });\\n\\n        if (legendables.some(dc.pluck('dashstyle'))) {\\n            itemEnter\\n                .append('line')\\n                .attr('x1', 0)\\n                .attr('y1', _itemHeight / 2)\\n                .attr('x2', _itemHeight)\\n                .attr('y2', _itemHeight / 2)\\n                .attr('stroke-width', 2)\\n                .attr('stroke-dasharray', dc.pluck('dashstyle'))\\n                .attr('stroke', dc.pluck('color'));\\n        } else {\\n            itemEnter\\n                .append('rect')\\n                .attr('width', _itemHeight)\\n                .attr('height', _itemHeight)\\n                .attr('fill', function (d) {return d ? d.color : 'blue';});\\n        }\\n\\n        itemEnter.append('text')\\n                .text(_legendText)\\n                .attr('x', _itemHeight + LABEL_GAP)\\n                .attr('y', function () {\\n                    return _itemHeight / 2 + (this.clientHeight ? this.clientHeight : 13) / 2 - 2;\\n                });\\n\\n        var _cumulativeLegendTextWidth = 0;\\n        var row = 0;\\n        itemEnter.attr('transform', function (d, i) {\\n            if (_horizontal) {\\n                var itemWidth   = _autoItemWidth === true ? this.getBBox().width + _gap : _itemWidth;\\n                if ((_cumulativeLegendTextWidth + itemWidth) > _legendWidth && _cumulativeLegendTextWidth > 0) {\\n                    ++row;\\n                    _cumulativeLegendTextWidth = 0;\\n                }\\n                var translateBy = 'translate(' + _cumulativeLegendTextWidth + ',' + row * legendItemHeight() + ')';\\n                _cumulativeLegendTextWidth += itemWidth;\\n                return translateBy;\\n            } else {\\n                return 'translate(0,' + i * legendItemHeight() + ')';\\n            }\\n        });\\n    };\\n\\n    function legendItemHeight () {\\n        return _gap + _itemHeight;\\n    }\\n\\n    /**\\n     * Set or get x coordinate for legend widget.\\n     * @method x\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [x=0]\\n     * @returns {Number|dc.legend}\\n     */\\n    _legend.x = function (x) {\\n        if (!arguments.length) {\\n            return _x;\\n        }\\n        _x = x;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Set or get y coordinate for legend widget.\\n     * @method y\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [y=0]\\n     * @returns {Number|dc.legend}\\n     */\\n    _legend.y = function (y) {\\n        if (!arguments.length) {\\n            return _y;\\n        }\\n        _y = y;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Set or get gap between legend items.\\n     * @method gap\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [gap=5]\\n     * @returns {Number|dc.legend}\\n     */\\n    _legend.gap = function (gap) {\\n        if (!arguments.length) {\\n            return _gap;\\n        }\\n        _gap = gap;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Set or get legend item height.\\n     * @method itemHeight\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [itemHeight=12]\\n     * @returns {Number|dc.legend}\\n     */\\n    _legend.itemHeight = function (itemHeight) {\\n        if (!arguments.length) {\\n            return _itemHeight;\\n        }\\n        _itemHeight = itemHeight;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Position legend horizontally instead of vertically.\\n     * @method horizontal\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Boolean} [horizontal=false]\\n     * @returns {Boolean|dc.legend}\\n     */\\n    _legend.horizontal = function (horizontal) {\\n        if (!arguments.length) {\\n            return _horizontal;\\n        }\\n        _horizontal = horizontal;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Maximum width for horizontal legend.\\n     * @method legendWidth\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [legendWidth=500]\\n     * @returns {Number|dc.legend}\\n     */\\n    _legend.legendWidth = function (legendWidth) {\\n        if (!arguments.length) {\\n            return _legendWidth;\\n        }\\n        _legendWidth = legendWidth;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Legend item width for horizontal legend.\\n     * @method itemWidth\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [itemWidth=70]\\n     * @returns {Number|dc.legend}\\n     */\\n    _legend.itemWidth = function (itemWidth) {\\n        if (!arguments.length) {\\n            return _itemWidth;\\n        }\\n        _itemWidth = itemWidth;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Turn automatic width for legend items on or off. If true, {@link dc.legend#itemWidth itemWidth} is ignored.\\n     * This setting takes into account the {@link dc.legend#gap gap}.\\n     * @method autoItemWidth\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Boolean} [autoItemWidth=false]\\n     * @returns {Boolean|dc.legend}\\n     */\\n    _legend.autoItemWidth = function (autoItemWidth) {\\n        if (!arguments.length) {\\n            return _autoItemWidth;\\n        }\\n        _autoItemWidth = autoItemWidth;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Set or get the legend text function. The legend widget uses this function to render the legend\\n     * text for each item. If no function is specified the legend widget will display the names\\n     * associated with each group.\\n     * @method legendText\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Function} [legendText]\\n     * @returns {Function|dc.legend}\\n     * @example\\n     * // default legendText\\n     * legend.legendText(dc.pluck('name'))\\n     *\\n     * // create numbered legend items\\n     * chart.legend(dc.legend().legendText(function(d, i) { return i + '. ' + d.name; }))\\n     *\\n     * // create legend displaying group counts\\n     * chart.legend(dc.legend().legendText(function(d) { return d.name + ': ' d.data; }))\\n     **/\\n    _legend.legendText = function (legendText) {\\n        if (!arguments.length) {\\n            return _legendText;\\n        }\\n        _legendText = legendText;\\n        return _legend;\\n    };\\n\\n    /**\\n     * Maximum number of legend items to display\\n     * @method maxItems\\n     * @memberof dc.legend\\n     * @instance\\n     * @param  {Number} [maxItems]\\n     * @return {dc.legend}\\n     */\\n    _legend.maxItems = function (maxItems) {\\n        if (!arguments.length) {\\n            return _maxItems;\\n        }\\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\\n        return _legend;\\n    };\\n\\n    return _legend;\\n};\\n\\n/**\\n * A scatter plot chart\\n *\\n * Examples:\\n * - {@link http://dc-js.github.io/dc.js/examples/scatter.html Scatter Chart}\\n * - {@link http://dc-js.github.io/dc.js/examples/multi-scatter.html Multi-Scatter Chart}\\n * @class scatterPlot\\n * @memberof dc\\n * @mixes dc.coordinateGridMixin\\n * @example\\n * // create a scatter plot under #chart-container1 element using the default global chart group\\n * var chart1 = dc.scatterPlot('#chart-container1');\\n * // create a scatter plot under #chart-container2 element using chart group A\\n * var chart2 = dc.scatterPlot('#chart-container2', 'chartGroupA');\\n * // create a sub-chart under a composite parent chart\\n * var chart3 = dc.scatterPlot(compositeChart);\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.scatterPlot}\\n */\\ndc.scatterPlot = function (parent, chartGroup) {\\n    var _chart = dc.coordinateGridMixin({});\\n    var _symbol = d3.svg.symbol();\\n\\n    var _existenceAccessor = function (d) { return d.value; };\\n\\n    var originalKeyAccessor = _chart.keyAccessor();\\n    _chart.keyAccessor(function (d) { return originalKeyAccessor(d)[0]; });\\n    _chart.valueAccessor(function (d) { return originalKeyAccessor(d)[1]; });\\n    _chart.colorAccessor(function () { return _chart._groupName; });\\n\\n    _chart.title(function (d) {\\n        // this basically just counteracts the setting of its own key/value accessors\\n        // see https://github.com/dc-js/dc.js/issues/702\\n        return _chart.keyAccessor()(d) + ',' + _chart.valueAccessor()(d) + ': ' +\\n            _chart.existenceAccessor()(d);\\n    });\\n\\n    var _locator = function (d) {\\n        return 'translate(' + _chart.x()(_chart.keyAccessor()(d)) + ',' +\\n                              _chart.y()(_chart.valueAccessor()(d)) + ')';\\n    };\\n\\n    var _highlightedSize = 7;\\n    var _symbolSize = 5;\\n    var _excludedSize = 3;\\n    var _excludedColor = null;\\n    var _excludedOpacity = 1.0;\\n    var _emptySize = 0;\\n    var _emptyOpacity = 0;\\n    var _nonemptyOpacity = 1;\\n    var _emptyColor = null;\\n    var _filtered = [];\\n\\n    function elementSize (d, i) {\\n        if (!_existenceAccessor(d)) {\\n            return Math.pow(_emptySize, 2);\\n        } else if (_filtered[i]) {\\n            return Math.pow(_symbolSize, 2);\\n        } else {\\n            return Math.pow(_excludedSize, 2);\\n        }\\n    }\\n    _symbol.size(elementSize);\\n\\n    dc.override(_chart, '_filter', function (filter) {\\n        if (!arguments.length) {\\n            return _chart.__filter();\\n        }\\n\\n        return _chart.__filter(dc.filters.RangedTwoDimensionalFilter(filter));\\n    });\\n\\n    _chart.plotData = function () {\\n        var symbols = _chart.chartBodyG().selectAll('path.symbol')\\n            .data(_chart.data());\\n\\n        symbols\\n            .enter()\\n        .append('path')\\n            .attr('class', 'symbol')\\n            .attr('opacity', 0)\\n            .attr('fill', _chart.getColor)\\n            .attr('transform', _locator);\\n\\n        symbols.call(renderTitles, _chart.data());\\n\\n        symbols.each(function (d, i) {\\n            _filtered[i] = !_chart.filter() || _chart.filter().isFiltered([d.key[0], d.key[1]]);\\n        });\\n\\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('opacity', function (d, i) {\\n                if (!_existenceAccessor(d)) {\\n                    return _emptyOpacity;\\n                } else if (_filtered[i]) {\\n                    return _nonemptyOpacity;\\n                } else {\\n                    return _chart.excludedOpacity();\\n                }\\n            })\\n            .attr('fill', function (d, i) {\\n                if (_emptyColor && !_existenceAccessor(d)) {\\n                    return _emptyColor;\\n                } else if (_chart.excludedColor() && !_filtered[i]) {\\n                    return _chart.excludedColor();\\n                } else {\\n                    return _chart.getColor(d);\\n                }\\n            })\\n            .attr('transform', _locator)\\n            .attr('d', _symbol);\\n\\n        dc.transition(symbols.exit(), _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('opacity', 0).remove();\\n    };\\n\\n    function renderTitles (symbol, d) {\\n        if (_chart.renderTitle()) {\\n            symbol.selectAll('title').remove();\\n            symbol.append('title').text(function (d) {\\n                return _chart.title()(d);\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Get or set the existence accessor.  If a point exists, it is drawn with\\n     * {@link dc.scatterPlot#symbolSize symbolSize} radius and\\n     * opacity 1; if it does not exist, it is drawn with\\n     * {@link dc.scatterPlot#emptySize emptySize} radius and opacity 0. By default,\\n     * the existence accessor checks if the reduced value is truthy.\\n     * @method existenceAccessor\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link dc.scatterPlot#symbolSize symbolSize}\\n     * @see {@link dc.scatterPlot#emptySize emptySize}\\n     * @example\\n     * // default accessor\\n     * chart.existenceAccessor(function (d) { return d.value; });\\n     * @param {Function} [accessor]\\n     * @returns {Function|dc.scatterPlot}\\n     */\\n    _chart.existenceAccessor = function (accessor) {\\n        if (!arguments.length) {\\n            return _existenceAccessor;\\n        }\\n        _existenceAccessor = accessor;\\n        return this;\\n    };\\n\\n    /**\\n     * Get or set the symbol type used for each point. By default the symbol is a circle.\\n     * Type can be a constant or an accessor.\\n     * @method symbol\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol_type d3.svg.symbol.type}\\n     * @example\\n     * // Circle type\\n     * chart.symbol('circle');\\n     * // Square type\\n     * chart.symbol('square');\\n     * @param {String|Function} [type='circle']\\n     * @returns {String|Function|dc.scatterPlot}\\n     */\\n    _chart.symbol = function (type) {\\n        if (!arguments.length) {\\n            return _symbol.type();\\n        }\\n        _symbol.type(type);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the symbol generator. By default `dc.scatterPlot` will use\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol d3.svg.symbol()}\\n     * to generate symbols. `dc.scatterPlot` will set the\\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol_size size accessor}\\n     * on the symbol generator.\\n     * @method customSymbol\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol d3.svg.symbol}\\n     * @see {@link https://stackoverflow.com/questions/25332120/create-additional-d3-js-symbols Create additional D3.js symbols}\\n     * @param {String|Function} [customSymbol=d3.svg.symbol()]\\n     * @returns {String|Function|dc.scatterPlot}\\n     */\\n    _chart.customSymbol = function (customSymbol) {\\n        if (!arguments.length) {\\n            return _symbol;\\n        }\\n        _symbol = customSymbol;\\n        _symbol.size(elementSize);\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get radius for symbols.\\n     * @method symbolSize\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol_size d3.svg.symbol.size}\\n     * @param {Number} [symbolSize=3]\\n     * @returns {Number|dc.scatterPlot}\\n     */\\n    _chart.symbolSize = function (symbolSize) {\\n        if (!arguments.length) {\\n            return _symbolSize;\\n        }\\n        _symbolSize = symbolSize;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get radius for highlighted symbols.\\n     * @method highlightedSize\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol_size d3.svg.symbol.size}\\n     * @param {Number} [highlightedSize=5]\\n     * @returns {Number|dc.scatterPlot}\\n     */\\n    _chart.highlightedSize = function (highlightedSize) {\\n        if (!arguments.length) {\\n            return _highlightedSize;\\n        }\\n        _highlightedSize = highlightedSize;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get size for symbols excluded from this chart's filter. If null, no\\n     * special size is applied for symbols based on their filter status.\\n     * @method excludedSize\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol_size d3.svg.symbol.size}\\n     * @param {Number} [excludedSize=null]\\n     * @returns {Number|dc.scatterPlot}\\n     */\\n    _chart.excludedSize = function (excludedSize) {\\n        if (!arguments.length) {\\n            return _excludedSize;\\n        }\\n        _excludedSize = excludedSize;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get color for symbols excluded from this chart's filter. If null, no\\n     * special color is applied for symbols based on their filter status.\\n     * @method excludedColor\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @param {Number} [excludedColor=null]\\n     * @returns {Number|dc.scatterPlot}\\n     */\\n    _chart.excludedColor = function (excludedColor) {\\n        if (!arguments.length) {\\n            return _excludedColor;\\n        }\\n        _excludedColor = excludedColor;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get opacity for symbols excluded from this chart's filter.\\n     * @method excludedOpacity\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @param {Number} [excludedOpacity=1.0]\\n     * @returns {Number|dc.scatterPlot}\\n     */\\n    _chart.excludedOpacity = function (excludedOpacity) {\\n        if (!arguments.length) {\\n            return _excludedOpacity;\\n        }\\n        _excludedOpacity = excludedOpacity;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get radius for symbols when the group is empty.\\n     * @method emptySize\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#symbol_size d3.svg.symbol.size}\\n     * @param {Number} [emptySize=0]\\n     * @returns {Number|dc.scatterPlot}\\n     */\\n    _chart.hiddenSize = _chart.emptySize = function (emptySize) {\\n        if (!arguments.length) {\\n            return _emptySize;\\n        }\\n        _emptySize = emptySize;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get color for symbols when the group is empty. If null, just use the\\n     * {@link dc.colorMixin#colors colorMixin.colors} color scale zero value.\\n     * @name emptyColor\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @param {String} [emptyColor=null]\\n     * @return {String}\\n     * @return {dc.scatterPlot}/\\n     */\\n    _chart.emptyColor = function (emptyColor) {\\n        if (!arguments.length) {\\n            return _emptyColor;\\n        }\\n        _emptyColor = emptyColor;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get opacity for symbols when the group is empty.\\n     * @name emptyOpacity\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @param {Number} [emptyOpacity=0]\\n     * @return {Number}\\n     * @return {dc.scatterPlot}\\n     */\\n    _chart.emptyOpacity = function (emptyOpacity) {\\n        if (!arguments.length) {\\n            return _emptyOpacity;\\n        }\\n        _emptyOpacity = emptyOpacity;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get opacity for symbols when the group is not empty.\\n     * @name nonemptyOpacity\\n     * @memberof dc.scatterPlot\\n     * @instance\\n     * @param {Number} [nonemptyOpacity=1]\\n     * @return {Number}\\n     * @return {dc.scatterPlot}\\n     */\\n    _chart.nonemptyOpacity = function (nonemptyOpacity) {\\n        if (!arguments.length) {\\n            return _emptyOpacity;\\n        }\\n        _nonemptyOpacity = nonemptyOpacity;\\n        return _chart;\\n    };\\n\\n    _chart.legendables = function () {\\n        return [{chart: _chart, name: _chart._groupName, color: _chart.getColor()}];\\n    };\\n\\n    _chart.legendHighlight = function (d) {\\n        resizeSymbolsWhere(function (symbol) {\\n            return symbol.attr('fill') === d.color;\\n        }, _highlightedSize);\\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\\n            return d3.select(this).attr('fill') !== d.color;\\n        }).classed('fadeout', true);\\n    };\\n\\n    _chart.legendReset = function (d) {\\n        resizeSymbolsWhere(function (symbol) {\\n            return symbol.attr('fill') === d.color;\\n        }, _symbolSize);\\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\\n            return d3.select(this).attr('fill') !== d.color;\\n        }).classed('fadeout', false);\\n    };\\n\\n    function resizeSymbolsWhere (condition, size) {\\n        var symbols = _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\\n            return condition(d3.select(this));\\n        });\\n        var oldSize = _symbol.size();\\n        _symbol.size(Math.pow(size, 2));\\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay()).attr('d', _symbol);\\n        _symbol.size(oldSize);\\n    }\\n\\n    _chart.setHandlePaths = function () {\\n        // no handle paths for poly-brushes\\n    };\\n\\n    _chart.extendBrush = function () {\\n        var extent = _chart.brush().extent();\\n        if (_chart.round()) {\\n            extent[0] = extent[0].map(_chart.round());\\n            extent[1] = extent[1].map(_chart.round());\\n\\n            _chart.g().select('.brush')\\n                .call(_chart.brush().extent(extent));\\n        }\\n        return extent;\\n    };\\n\\n    _chart.brushIsEmpty = function (extent) {\\n        return _chart.brush().empty() || !extent || extent[0][0] >= extent[1][0] || extent[0][1] >= extent[1][1];\\n    };\\n\\n    _chart._brushing = function () {\\n        var extent = _chart.extendBrush();\\n\\n        _chart.redrawBrush(_chart.g());\\n\\n        if (_chart.brushIsEmpty(extent)) {\\n            dc.events.trigger(function () {\\n                _chart.filter(null);\\n                _chart.redrawGroup();\\n            });\\n\\n        } else {\\n            var ranged2DFilter = dc.filters.RangedTwoDimensionalFilter(extent);\\n            dc.events.trigger(function () {\\n                _chart.filter(null);\\n                _chart.filter(ranged2DFilter);\\n                _chart.redrawGroup();\\n            }, dc.constants.EVENT_DELAY);\\n\\n        }\\n    };\\n\\n    _chart.setBrushY = function (gBrush) {\\n        gBrush.call(_chart.brush().y(_chart.y()));\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * A display of a single numeric value.\\n * Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and\\n * a valueAccessor that returns a single value.\\n * @class numberDisplay\\n * @memberof dc\\n * @mixes dc.baseMixin\\n * @example\\n * // create a number display under #chart-container1 element using the default global chart group\\n * var display1 = dc.numberDisplay('#chart-container1');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.numberDisplay}\\n */\\ndc.numberDisplay = function (parent, chartGroup) {\\n    var SPAN_CLASS = 'number-display';\\n    var _formatNumber = d3.format('.2s');\\n    var _chart = dc.baseMixin({});\\n    var _html = {one: '', some: '', none: ''};\\n    var _lastValue;\\n\\n    // dimension not required\\n    _chart._mandatoryAttributes(['group']);\\n\\n    // default to ordering by value, to emulate old group.top(1) behavior when multiple groups\\n    _chart.ordering(function (kv) { return kv.value; });\\n\\n    /**\\n     * Gets or sets an optional object specifying HTML templates to use depending on the number\\n     * displayed.  The text `%number` will be replaced with the current value.\\n     * - one: HTML template to use if the number is 1\\n     * - zero: HTML template to use if the number is 0\\n     * - some: HTML template to use otherwise\\n     * @method html\\n     * @memberof dc.numberDisplay\\n     * @instance\\n     * @example\\n     * numberWidget.html({\\n     *      one:'%number record',\\n     *      some:'%number records',\\n     *      none:'no records'})\\n     * @param {{one:String, some:String, none:String}} [html={one: '', some: '', none: ''}]\\n     * @returns {{one:String, some:String, none:String}|dc.numberDisplay}\\n     */\\n    _chart.html = function (html) {\\n        if (!arguments.length) {\\n            return _html;\\n        }\\n        if (html.none) {\\n            _html.none = html.none;//if none available\\n        } else if (html.one) {\\n            _html.none = html.one;//if none not available use one\\n        } else if (html.some) {\\n            _html.none = html.some;//if none and one not available use some\\n        }\\n        if (html.one) {\\n            _html.one = html.one;//if one available\\n        } else if (html.some) {\\n            _html.one = html.some;//if one not available use some\\n        }\\n        if (html.some) {\\n            _html.some = html.some;//if some available\\n        } else if (html.one) {\\n            _html.some = html.one;//if some not available use one\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Calculate and return the underlying value of the display.\\n     * @method value\\n     * @memberof dc.numberDisplay\\n     * @instance\\n     * @returns {Number}\\n     */\\n    _chart.value = function () {\\n        return _chart.data();\\n    };\\n\\n    function maxBin (all) {\\n        if (!all.length) {\\n            return null;\\n        }\\n        var sorted = _chart._computeOrderedGroups(all);\\n        return sorted[sorted.length - 1];\\n    }\\n    _chart.data(function (group) {\\n        var valObj = group.value ? group.value() : maxBin(group.all());\\n        return _chart.valueAccessor()(valObj);\\n    });\\n\\n    _chart.transitionDuration(250); // good default\\n    _chart.transitionDelay(0);\\n\\n    _chart._doRender = function () {\\n        var newValue = _chart.value(),\\n            span = _chart.selectAll('.' + SPAN_CLASS);\\n\\n        if (span.empty()) {\\n            span = span.data([0])\\n                .enter()\\n                .append('span')\\n                .attr('class', SPAN_CLASS);\\n        }\\n\\n        span.transition()\\n            .duration(_chart.transitionDuration())\\n            .delay(_chart.transitionDelay())\\n            .ease('quad-out-in')\\n            .tween('text', function () {\\n                // [XA] don't try and interpolate from Infinity, else this breaks.\\n                var interpStart = isFinite(_lastValue) ? _lastValue : 0;\\n                var interp = d3.interpolateNumber(interpStart || 0, newValue);\\n                _lastValue = newValue;\\n                return function (t) {\\n                    var html = null, num = _chart.formatNumber()(interp(t));\\n                    if (newValue === 0 && (_html.none !== '')) {\\n                        html = _html.none;\\n                    } else if (newValue === 1 && (_html.one !== '')) {\\n                        html = _html.one;\\n                    } else if (_html.some !== '') {\\n                        html = _html.some;\\n                    }\\n                    this.innerHTML = html ? html.replace('%number', num) : num;\\n                };\\n            });\\n    };\\n\\n    _chart._doRedraw = function () {\\n        return _chart._doRender();\\n    };\\n\\n    /**\\n     * Get or set a function to format the value for the display.\\n     * @method formatNumber\\n     * @memberof dc.numberDisplay\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md d3.format}\\n     * @param {Function} [formatter=d3.format('.2s')]\\n     * @returns {Function|dc.numberDisplay}\\n     */\\n    _chart.formatNumber = function (formatter) {\\n        if (!arguments.length) {\\n            return _formatNumber;\\n        }\\n        _formatNumber = formatter;\\n        return _chart;\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * A heat map is matrix that represents the values of two dimensions of data using colors.\\n * @class heatMap\\n * @memberof dc\\n * @mixes dc.colorMixin\\n * @mixes dc.marginMixin\\n * @mixes dc.baseMixin\\n * @example\\n * // create a heat map under #chart-container1 element using the default global chart group\\n * var heatMap1 = dc.heatMap('#chart-container1');\\n * // create a heat map under #chart-container2 element using chart group A\\n * var heatMap2 = dc.heatMap('#chart-container2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.heatMap}\\n */\\ndc.heatMap = function (parent, chartGroup) {\\n\\n    var DEFAULT_BORDER_RADIUS = 6.75;\\n\\n    var _chartBody;\\n\\n    var _cols;\\n    var _rows;\\n    var _colOrdering = d3.ascending;\\n    var _rowOrdering = d3.ascending;\\n    var _colScale = d3.scale.ordinal();\\n    var _rowScale = d3.scale.ordinal();\\n\\n    var _xBorderRadius = DEFAULT_BORDER_RADIUS;\\n    var _yBorderRadius = DEFAULT_BORDER_RADIUS;\\n\\n    var _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin({})));\\n    _chart._mandatoryAttributes(['group']);\\n    _chart.title(_chart.colorAccessor());\\n\\n    var _colsLabel = function (d) {\\n        return d;\\n    };\\n    var _rowsLabel = function (d) {\\n        return d;\\n    };\\n\\n    /**\\n     * Set or get the column label function. The chart class uses this function to render\\n     * column labels on the X axis. It is passed the column name.\\n     * @method colsLabel\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @example\\n     * // the default label function just returns the name\\n     * chart.colsLabel(function(d) { return d; });\\n     * @param  {Function} [labelFunction=function(d) { return d; }]\\n     * @returns {Function|dc.heatMap}\\n     */\\n    _chart.colsLabel = function (labelFunction) {\\n        if (!arguments.length) {\\n            return _colsLabel;\\n        }\\n        _colsLabel = labelFunction;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Set or get the row label function. The chart class uses this function to render\\n     * row labels on the Y axis. It is passed the row name.\\n     * @method rowsLabel\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @example\\n     * // the default label function just returns the name\\n     * chart.rowsLabel(function(d) { return d; });\\n     * @param  {Function} [labelFunction=function(d) { return d; }]\\n     * @returns {Function|dc.heatMap}\\n     */\\n    _chart.rowsLabel = function (labelFunction) {\\n        if (!arguments.length) {\\n            return _rowsLabel;\\n        }\\n        _rowsLabel = labelFunction;\\n        return _chart;\\n    };\\n\\n    var _xAxisOnClick = function (d) { filterAxis(0, d); };\\n    var _yAxisOnClick = function (d) { filterAxis(1, d); };\\n    var _boxOnClick = function (d) {\\n        var filter = d.key;\\n        dc.events.trigger(function () {\\n            _chart.filter(filter);\\n            _chart.redrawGroup();\\n        });\\n    };\\n\\n    function filterAxis (axis, value) {\\n        var cellsOnAxis = _chart.selectAll('.box-group').filter(function (d) {\\n            return d.key[axis] === value;\\n        });\\n        var unfilteredCellsOnAxis = cellsOnAxis.filter(function (d) {\\n            return !_chart.hasFilter(d.key);\\n        });\\n        dc.events.trigger(function () {\\n            var selection = unfilteredCellsOnAxis.empty() ? cellsOnAxis : unfilteredCellsOnAxis;\\n            var filters = selection.data().map(function (kv) {\\n                return dc.filters.TwoDimensionalFilter(kv.key);\\n            });\\n            _chart._filter([filters]);\\n            _chart.redrawGroup();\\n        });\\n    }\\n\\n    dc.override(_chart, 'filter', function (filter) {\\n        if (!arguments.length) {\\n            return _chart._filter();\\n        }\\n\\n        return _chart._filter(dc.filters.TwoDimensionalFilter(filter));\\n    });\\n\\n    /**\\n     * Gets or sets the values used to create the rows of the heatmap, as an array. By default, all\\n     * the values will be fetched from the data using the value accessor.\\n     * @method rows\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @param  {Array<String|Number>} [rows]\\n     * @returns {Array<String|Number>|dc.heatMap}\\n     */\\n\\n    _chart.rows = function (rows) {\\n        if (!arguments.length) {\\n            return _rows;\\n        }\\n        _rows = rows;\\n        return _chart;\\n    };\\n\\n    /**\\n     #### .rowOrdering([orderFunction])\\n     Get or set an accessor to order the rows.  Default is d3.ascending.\\n     */\\n    _chart.rowOrdering = function (_) {\\n        if (!arguments.length) {\\n            return _rowOrdering;\\n        }\\n        _rowOrdering = _;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all\\n     * the values will be fetched from the data using the key accessor.\\n     * @method cols\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @param  {Array<String|Number>} [cols]\\n     * @returns {Array<String|Number>|dc.heatMap}\\n     */\\n    _chart.cols = function (cols) {\\n        if (!arguments.length) {\\n            return _cols;\\n        }\\n        _cols = cols;\\n        return _chart;\\n    };\\n\\n    /**\\n     #### .colOrdering([orderFunction])\\n     Get or set an accessor to order the cols.  Default is ascending.\\n     */\\n    _chart.colOrdering = function (_) {\\n        if (!arguments.length) {\\n            return _colOrdering;\\n        }\\n        _colOrdering = _;\\n        return _chart;\\n    };\\n\\n    _chart._doRender = function () {\\n        _chart.resetSvg();\\n\\n        _chartBody = _chart.svg()\\n            .append('g')\\n            .attr('class', 'heatmap')\\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\\n\\n        return _chart._doRedraw();\\n    };\\n\\n    _chart._doRedraw = function () {\\n        var data = _chart.data(),\\n            rows = _chart.rows() || data.map(_chart.valueAccessor()),\\n            cols = _chart.cols() || data.map(_chart.keyAccessor());\\n        if (_rowOrdering) {\\n            rows = rows.sort(_rowOrdering);\\n        }\\n        if (_colOrdering) {\\n            cols = cols.sort(_colOrdering);\\n        }\\n        rows = _rowScale.domain(rows);\\n        cols = _colScale.domain(cols);\\n\\n        var rowCount = rows.domain().length,\\n            colCount = cols.domain().length,\\n            boxWidth = Math.floor(_chart.effectiveWidth() / colCount),\\n            boxHeight = Math.floor(_chart.effectiveHeight() / rowCount);\\n\\n        cols.rangeRoundBands([0, _chart.effectiveWidth()]);\\n        rows.rangeRoundBands([_chart.effectiveHeight(), 0]);\\n\\n        var boxes = _chartBody.selectAll('g.box-group').data(_chart.data(), function (d, i) {\\n            return _chart.keyAccessor()(d, i) + '\\\\0' + _chart.valueAccessor()(d, i);\\n        });\\n        var gEnter = boxes.enter().append('g')\\n            .attr('class', 'box-group');\\n\\n        gEnter.append('rect')\\n            .attr('class', 'heat-box')\\n            .attr('fill', 'white')\\n            .on('click', _chart.boxOnClick());\\n\\n        if (_chart.renderTitle()) {\\n            gEnter.append('title');\\n            boxes.select('title').text(_chart.title());\\n        }\\n\\n        dc.transition(boxes.select('rect'), _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\\n            .attr('rx', _xBorderRadius)\\n            .attr('ry', _yBorderRadius)\\n            .attr('fill', _chart.getColor)\\n            .attr('width', boxWidth)\\n            .attr('height', boxHeight);\\n\\n        boxes.exit().remove();\\n\\n        var gCols = _chartBody.select('g.cols');\\n        if (gCols.empty()) {\\n            gCols = _chartBody.append('g').attr('class', 'cols axis');\\n        }\\n        var gColsText = gCols.selectAll('text').data(cols.domain());\\n        gColsText.enter().append('text')\\n              .attr('x', function (d) { return cols(d) + boxWidth / 2; })\\n              .style('text-anchor', 'middle')\\n              .attr('y', _chart.effectiveHeight())\\n              .attr('dy', 12)\\n              .on('click', _chart.xAxisOnClick())\\n              .text(_chart.colsLabel());\\n        dc.transition(gColsText, _chart.transitionDuration(), _chart.transitionDelay())\\n               .text(_chart.colsLabel())\\n               .attr('x', function (d) { return cols(d) + boxWidth / 2; })\\n               .attr('y', _chart.effectiveHeight());\\n        gColsText.exit().remove();\\n        var gRows = _chartBody.select('g.rows');\\n        if (gRows.empty()) {\\n            gRows = _chartBody.append('g').attr('class', 'rows axis');\\n        }\\n        var gRowsText = gRows.selectAll('text').data(rows.domain());\\n        gRowsText.enter().append('text')\\n              .attr('dy', 6)\\n              .style('text-anchor', 'end')\\n              .attr('x', 0)\\n              .attr('dx', -2)\\n              .on('click', _chart.yAxisOnClick())\\n              .text(_chart.rowsLabel());\\n        dc.transition(gRowsText, _chart.transitionDuration(), _chart.transitionDelay())\\n              .text(_chart.rowsLabel())\\n              .attr('y', function (d) { return rows(d) + boxHeight / 2; });\\n        gRowsText.exit().remove();\\n\\n        if (_chart.hasFilter()) {\\n            _chart.selectAll('g.box-group').each(function (d) {\\n                if (_chart.isSelectedNode(d)) {\\n                    _chart.highlightSelected(this);\\n                } else {\\n                    _chart.fadeDeselected(this);\\n                }\\n            });\\n        } else {\\n            _chart.selectAll('g.box-group').each(function () {\\n                _chart.resetHighlight(this);\\n            });\\n        }\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the handler that fires when an individual cell is clicked in the heatmap.\\n     * By default, filtering of the cell will be toggled.\\n     * @method boxOnClick\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @example\\n     * // default box on click handler\\n     * chart.boxOnClick(function (d) {\\n     *     var filter = d.key;\\n     *     dc.events.trigger(function () {\\n     *         _chart.filter(filter);\\n     *         _chart.redrawGroup();\\n     *     });\\n     * });\\n     * @param  {Function} [handler]\\n     * @returns {Function|dc.heatMap}\\n     */\\n    _chart.boxOnClick = function (handler) {\\n        if (!arguments.length) {\\n            return _boxOnClick;\\n        }\\n        _boxOnClick = handler;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the handler that fires when a column tick is clicked in the x axis.\\n     * By default, if any cells in the column are unselected, the whole column will be selected,\\n     * otherwise the whole column will be unselected.\\n     * @method xAxisOnClick\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @param  {Function} [handler]\\n     * @returns {Function|dc.heatMap}\\n     */\\n    _chart.xAxisOnClick = function (handler) {\\n        if (!arguments.length) {\\n            return _xAxisOnClick;\\n        }\\n        _xAxisOnClick = handler;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the handler that fires when a row tick is clicked in the y axis.\\n     * By default, if any cells in the row are unselected, the whole row will be selected,\\n     * otherwise the whole row will be unselected.\\n     * @method yAxisOnClick\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @param  {Function} [handler]\\n     * @returns {Function|dc.heatMap}\\n     */\\n    _chart.yAxisOnClick = function (handler) {\\n        if (!arguments.length) {\\n            return _yAxisOnClick;\\n        }\\n        _yAxisOnClick = handler;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the X border radius.  Set to 0 to get full rectangles.\\n     * @method xBorderRadius\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @param  {Number} [xBorderRadius=6.75]\\n     * @returns {Number|dc.heatMap}\\n     */\\n    _chart.xBorderRadius = function (xBorderRadius) {\\n        if (!arguments.length) {\\n            return _xBorderRadius;\\n        }\\n        _xBorderRadius = xBorderRadius;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Gets or sets the Y border radius.  Set to 0 to get full rectangles.\\n     * @method yBorderRadius\\n     * @memberof dc.heatMap\\n     * @instance\\n     * @param  {Number} [yBorderRadius=6.75]\\n     * @returns {Number|dc.heatMap}\\n     */\\n    _chart.yBorderRadius = function (yBorderRadius) {\\n        if (!arguments.length) {\\n            return _yBorderRadius;\\n        }\\n        _yBorderRadius = yBorderRadius;\\n        return _chart;\\n    };\\n\\n    _chart.isSelectedNode = function (d) {\\n        return _chart.hasFilter(d.key);\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n// https://github.com/d3/d3-plugins/blob/master/box/box.js\\n(function () {\\n\\n    // Inspired by http://informationandvisualization.de/blog/box-plot\\n    d3.box = function () {\\n        var width = 1,\\n            height = 1,\\n            duration = 0,\\n            delay = 0,\\n            domain = null,\\n            value = Number,\\n            whiskers = boxWhiskers,\\n            quartiles = boxQuartiles,\\n            tickFormat = null;\\n\\n        // For each small multiple…\\n        function box (g) {\\n            g.each(function (d, i) {\\n                d = d.map(value).sort(d3.ascending);\\n                var g = d3.select(this),\\n                    n = d.length,\\n                    min = d[0],\\n                    max = d[n - 1];\\n\\n                // Compute quartiles. Must return exactly 3 elements.\\n                var quartileData = d.quartiles = quartiles(d);\\n\\n                // Compute whiskers. Must return exactly 2 elements, or null.\\n                var whiskerIndices = whiskers && whiskers.call(this, d, i),\\n                    whiskerData = whiskerIndices && whiskerIndices.map(function (i) { return d[i]; });\\n\\n                // Compute outliers. If no whiskers are specified, all data are 'outliers'.\\n                // We compute the outliers as indices, so that we can join across transitions!\\n                var outlierIndices = whiskerIndices ?\\n                    d3.range(0, whiskerIndices[0]).concat(d3.range(whiskerIndices[1] + 1, n)) : d3.range(n);\\n\\n                // Compute the new x-scale.\\n                var x1 = d3.scale.linear()\\n                    .domain(domain && domain.call(this, d, i) || [min, max])\\n                    .range([height, 0]);\\n\\n                // Retrieve the old x-scale, if this is an update.\\n                var x0 = this.__chart__ || d3.scale.linear()\\n                    .domain([0, Infinity])\\n                    .range(x1.range());\\n\\n                // Stash the new scale.\\n                this.__chart__ = x1;\\n\\n                // Note: the box, median, and box tick elements are fixed in number,\\n                // so we only have to handle enter and update. In contrast, the outliers\\n                // and other elements are variable, so we need to exit them! Variable\\n                // elements also fade in and out.\\n\\n                // Update center line: the vertical line spanning the whiskers.\\n                var center = g.selectAll('line.center')\\n                    .data(whiskerData ? [whiskerData] : []);\\n\\n                center.enter().insert('line', 'rect')\\n                    .attr('class', 'center')\\n                    .attr('x1', width / 2)\\n                    .attr('y1', function (d) { return x0(d[0]); })\\n                    .attr('x2', width / 2)\\n                    .attr('y2', function (d) { return x0(d[1]); })\\n                    .style('opacity', 1e-6)\\n                    .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .style('opacity', 1)\\n                    .attr('y1', function (d) { return x1(d[0]); })\\n                    .attr('y2', function (d) { return x1(d[1]); });\\n\\n                center.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .style('opacity', 1)\\n                    .attr('x1', width / 2)\\n                    .attr('x2', width / 2)\\n                    .attr('y1', function (d) { return x1(d[0]); })\\n                    .attr('y2', function (d) { return x1(d[1]); });\\n\\n                center.exit().transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .style('opacity', 1e-6)\\n                    .attr('y1', function (d) { return x1(d[0]); })\\n                    .attr('y2', function (d) { return x1(d[1]); })\\n                    .remove();\\n\\n                // Update innerquartile box.\\n                var box = g.selectAll('rect.box')\\n                    .data([quartileData]);\\n\\n                box.enter().append('rect')\\n                    .attr('class', 'box')\\n                    .attr('x', 0)\\n                    .attr('y', function (d) { return x0(d[2]); })\\n                    .attr('width', width)\\n                    .attr('height', function (d) { return x0(d[0]) - x0(d[2]); })\\n                  .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y', function (d) { return x1(d[2]); })\\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\\n\\n                box.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('width', width)\\n                    .attr('y', function (d) { return x1(d[2]); })\\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\\n\\n                // Update median line.\\n                var medianLine = g.selectAll('line.median')\\n                    .data([quartileData[1]]);\\n\\n                medianLine.enter().append('line')\\n                    .attr('class', 'median')\\n                    .attr('x1', 0)\\n                    .attr('y1', x0)\\n                    .attr('x2', width)\\n                    .attr('y2', x0)\\n                    .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y1', x1)\\n                    .attr('y2', x1);\\n\\n                medianLine.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('x1', 0)\\n                    .attr('x2', width)\\n                    .attr('y1', x1)\\n                    .attr('y2', x1);\\n\\n                // Update whiskers.\\n                var whisker = g.selectAll('line.whisker')\\n                    .data(whiskerData || []);\\n\\n                whisker.enter().insert('line', 'circle, text')\\n                    .attr('class', 'whisker')\\n                    .attr('x1', 0)\\n                    .attr('y1', x0)\\n                    .attr('x2', width)\\n                    .attr('y2', x0)\\n                    .style('opacity', 1e-6)\\n                  .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y1', x1)\\n                    .attr('y2', x1)\\n                    .style('opacity', 1);\\n\\n                whisker.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('x1', 0)\\n                    .attr('x2', width)\\n                    .attr('y1', x1)\\n                    .attr('y2', x1)\\n                    .style('opacity', 1);\\n\\n                whisker.exit().transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y1', x1)\\n                    .attr('y2', x1)\\n                    .style('opacity', 1e-6)\\n                    .remove();\\n\\n                // Update outliers.\\n                var outlier = g.selectAll('circle.outlier')\\n                    .data(outlierIndices, Number);\\n\\n                outlier.enter().insert('circle', 'text')\\n                    .attr('class', 'outlier')\\n                    .attr('r', 5)\\n                    .attr('cx', width / 2)\\n                    .attr('cy', function (i) { return x0(d[i]); })\\n                    .style('opacity', 1e-6)\\n                    .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('cy', function (i) { return x1(d[i]); })\\n                    .style('opacity', 1);\\n\\n                outlier.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('cx', width / 2)\\n                    .attr('cy', function (i) { return x1(d[i]); })\\n                    .style('opacity', 1);\\n\\n                outlier.exit().transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('cy', function (i) { return x1(d[i]); })\\n                    .style('opacity', 1e-6)\\n                    .remove();\\n\\n                // Compute the tick format.\\n                var format = tickFormat || x1.tickFormat(8);\\n\\n                // Update box ticks.\\n                var boxTick = g.selectAll('text.box')\\n                    .data(quartileData);\\n\\n                boxTick.enter().append('text')\\n                    .attr('class', 'box')\\n                    .attr('dy', '.3em')\\n                    .attr('dx', function (d, i) { return i & 1 ? 6 : -6; })\\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\\n                    .attr('y', x0)\\n                    .attr('text-anchor', function (d, i) { return i & 1 ? 'start' : 'end'; })\\n                    .text(format)\\n                    .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y', x1);\\n\\n                boxTick.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .text(format)\\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\\n                    .attr('y', x1);\\n\\n                // Update whisker ticks. These are handled separately from the box\\n                // ticks because they may or may not exist, and we want don't want\\n                // to join box ticks pre-transition with whisker ticks post-.\\n                var whiskerTick = g.selectAll('text.whisker')\\n                    .data(whiskerData || []);\\n\\n                whiskerTick.enter().append('text')\\n                    .attr('class', 'whisker')\\n                    .attr('dy', '.3em')\\n                    .attr('dx', 6)\\n                    .attr('x', width)\\n                    .attr('y', x0)\\n                    .text(format)\\n                    .style('opacity', 1e-6)\\n                    .transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y', x1)\\n                    .style('opacity', 1);\\n\\n                whiskerTick.transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .text(format)\\n                    .attr('x', width)\\n                    .attr('y', x1)\\n                    .style('opacity', 1);\\n\\n                whiskerTick.exit().transition()\\n                    .duration(duration)\\n                    .delay(delay)\\n                    .attr('y', x1)\\n                    .style('opacity', 1e-6)\\n                    .remove();\\n            });\\n            d3.timer.flush();\\n        }\\n\\n        box.width = function (x) {\\n            if (!arguments.length) {\\n                return width;\\n            }\\n            width = x;\\n            return box;\\n        };\\n\\n        box.height = function (x) {\\n            if (!arguments.length) {\\n                return height;\\n            }\\n            height = x;\\n            return box;\\n        };\\n\\n        box.tickFormat = function (x) {\\n            if (!arguments.length) {\\n                return tickFormat;\\n            }\\n            tickFormat = x;\\n            return box;\\n        };\\n\\n        box.duration = function (x) {\\n            if (!arguments.length) {\\n                return duration;\\n            }\\n            duration = x;\\n            return box;\\n        };\\n\\n        box.domain = function (x) {\\n            if (!arguments.length) {\\n                return domain;\\n            }\\n            domain = x === null ? x : d3.functor(x);\\n            return box;\\n        };\\n\\n        box.value = function (x) {\\n            if (!arguments.length) {\\n                return value;\\n            }\\n            value = x;\\n            return box;\\n        };\\n\\n        box.whiskers = function (x) {\\n            if (!arguments.length) {\\n                return whiskers;\\n            }\\n            whiskers = x;\\n            return box;\\n        };\\n\\n        box.quartiles = function (x) {\\n            if (!arguments.length) {\\n                return quartiles;\\n            }\\n            quartiles = x;\\n            return box;\\n        };\\n\\n        return box;\\n    };\\n\\n    function boxWhiskers (d) {\\n        return [0, d.length - 1];\\n    }\\n\\n    function boxQuartiles (d) {\\n        return [\\n            d3.quantile(d, 0.25),\\n            d3.quantile(d, 0.5),\\n            d3.quantile(d, 0.75)\\n        ];\\n    }\\n\\n})();\\n\\n\\n/**\\n * A box plot is a chart that depicts numerical data via their quartile ranges.\\n *\\n * Examples:\\n * - {@link http://dc-js.github.io/dc.js/examples/box-plot-time.html Box plot time example}\\n * - {@link http://dc-js.github.io/dc.js/examples/box-plot.html Box plot example}\\n * @class boxPlot\\n * @memberof dc\\n * @mixes dc.coordinateGridMixin\\n * @example\\n * // create a box plot under #chart-container1 element using the default global chart group\\n * var boxPlot1 = dc.boxPlot('#chart-container1');\\n * // create a box plot under #chart-container2 element using chart group A\\n * var boxPlot2 = dc.boxPlot('#chart-container2', 'chartGroupA');\\n * @param {String|node|d3.selection} parent - Any valid\\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\\n * Interaction with a chart will only trigger events and redraws within the chart's group.\\n * @returns {dc.boxPlot}\\n */\\ndc.boxPlot = function (parent, chartGroup) {\\n    var _chart = dc.coordinateGridMixin({});\\n\\n    // Returns a function to compute the interquartile range.\\n    function DEFAULT_WHISKERS_IQR (k) {\\n        return function (d) {\\n            var q1 = d.quartiles[0],\\n                q3 = d.quartiles[2],\\n                iqr = (q3 - q1) * k,\\n                i = -1,\\n                j = d.length;\\n            do { ++i; } while (d[i] < q1 - iqr);\\n            do { --j; } while (d[j] > q3 + iqr);\\n            return [i, j];\\n        };\\n    }\\n\\n    var _whiskerIqrFactor = 1.5;\\n    var _whiskersIqr = DEFAULT_WHISKERS_IQR;\\n    var _whiskers = _whiskersIqr(_whiskerIqrFactor);\\n\\n    var _box = d3.box();\\n    var _tickFormat = null;\\n\\n    var _boxWidth = function (innerChartWidth, xUnits) {\\n        if (_chart.isOrdinal()) {\\n            return _chart.x().rangeBand();\\n        } else {\\n            return innerChartWidth / (1 + _chart.boxPadding()) / xUnits;\\n        }\\n    };\\n\\n    // default padding to handle min/max whisker text\\n    _chart.yAxisPadding(12);\\n\\n    // default to ordinal\\n    _chart.x(d3.scale.ordinal());\\n    _chart.xUnits(dc.units.ordinal);\\n\\n    // valueAccessor should return an array of values that can be coerced into numbers\\n    // or if data is overloaded for a static array of arrays, it should be `Number`.\\n    // Empty arrays are not included.\\n    _chart.data(function (group) {\\n        return group.all().map(function (d) {\\n            d.map = function (accessor) { return accessor.call(d, d); };\\n            return d;\\n        }).filter(function (d) {\\n            var values = _chart.valueAccessor()(d);\\n            return values.length !== 0;\\n        });\\n    });\\n\\n    /**\\n     * Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.\\n     * See the {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md#ordinal_rangeBands d3 docs}\\n     * for a visual description of how the padding is applied.\\n     * @method boxPadding\\n     * @memberof dc.boxPlot\\n     * @instance\\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md#ordinal_rangeBands d3.scale.ordinal.rangeBands}\\n     * @param {Number} [padding=0.8]\\n     * @returns {Number|dc.boxPlot}\\n     */\\n    _chart.boxPadding = _chart._rangeBandPadding;\\n    _chart.boxPadding(0.8);\\n\\n    /**\\n     * Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts\\n     * or on charts with a custom {@link dc.boxPlot#boxWidth .boxWidth}. Will pad the width by\\n     * `padding * barWidth` on each side of the chart.\\n     * @method outerPadding\\n     * @memberof dc.boxPlot\\n     * @instance\\n     * @param {Number} [padding=0.5]\\n     * @returns {Number|dc.boxPlot}\\n     */\\n    _chart.outerPadding = _chart._outerRangeBandPadding;\\n    _chart.outerPadding(0.5);\\n\\n    /**\\n     * Get or set the numerical width of the boxplot box. The width may also be a function taking as\\n     * parameters the chart width excluding the right and left margins, as well as the number of x\\n     * units.\\n     * @example\\n     * // Using numerical parameter\\n     * chart.boxWidth(10);\\n     * // Using function\\n     * chart.boxWidth((innerChartWidth, xUnits) { ... });\\n     * @method boxWidth\\n     * @memberof dc.boxPlot\\n     * @instance\\n     * @param {Number|Function} [boxWidth=0.5]\\n     * @returns {Number|Function|dc.boxPlot}\\n     */\\n    _chart.boxWidth = function (boxWidth) {\\n        if (!arguments.length) {\\n            return _boxWidth;\\n        }\\n        _boxWidth = d3.functor(boxWidth);\\n        return _chart;\\n    };\\n\\n    var boxTransform = function (d, i) {\\n        var xOffset = _chart.x()(_chart.keyAccessor()(d, i));\\n        return 'translate(' + xOffset + ', 0)';\\n    };\\n\\n    _chart._preprocessData = function () {\\n        if (_chart.elasticX()) {\\n            _chart.x().domain([]);\\n        }\\n    };\\n\\n    _chart.plotData = function () {\\n        var _calculatedBoxWidth = _boxWidth(_chart.effectiveWidth(), _chart.xUnitCount());\\n\\n        _box.whiskers(_whiskers)\\n            .width(_calculatedBoxWidth)\\n            .height(_chart.effectiveHeight())\\n            .value(_chart.valueAccessor())\\n            .domain(_chart.y().domain())\\n            .duration(_chart.transitionDuration())\\n            .tickFormat(_tickFormat);\\n\\n        var boxesG = _chart.chartBodyG().selectAll('g.box').data(_chart.data(), _chart.keyAccessor());\\n\\n        renderBoxes(boxesG);\\n        updateBoxes(boxesG);\\n        removeBoxes(boxesG);\\n\\n        _chart.fadeDeselectedArea();\\n    };\\n\\n    function renderBoxes (boxesG) {\\n        var boxesGEnter = boxesG.enter().append('g');\\n\\n        boxesGEnter\\n            .attr('class', 'box')\\n            .attr('transform', boxTransform)\\n            .call(_box)\\n            .on('click', function (d) {\\n                _chart.filter(_chart.keyAccessor()(d));\\n                _chart.redrawGroup();\\n            });\\n    }\\n\\n    function updateBoxes (boxesG) {\\n        dc.transition(boxesG, _chart.transitionDuration(), _chart.transitionDelay())\\n            .attr('transform', boxTransform)\\n            .call(_box)\\n            .each(function () {\\n                d3.select(this).select('rect.box').attr('fill', _chart.getColor);\\n            });\\n    }\\n\\n    function removeBoxes (boxesG) {\\n        boxesG.exit().remove().call(_box);\\n    }\\n\\n    _chart.fadeDeselectedArea = function () {\\n        if (_chart.hasFilter()) {\\n            if (_chart.isOrdinal()) {\\n                _chart.g().selectAll('g.box').each(function (d) {\\n                    if (_chart.isSelectedNode(d)) {\\n                        _chart.highlightSelected(this);\\n                    } else {\\n                        _chart.fadeDeselected(this);\\n                    }\\n                });\\n            } else {\\n                var extent = _chart.brush().extent();\\n                var start = extent[0];\\n                var end = extent[1];\\n                var keyAccessor = _chart.keyAccessor();\\n                _chart.g().selectAll('g.box').each(function (d) {\\n                    var key = keyAccessor(d);\\n                    if (key < start || key >= end) {\\n                        _chart.fadeDeselected(this);\\n                    } else {\\n                        _chart.highlightSelected(this);\\n                    }\\n                });\\n            }\\n        } else {\\n            _chart.g().selectAll('g.box').each(function () {\\n                _chart.resetHighlight(this);\\n            });\\n        }\\n    };\\n\\n    _chart.isSelectedNode = function (d) {\\n        return _chart.hasFilter(_chart.keyAccessor()(d));\\n    };\\n\\n    _chart.yAxisMin = function () {\\n        var min = d3.min(_chart.data(), function (e) {\\n            return d3.min(_chart.valueAccessor()(e));\\n        });\\n        return dc.utils.subtract(min, _chart.yAxisPadding());\\n    };\\n\\n    _chart.yAxisMax = function () {\\n        var max = d3.max(_chart.data(), function (e) {\\n            return d3.max(_chart.valueAccessor()(e));\\n        });\\n        return dc.utils.add(max, _chart.yAxisPadding());\\n    };\\n\\n    /**\\n     * Set the numerical format of the boxplot median, whiskers and quartile labels. Defaults to\\n     * integer formatting.\\n     * @example\\n     * // format ticks to 2 decimal places\\n     * chart.tickFormat(d3.format('.2f'));\\n     * @method tickFormat\\n     * @memberof dc.boxPlot\\n     * @instance\\n     * @param {Function} [tickFormat]\\n     * @returns {Number|Function|dc.boxPlot}\\n     */\\n    _chart.tickFormat = function (tickFormat) {\\n        if (!arguments.length) {\\n            return _tickFormat;\\n        }\\n        _tickFormat = tickFormat;\\n        return _chart;\\n    };\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n/**\\n * The select menu is a simple widget designed to filter a dimension by selecting an option from\\n * an HTML `<select/>` menu. The menu can be optionally turned into a multiselect.\\n * @class selectMenu\\n * @memberof dc\\n * @mixes dc.baseMixin\\n * @example\\n * // create a select menu under #select-container using the default global chart group\\n * var select = dc.selectMenu('#select-container')\\n *                .dimension(states)\\n *                .group(stateGroup);\\n * // the option text can be set via the title() function\\n * // by default the option text is '`key`: `value`'\\n * select.title(function (d){\\n *     return 'STATE: ' + d.key;\\n * })\\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\\n * a dom block element such as a div; or a dom element or d3 selection.\\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\\n * Interaction with the widget will only trigger events and redraws within its group.\\n * @returns {selectMenu}\\n **/\\ndc.selectMenu = function (parent, chartGroup) {\\n    var SELECT_CSS_CLASS = 'dc-select-menu';\\n    var OPTION_CSS_CLASS = 'dc-select-option';\\n\\n    var _chart = dc.baseMixin({});\\n\\n    var _select;\\n    var _promptText = 'Select all';\\n    var _multiple = false;\\n    var _promptValue = null;\\n    var _numberVisible = null;\\n    var _order = function (a, b) {\\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\\n            -1 : 0;\\n    };\\n\\n    var _filterDisplayed = function (d) {\\n        return _chart.valueAccessor()(d) > 0;\\n    };\\n\\n    _chart.data(function (group) {\\n        return group.all().filter(_filterDisplayed);\\n    });\\n\\n    _chart._doRender = function () {\\n        _chart.select('select').remove();\\n        _select = _chart.root().append('select')\\n                        .classed(SELECT_CSS_CLASS, true);\\n        _select.append('option').text(_promptText).attr('value', '');\\n\\n        _chart._doRedraw();\\n        return _chart;\\n    };\\n\\n    _chart._doRedraw = function () {\\n        setAttributes();\\n        renderOptions();\\n        // select the option(s) corresponding to current filter(s)\\n        if (_chart.hasFilter() && _multiple) {\\n            _select.selectAll('option')\\n                .property('selected', function (d) {\\n                    return d && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0;\\n                });\\n        } else if (_chart.hasFilter()) {\\n            _select.property('value', _chart.filter());\\n        } else {\\n            _select.property('value', '');\\n        }\\n        return _chart;\\n    };\\n\\n    function renderOptions () {\\n        var options = _select.selectAll('option.' + OPTION_CSS_CLASS)\\n          .data(_chart.data(), function (d) { return _chart.keyAccessor()(d); });\\n\\n        options.enter()\\n              .append('option')\\n              .classed(OPTION_CSS_CLASS, true)\\n              .attr('value', function (d) { return _chart.keyAccessor()(d); });\\n\\n        options.text(_chart.title());\\n        options.exit().remove();\\n        _select.selectAll('option.' + OPTION_CSS_CLASS).sort(_order);\\n\\n        _select.on('change', onChange);\\n        return options;\\n    }\\n\\n    function onChange (d, i) {\\n        var values;\\n        var target = d3.event.target;\\n        if (target.selectedOptions) {\\n            var selectedOptions = Array.prototype.slice.call(target.selectedOptions);\\n            values = selectedOptions.map(function (d) {\\n                return d.value;\\n            });\\n        } else { // IE and other browsers do not support selectedOptions\\n            // adapted from this polyfill: https://gist.github.com/brettz9/4212217\\n            var options = [].slice.call(d3.event.target.options);\\n            values = options.filter(function (option) {\\n                return option.selected;\\n            }).map(function (option) {\\n                return option.value;\\n            });\\n        }\\n        // console.log(values);\\n        // check if only prompt option is selected\\n        if (values.length === 1 && values[0] === '') {\\n            values = _promptValue || null;\\n        } else if (!_multiple && values.length === 1) {\\n            values = values[0];\\n        }\\n        _chart.onChange(values);\\n    }\\n\\n    _chart.onChange = function (val) {\\n        if (val && _multiple) {\\n            _chart.replaceFilter([val]);\\n        } else if (val) {\\n            _chart.replaceFilter(val);\\n        } else {\\n            _chart.filterAll();\\n        }\\n        dc.events.trigger(function () {\\n            _chart.redrawGroup();\\n        });\\n    };\\n\\n    function setAttributes () {\\n        if (_multiple) {\\n            _select.attr('multiple', true);\\n        } else {\\n            _select.attr('multiple', null);\\n        }\\n        if (_numberVisible !== null) {\\n            _select.attr('size', _numberVisible);\\n        } else {\\n            _select.attr('size', null);\\n        }\\n    }\\n\\n    /**\\n     * Get or set the function that controls the ordering of option tags in the\\n     * select menu. By default options are ordered by the group key in ascending\\n     * order.\\n     * @name order\\n     * @memberof dc.selectMenu\\n     * @instance\\n     * @param {Function} [order]\\n     * @example\\n     * // order by the group's value\\n     * chart.order(function (a,b) {\\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\\n     * });\\n     **/\\n    _chart.order = function (order) {\\n        if (!arguments.length) {\\n            return _order;\\n        }\\n        _order = order;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the text displayed in the options used to prompt selection.\\n     * @name promptText\\n     * @memberof dc.selectMenu\\n     * @instance\\n     * @param {String} [promptText='Select all']\\n     * @example\\n     * chart.promptText('All states');\\n     **/\\n    _chart.promptText = function (_) {\\n        if (!arguments.length) {\\n            return _promptText;\\n        }\\n        _promptText = _;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Get or set the function that filters option tags prior to display. By default options\\n     * with a value of < 1 are not displayed.\\n     * @name filterDisplayed\\n     * @memberof dc.selectMenu\\n     * @instance\\n     * @param {function} [filterDisplayed]\\n     * @example\\n     * // display all options override the `filterDisplayed` function:\\n     * chart.filterDisplayed(function () {\\n     *     return true;\\n     * });\\n     **/\\n    _chart.filterDisplayed = function (filterDisplayed) {\\n        if (!arguments.length) {\\n            return _filterDisplayed;\\n        }\\n        _filterDisplayed = filterDisplayed;\\n        return _chart;\\n    };\\n\\n    /**\\n     * Controls the type of select menu. Setting it to true converts the underlying\\n     * HTML tag into a multiple select.\\n     * @name multiple\\n     * @memberof dc.selectMenu\\n     * @instance\\n     * @param {boolean} [multiple=false]\\n     * @example\\n     * chart.multiple(true);\\n     **/\\n    _chart.multiple = function (multiple) {\\n        if (!arguments.length) {\\n            return _multiple;\\n        }\\n        _multiple = multiple;\\n\\n        return _chart;\\n    };\\n\\n    /**\\n     * Controls the default value to be used for\\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\\n     * just the prompt is selected.\\n     * @name promptValue\\n     * @memberof dc.selectMenu\\n     * @instance\\n     * @param {?*} [promptValue=null]\\n     **/\\n    _chart.promptValue = function (promptValue) {\\n        if (!arguments.length) {\\n            return _promptValue;\\n        }\\n        _promptValue = promptValue;\\n\\n        return _chart;\\n    };\\n\\n    /**\\n     * Controls the number of items to show in the select menu, when `.multiple()` is true. This\\n     * controls the [`size` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Attributes) of\\n     * the `select` element. If `null` (the default), uses the browser's default height.\\n     * @name numberItems\\n     * @memberof dc.selectMenu\\n     * @instance\\n     * @param {?number} [numberVisible=null]\\n     * @example\\n     * chart.numberVisible(10);\\n     **/\\n    _chart.numberVisible = function (numberVisible) {\\n        if (!arguments.length) {\\n            return _numberVisible;\\n        }\\n        _numberVisible = numberVisible;\\n\\n        return _chart;\\n    };\\n\\n    _chart.size = dc.logger.deprecate(_chart.numberVisible, 'selectMenu.size is ambiguous - use numberVisible instead');\\n\\n    return _chart.anchor(parent, chartGroup);\\n};\\n\\n// Renamed functions\\n\\ndc.abstractBubbleChart = dc.bubbleMixin;\\ndc.baseChart = dc.baseMixin;\\ndc.capped = dc.capMixin;\\ndc.colorChart = dc.colorMixin;\\ndc.coordinateGridChart = dc.coordinateGridMixin;\\ndc.marginable = dc.marginMixin;\\ndc.stackableChart = dc.stackMixin;\\n\\n// Expose d3 and crossfilter, so that clients in browserify\\n// case can obtain them if they need them.\\ndc.d3 = d3;\\ndc.crossfilter = crossfilter;\\n\\nreturn dc;}\\n    if(typeof define === \\\"function\\\" && define.amd) {\\n        define([\\\"d3\\\", \\\"crossfilter2\\\"], _dc);\\n    } else if(typeof module === \\\"object\\\" && module.exports) {\\n        var _d3 = require('d3');\\n        var _crossfilter = require('crossfilter2');\\n        // When using npm + browserify, 'crossfilter' is a function,\\n        // since package.json specifies index.js as main function, and it\\n        // does special handling. When using bower + browserify,\\n        // there's no main in bower.json (in fact, there's no bower.json),\\n        // so we need to fix it.\\n        if (typeof _crossfilter !== \\\"function\\\") {\\n            _crossfilter = _crossfilter.crossfilter;\\n        }\\n        module.exports = _dc(_d3, _crossfilter);\\n    } else {\\n        this.dc = _dc(d3, crossfilter);\\n    }\\n}\\n)();\\n\\n//# sourceMappingURL=dc.js.map\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./examples/dc/~/dc/dc.js\n// module id = 46\n// module chunks = 0","//\n// Autogenerated by Thrift Compiler (0.10.0)\n//\n// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n//\n\n\n//HELPER FUNCTIONS AND STRUCTURES\n\nMapD_connect_args = function(args) {\n  this.user = null;\n  this.passwd = null;\n  this.dbname = null;\n  if (args) {\n    if (args.user !== undefined && args.user !== null) {\n      this.user = args.user;\n    }\n    if (args.passwd !== undefined && args.passwd !== null) {\n      this.passwd = args.passwd;\n    }\n    if (args.dbname !== undefined && args.dbname !== null) {\n      this.dbname = args.dbname;\n    }\n  }\n};\nMapD_connect_args.prototype = {};\nMapD_connect_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.user = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.passwd = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.dbname = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_connect_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_connect_args');\n  if (this.user !== null && this.user !== undefined) {\n    output.writeFieldBegin('user', Thrift.Type.STRING, 1);\n    output.writeString(this.user);\n    output.writeFieldEnd();\n  }\n  if (this.passwd !== null && this.passwd !== undefined) {\n    output.writeFieldBegin('passwd', Thrift.Type.STRING, 2);\n    output.writeString(this.passwd);\n    output.writeFieldEnd();\n  }\n  if (this.dbname !== null && this.dbname !== undefined) {\n    output.writeFieldBegin('dbname', Thrift.Type.STRING, 3);\n    output.writeString(this.dbname);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_connect_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = args.success;\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_connect_result.prototype = {};\nMapD_connect_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRING) {\n        this.success = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_connect_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_connect_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRING, 0);\n    output.writeString(this.success);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_disconnect_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_disconnect_args.prototype = {};\nMapD_disconnect_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_disconnect_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_disconnect_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_disconnect_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_disconnect_result.prototype = {};\nMapD_disconnect_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_disconnect_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_disconnect_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_server_status_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_server_status_args.prototype = {};\nMapD_get_server_status_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_server_status_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_server_status_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_server_status_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TServerStatus(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_server_status_result.prototype = {};\nMapD_get_server_status_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TServerStatus();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_server_status_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_server_status_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_status_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_status_args.prototype = {};\nMapD_get_status_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_status_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_status_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_status_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [TServerStatus]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_status_result.prototype = {};\nMapD_get_status_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size186 = 0;\n        var _rtmp3190;\n        this.success = [];\n        var _etype189 = 0;\n        _rtmp3190 = input.readListBegin();\n        _etype189 = _rtmp3190.etype;\n        _size186 = _rtmp3190.size;\n        for (var _i191 = 0; _i191 < _size186; ++_i191)\n        {\n          var elem192 = null;\n          elem192 = new TServerStatus();\n          elem192.read(input);\n          this.success.push(elem192);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_status_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_status_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);\n    for (var iter193 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter193))\n      {\n        iter193 = this.success[iter193];\n        iter193.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_tables_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_tables_args.prototype = {};\nMapD_get_tables_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_tables_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_tables_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_tables_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [null]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_tables_result.prototype = {};\nMapD_get_tables_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size194 = 0;\n        var _rtmp3198;\n        this.success = [];\n        var _etype197 = 0;\n        _rtmp3198 = input.readListBegin();\n        _etype197 = _rtmp3198.etype;\n        _size194 = _rtmp3198.size;\n        for (var _i199 = 0; _i199 < _size194; ++_i199)\n        {\n          var elem200 = null;\n          elem200 = input.readString().value;\n          this.success.push(elem200);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_tables_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_tables_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRING, this.success.length);\n    for (var iter201 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter201))\n      {\n        iter201 = this.success[iter201];\n        output.writeString(iter201);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_table_details_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n  }\n};\nMapD_get_table_details_args.prototype = {};\nMapD_get_table_details_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_table_details_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_table_details_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_table_details_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TTableDetails(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_table_details_result.prototype = {};\nMapD_get_table_details_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TTableDetails();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_table_details_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_table_details_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_internal_table_details_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n  }\n};\nMapD_get_internal_table_details_args.prototype = {};\nMapD_get_internal_table_details_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_internal_table_details_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_internal_table_details_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_internal_table_details_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TTableDetails(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_internal_table_details_result.prototype = {};\nMapD_get_internal_table_details_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TTableDetails();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_internal_table_details_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_internal_table_details_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_users_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_users_args.prototype = {};\nMapD_get_users_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_users_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_users_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_users_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [null]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_users_result.prototype = {};\nMapD_get_users_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size202 = 0;\n        var _rtmp3206;\n        this.success = [];\n        var _etype205 = 0;\n        _rtmp3206 = input.readListBegin();\n        _etype205 = _rtmp3206.etype;\n        _size202 = _rtmp3206.size;\n        for (var _i207 = 0; _i207 < _size202; ++_i207)\n        {\n          var elem208 = null;\n          elem208 = input.readString().value;\n          this.success.push(elem208);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_users_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_users_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRING, this.success.length);\n    for (var iter209 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter209))\n      {\n        iter209 = this.success[iter209];\n        output.writeString(iter209);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_databases_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_databases_args.prototype = {};\nMapD_get_databases_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_databases_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_databases_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_databases_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [TDBInfo]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_databases_result.prototype = {};\nMapD_get_databases_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size210 = 0;\n        var _rtmp3214;\n        this.success = [];\n        var _etype213 = 0;\n        _rtmp3214 = input.readListBegin();\n        _etype213 = _rtmp3214.etype;\n        _size210 = _rtmp3214.size;\n        for (var _i215 = 0; _i215 < _size210; ++_i215)\n        {\n          var elem216 = null;\n          elem216 = new TDBInfo();\n          elem216.read(input);\n          this.success.push(elem216);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_databases_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_databases_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);\n    for (var iter217 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter217))\n      {\n        iter217 = this.success[iter217];\n        iter217.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_version_args = function(args) {\n};\nMapD_get_version_args.prototype = {};\nMapD_get_version_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    input.skip(ftype);\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_version_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_version_args');\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_version_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = args.success;\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_version_result.prototype = {};\nMapD_get_version_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRING) {\n        this.success = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_version_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_version_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRING, 0);\n    output.writeString(this.success);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_start_heap_profile_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_start_heap_profile_args.prototype = {};\nMapD_start_heap_profile_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_start_heap_profile_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_start_heap_profile_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_start_heap_profile_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_start_heap_profile_result.prototype = {};\nMapD_start_heap_profile_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_start_heap_profile_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_start_heap_profile_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_stop_heap_profile_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_stop_heap_profile_args.prototype = {};\nMapD_stop_heap_profile_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_stop_heap_profile_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_stop_heap_profile_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_stop_heap_profile_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_stop_heap_profile_result.prototype = {};\nMapD_stop_heap_profile_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_stop_heap_profile_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_stop_heap_profile_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_heap_profile_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_heap_profile_args.prototype = {};\nMapD_get_heap_profile_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_heap_profile_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_heap_profile_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_heap_profile_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = args.success;\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_heap_profile_result.prototype = {};\nMapD_get_heap_profile_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRING) {\n        this.success = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_heap_profile_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_heap_profile_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRING, 0);\n    output.writeString(this.success);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_memory_args = function(args) {\n  this.session = null;\n  this.memory_level = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.memory_level !== undefined && args.memory_level !== null) {\n      this.memory_level = args.memory_level;\n    }\n  }\n};\nMapD_get_memory_args.prototype = {};\nMapD_get_memory_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.memory_level = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_memory_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_memory_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.memory_level !== null && this.memory_level !== undefined) {\n    output.writeFieldBegin('memory_level', Thrift.Type.STRING, 2);\n    output.writeString(this.memory_level);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_memory_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [TNodeMemoryInfo]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_memory_result.prototype = {};\nMapD_get_memory_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size218 = 0;\n        var _rtmp3222;\n        this.success = [];\n        var _etype221 = 0;\n        _rtmp3222 = input.readListBegin();\n        _etype221 = _rtmp3222.etype;\n        _size218 = _rtmp3222.size;\n        for (var _i223 = 0; _i223 < _size218; ++_i223)\n        {\n          var elem224 = null;\n          elem224 = new TNodeMemoryInfo();\n          elem224.read(input);\n          this.success.push(elem224);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_memory_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_memory_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);\n    for (var iter225 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter225))\n      {\n        iter225 = this.success[iter225];\n        iter225.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_clear_cpu_memory_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_clear_cpu_memory_args.prototype = {};\nMapD_clear_cpu_memory_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_clear_cpu_memory_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_clear_cpu_memory_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_clear_cpu_memory_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_clear_cpu_memory_result.prototype = {};\nMapD_clear_cpu_memory_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_clear_cpu_memory_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_clear_cpu_memory_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_clear_gpu_memory_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_clear_gpu_memory_args.prototype = {};\nMapD_clear_gpu_memory_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_clear_gpu_memory_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_clear_gpu_memory_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_clear_gpu_memory_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_clear_gpu_memory_result.prototype = {};\nMapD_clear_gpu_memory_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_clear_gpu_memory_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_clear_gpu_memory_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_rollback_table_epoch_args = function(args) {\n  this.session = null;\n  this.db_id = null;\n  this.table_id = null;\n  this.new_epoch = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.db_id !== undefined && args.db_id !== null) {\n      this.db_id = args.db_id;\n    }\n    if (args.table_id !== undefined && args.table_id !== null) {\n      this.table_id = args.table_id;\n    }\n    if (args.new_epoch !== undefined && args.new_epoch !== null) {\n      this.new_epoch = args.new_epoch;\n    }\n  }\n};\nMapD_rollback_table_epoch_args.prototype = {};\nMapD_rollback_table_epoch_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I32) {\n        this.db_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I32) {\n        this.table_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.new_epoch = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_rollback_table_epoch_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_rollback_table_epoch_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.db_id !== null && this.db_id !== undefined) {\n    output.writeFieldBegin('db_id', Thrift.Type.I32, 2);\n    output.writeI32(this.db_id);\n    output.writeFieldEnd();\n  }\n  if (this.table_id !== null && this.table_id !== undefined) {\n    output.writeFieldBegin('table_id', Thrift.Type.I32, 3);\n    output.writeI32(this.table_id);\n    output.writeFieldEnd();\n  }\n  if (this.new_epoch !== null && this.new_epoch !== undefined) {\n    output.writeFieldBegin('new_epoch', Thrift.Type.I32, 4);\n    output.writeI32(this.new_epoch);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_rollback_table_epoch_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_rollback_table_epoch_result.prototype = {};\nMapD_rollback_table_epoch_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_rollback_table_epoch_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_rollback_table_epoch_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_execute_args = function(args) {\n  this.session = null;\n  this.query = null;\n  this.column_format = null;\n  this.nonce = null;\n  this.first_n = -1;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.query !== undefined && args.query !== null) {\n      this.query = args.query;\n    }\n    if (args.column_format !== undefined && args.column_format !== null) {\n      this.column_format = args.column_format;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n    if (args.first_n !== undefined && args.first_n !== null) {\n      this.first_n = args.first_n;\n    }\n  }\n};\nMapD_sql_execute_args.prototype = {};\nMapD_sql_execute_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.query = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.BOOL) {\n        this.column_format = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I32) {\n        this.first_n = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_execute_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_execute_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.query !== null && this.query !== undefined) {\n    output.writeFieldBegin('query', Thrift.Type.STRING, 2);\n    output.writeString(this.query);\n    output.writeFieldEnd();\n  }\n  if (this.column_format !== null && this.column_format !== undefined) {\n    output.writeFieldBegin('column_format', Thrift.Type.BOOL, 3);\n    output.writeBool(this.column_format);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 4);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  if (this.first_n !== null && this.first_n !== undefined) {\n    output.writeFieldBegin('first_n', Thrift.Type.I32, 5);\n    output.writeI32(this.first_n);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_execute_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TQueryResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_sql_execute_result.prototype = {};\nMapD_sql_execute_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TQueryResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_execute_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_execute_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_execute_df_args = function(args) {\n  this.session = null;\n  this.query = null;\n  this.device_type = null;\n  this.device_id = 0;\n  this.first_n = -1;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.query !== undefined && args.query !== null) {\n      this.query = args.query;\n    }\n    if (args.device_type !== undefined && args.device_type !== null) {\n      this.device_type = args.device_type;\n    }\n    if (args.device_id !== undefined && args.device_id !== null) {\n      this.device_id = args.device_id;\n    }\n    if (args.first_n !== undefined && args.first_n !== null) {\n      this.first_n = args.first_n;\n    }\n  }\n};\nMapD_sql_execute_df_args.prototype = {};\nMapD_sql_execute_df_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.query = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I32) {\n        this.device_type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.device_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I32) {\n        this.first_n = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_execute_df_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_execute_df_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.query !== null && this.query !== undefined) {\n    output.writeFieldBegin('query', Thrift.Type.STRING, 2);\n    output.writeString(this.query);\n    output.writeFieldEnd();\n  }\n  if (this.device_type !== null && this.device_type !== undefined) {\n    output.writeFieldBegin('device_type', Thrift.Type.I32, 3);\n    output.writeI32(this.device_type);\n    output.writeFieldEnd();\n  }\n  if (this.device_id !== null && this.device_id !== undefined) {\n    output.writeFieldBegin('device_id', Thrift.Type.I32, 4);\n    output.writeI32(this.device_id);\n    output.writeFieldEnd();\n  }\n  if (this.first_n !== null && this.first_n !== undefined) {\n    output.writeFieldBegin('first_n', Thrift.Type.I32, 5);\n    output.writeI32(this.first_n);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_execute_df_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TDataFrame(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_sql_execute_df_result.prototype = {};\nMapD_sql_execute_df_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TDataFrame();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_execute_df_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_execute_df_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_execute_gdf_args = function(args) {\n  this.session = null;\n  this.query = null;\n  this.device_id = 0;\n  this.first_n = -1;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.query !== undefined && args.query !== null) {\n      this.query = args.query;\n    }\n    if (args.device_id !== undefined && args.device_id !== null) {\n      this.device_id = args.device_id;\n    }\n    if (args.first_n !== undefined && args.first_n !== null) {\n      this.first_n = args.first_n;\n    }\n  }\n};\nMapD_sql_execute_gdf_args.prototype = {};\nMapD_sql_execute_gdf_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.query = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I32) {\n        this.device_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.first_n = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_execute_gdf_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_execute_gdf_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.query !== null && this.query !== undefined) {\n    output.writeFieldBegin('query', Thrift.Type.STRING, 2);\n    output.writeString(this.query);\n    output.writeFieldEnd();\n  }\n  if (this.device_id !== null && this.device_id !== undefined) {\n    output.writeFieldBegin('device_id', Thrift.Type.I32, 3);\n    output.writeI32(this.device_id);\n    output.writeFieldEnd();\n  }\n  if (this.first_n !== null && this.first_n !== undefined) {\n    output.writeFieldBegin('first_n', Thrift.Type.I32, 4);\n    output.writeI32(this.first_n);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_execute_gdf_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TDataFrame(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_sql_execute_gdf_result.prototype = {};\nMapD_sql_execute_gdf_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TDataFrame();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_execute_gdf_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_execute_gdf_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_interrupt_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_interrupt_args.prototype = {};\nMapD_interrupt_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_interrupt_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_interrupt_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_interrupt_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_interrupt_result.prototype = {};\nMapD_interrupt_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_interrupt_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_interrupt_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_validate_args = function(args) {\n  this.session = null;\n  this.query = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.query !== undefined && args.query !== null) {\n      this.query = args.query;\n    }\n  }\n};\nMapD_sql_validate_args.prototype = {};\nMapD_sql_validate_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.query = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_validate_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_validate_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.query !== null && this.query !== undefined) {\n    output.writeFieldBegin('query', Thrift.Type.STRING, 2);\n    output.writeString(this.query);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_sql_validate_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyMap(args.success, [TColumnType]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_sql_validate_result.prototype = {};\nMapD_sql_validate_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.MAP) {\n        var _size226 = 0;\n        var _rtmp3230;\n        this.success = {};\n        var _ktype227 = 0;\n        var _vtype228 = 0;\n        _rtmp3230 = input.readMapBegin();\n        _ktype227 = _rtmp3230.ktype;\n        _vtype228 = _rtmp3230.vtype;\n        _size226 = _rtmp3230.size;\n        for (var _i231 = 0; _i231 < _size226; ++_i231)\n        {\n          if (_i231 > 0 ) {\n            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {\n              input.rstack.pop();\n            }\n          }\n          var key232 = null;\n          var val233 = null;\n          key232 = input.readString().value;\n          val233 = new TColumnType();\n          val233.read(input);\n          this.success[key232] = val233;\n        }\n        input.readMapEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_sql_validate_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_sql_validate_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.MAP, 0);\n    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));\n    for (var kiter234 in this.success)\n    {\n      if (this.success.hasOwnProperty(kiter234))\n      {\n        var viter235 = this.success[kiter234];\n        output.writeString(kiter234);\n        viter235.write(output);\n      }\n    }\n    output.writeMapEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_set_execution_mode_args = function(args) {\n  this.session = null;\n  this.mode = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.mode !== undefined && args.mode !== null) {\n      this.mode = args.mode;\n    }\n  }\n};\nMapD_set_execution_mode_args.prototype = {};\nMapD_set_execution_mode_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I32) {\n        this.mode = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_set_execution_mode_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_set_execution_mode_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.mode !== null && this.mode !== undefined) {\n    output.writeFieldBegin('mode', Thrift.Type.I32, 2);\n    output.writeI32(this.mode);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_set_execution_mode_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_set_execution_mode_result.prototype = {};\nMapD_set_execution_mode_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_set_execution_mode_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_set_execution_mode_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_render_vega_args = function(args) {\n  this.session = null;\n  this.widget_id = null;\n  this.vega_json = null;\n  this.compression_level = null;\n  this.nonce = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.widget_id !== undefined && args.widget_id !== null) {\n      this.widget_id = args.widget_id;\n    }\n    if (args.vega_json !== undefined && args.vega_json !== null) {\n      this.vega_json = args.vega_json;\n    }\n    if (args.compression_level !== undefined && args.compression_level !== null) {\n      this.compression_level = args.compression_level;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nMapD_render_vega_args.prototype = {};\nMapD_render_vega_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.widget_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.vega_json = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.compression_level = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_render_vega_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_render_vega_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.widget_id !== null && this.widget_id !== undefined) {\n    output.writeFieldBegin('widget_id', Thrift.Type.I64, 2);\n    output.writeI64(this.widget_id);\n    output.writeFieldEnd();\n  }\n  if (this.vega_json !== null && this.vega_json !== undefined) {\n    output.writeFieldBegin('vega_json', Thrift.Type.STRING, 3);\n    output.writeString(this.vega_json);\n    output.writeFieldEnd();\n  }\n  if (this.compression_level !== null && this.compression_level !== undefined) {\n    output.writeFieldBegin('compression_level', Thrift.Type.I32, 4);\n    output.writeI32(this.compression_level);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 5);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_render_vega_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TRenderResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_render_vega_result.prototype = {};\nMapD_render_vega_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TRenderResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_render_vega_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_render_vega_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_result_row_for_pixel_args = function(args) {\n  this.session = null;\n  this.widget_id = null;\n  this.pixel = null;\n  this.table_col_names = null;\n  this.column_format = null;\n  this.pixelRadius = null;\n  this.nonce = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.widget_id !== undefined && args.widget_id !== null) {\n      this.widget_id = args.widget_id;\n    }\n    if (args.pixel !== undefined && args.pixel !== null) {\n      this.pixel = new TPixel(args.pixel);\n    }\n    if (args.table_col_names !== undefined && args.table_col_names !== null) {\n      this.table_col_names = Thrift.copyMap(args.table_col_names, [Thrift.copyList, null]);\n    }\n    if (args.column_format !== undefined && args.column_format !== null) {\n      this.column_format = args.column_format;\n    }\n    if (args.pixelRadius !== undefined && args.pixelRadius !== null) {\n      this.pixelRadius = args.pixelRadius;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nMapD_get_result_row_for_pixel_args.prototype = {};\nMapD_get_result_row_for_pixel_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.widget_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.pixel = new TPixel();\n        this.pixel.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.MAP) {\n        var _size236 = 0;\n        var _rtmp3240;\n        this.table_col_names = {};\n        var _ktype237 = 0;\n        var _vtype238 = 0;\n        _rtmp3240 = input.readMapBegin();\n        _ktype237 = _rtmp3240.ktype;\n        _vtype238 = _rtmp3240.vtype;\n        _size236 = _rtmp3240.size;\n        for (var _i241 = 0; _i241 < _size236; ++_i241)\n        {\n          if (_i241 > 0 ) {\n            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {\n              input.rstack.pop();\n            }\n          }\n          var key242 = null;\n          var val243 = null;\n          key242 = input.readString().value;\n          var _size244 = 0;\n          var _rtmp3248;\n          val243 = [];\n          var _etype247 = 0;\n          _rtmp3248 = input.readListBegin();\n          _etype247 = _rtmp3248.etype;\n          _size244 = _rtmp3248.size;\n          for (var _i249 = 0; _i249 < _size244; ++_i249)\n          {\n            var elem250 = null;\n            elem250 = input.readString().value;\n            val243.push(elem250);\n          }\n          input.readListEnd();\n          this.table_col_names[key242] = val243;\n        }\n        input.readMapEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.BOOL) {\n        this.column_format = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I32) {\n        this.pixelRadius = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_result_row_for_pixel_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_result_row_for_pixel_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.widget_id !== null && this.widget_id !== undefined) {\n    output.writeFieldBegin('widget_id', Thrift.Type.I64, 2);\n    output.writeI64(this.widget_id);\n    output.writeFieldEnd();\n  }\n  if (this.pixel !== null && this.pixel !== undefined) {\n    output.writeFieldBegin('pixel', Thrift.Type.STRUCT, 3);\n    this.pixel.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.table_col_names !== null && this.table_col_names !== undefined) {\n    output.writeFieldBegin('table_col_names', Thrift.Type.MAP, 4);\n    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.LIST, Thrift.objectLength(this.table_col_names));\n    for (var kiter251 in this.table_col_names)\n    {\n      if (this.table_col_names.hasOwnProperty(kiter251))\n      {\n        var viter252 = this.table_col_names[kiter251];\n        output.writeString(kiter251);\n        output.writeListBegin(Thrift.Type.STRING, viter252.length);\n        for (var iter253 in viter252)\n        {\n          if (viter252.hasOwnProperty(iter253))\n          {\n            iter253 = viter252[iter253];\n            output.writeString(iter253);\n          }\n        }\n        output.writeListEnd();\n      }\n    }\n    output.writeMapEnd();\n    output.writeFieldEnd();\n  }\n  if (this.column_format !== null && this.column_format !== undefined) {\n    output.writeFieldBegin('column_format', Thrift.Type.BOOL, 5);\n    output.writeBool(this.column_format);\n    output.writeFieldEnd();\n  }\n  if (this.pixelRadius !== null && this.pixelRadius !== undefined) {\n    output.writeFieldBegin('pixelRadius', Thrift.Type.I32, 6);\n    output.writeI32(this.pixelRadius);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 7);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_result_row_for_pixel_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TPixelTableRowResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_result_row_for_pixel_result.prototype = {};\nMapD_get_result_row_for_pixel_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TPixelTableRowResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_result_row_for_pixel_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_result_row_for_pixel_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_frontend_view_args = function(args) {\n  this.session = null;\n  this.view_name = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.view_name !== undefined && args.view_name !== null) {\n      this.view_name = args.view_name;\n    }\n  }\n};\nMapD_get_frontend_view_args.prototype = {};\nMapD_get_frontend_view_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_frontend_view_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_frontend_view_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.view_name !== null && this.view_name !== undefined) {\n    output.writeFieldBegin('view_name', Thrift.Type.STRING, 2);\n    output.writeString(this.view_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_frontend_view_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TFrontendView(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_frontend_view_result.prototype = {};\nMapD_get_frontend_view_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TFrontendView();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_frontend_view_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_frontend_view_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_frontend_views_args = function(args) {\n  this.session = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n  }\n};\nMapD_get_frontend_views_args.prototype = {};\nMapD_get_frontend_views_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_frontend_views_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_frontend_views_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_frontend_views_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [TFrontendView]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_frontend_views_result.prototype = {};\nMapD_get_frontend_views_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size254 = 0;\n        var _rtmp3258;\n        this.success = [];\n        var _etype257 = 0;\n        _rtmp3258 = input.readListBegin();\n        _etype257 = _rtmp3258.etype;\n        _size254 = _rtmp3258.size;\n        for (var _i259 = 0; _i259 < _size254; ++_i259)\n        {\n          var elem260 = null;\n          elem260 = new TFrontendView();\n          elem260.read(input);\n          this.success.push(elem260);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_frontend_views_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_frontend_views_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);\n    for (var iter261 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter261))\n      {\n        iter261 = this.success[iter261];\n        iter261.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_create_frontend_view_args = function(args) {\n  this.session = null;\n  this.view_name = null;\n  this.view_state = null;\n  this.image_hash = null;\n  this.view_metadata = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.view_name !== undefined && args.view_name !== null) {\n      this.view_name = args.view_name;\n    }\n    if (args.view_state !== undefined && args.view_state !== null) {\n      this.view_state = args.view_state;\n    }\n    if (args.image_hash !== undefined && args.image_hash !== null) {\n      this.image_hash = args.image_hash;\n    }\n    if (args.view_metadata !== undefined && args.view_metadata !== null) {\n      this.view_metadata = args.view_metadata;\n    }\n  }\n};\nMapD_create_frontend_view_args.prototype = {};\nMapD_create_frontend_view_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_state = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.image_hash = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_metadata = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_create_frontend_view_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_create_frontend_view_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.view_name !== null && this.view_name !== undefined) {\n    output.writeFieldBegin('view_name', Thrift.Type.STRING, 2);\n    output.writeString(this.view_name);\n    output.writeFieldEnd();\n  }\n  if (this.view_state !== null && this.view_state !== undefined) {\n    output.writeFieldBegin('view_state', Thrift.Type.STRING, 3);\n    output.writeString(this.view_state);\n    output.writeFieldEnd();\n  }\n  if (this.image_hash !== null && this.image_hash !== undefined) {\n    output.writeFieldBegin('image_hash', Thrift.Type.STRING, 4);\n    output.writeString(this.image_hash);\n    output.writeFieldEnd();\n  }\n  if (this.view_metadata !== null && this.view_metadata !== undefined) {\n    output.writeFieldBegin('view_metadata', Thrift.Type.STRING, 5);\n    output.writeString(this.view_metadata);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_create_frontend_view_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_create_frontend_view_result.prototype = {};\nMapD_create_frontend_view_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_create_frontend_view_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_create_frontend_view_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_delete_frontend_view_args = function(args) {\n  this.session = null;\n  this.view_name = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.view_name !== undefined && args.view_name !== null) {\n      this.view_name = args.view_name;\n    }\n  }\n};\nMapD_delete_frontend_view_args.prototype = {};\nMapD_delete_frontend_view_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_delete_frontend_view_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_delete_frontend_view_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.view_name !== null && this.view_name !== undefined) {\n    output.writeFieldBegin('view_name', Thrift.Type.STRING, 2);\n    output.writeString(this.view_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_delete_frontend_view_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_delete_frontend_view_result.prototype = {};\nMapD_delete_frontend_view_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_delete_frontend_view_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_delete_frontend_view_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_link_view_args = function(args) {\n  this.session = null;\n  this.link = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.link !== undefined && args.link !== null) {\n      this.link = args.link;\n    }\n  }\n};\nMapD_get_link_view_args.prototype = {};\nMapD_get_link_view_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.link = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_link_view_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_link_view_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.link !== null && this.link !== undefined) {\n    output.writeFieldBegin('link', Thrift.Type.STRING, 2);\n    output.writeString(this.link);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_link_view_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TFrontendView(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_link_view_result.prototype = {};\nMapD_get_link_view_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TFrontendView();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_link_view_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_link_view_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_create_link_args = function(args) {\n  this.session = null;\n  this.view_state = null;\n  this.view_metadata = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.view_state !== undefined && args.view_state !== null) {\n      this.view_state = args.view_state;\n    }\n    if (args.view_metadata !== undefined && args.view_metadata !== null) {\n      this.view_metadata = args.view_metadata;\n    }\n  }\n};\nMapD_create_link_args.prototype = {};\nMapD_create_link_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_state = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_metadata = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_create_link_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_create_link_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.view_state !== null && this.view_state !== undefined) {\n    output.writeFieldBegin('view_state', Thrift.Type.STRING, 2);\n    output.writeString(this.view_state);\n    output.writeFieldEnd();\n  }\n  if (this.view_metadata !== null && this.view_metadata !== undefined) {\n    output.writeFieldBegin('view_metadata', Thrift.Type.STRING, 3);\n    output.writeString(this.view_metadata);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_create_link_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = args.success;\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_create_link_result.prototype = {};\nMapD_create_link_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRING) {\n        this.success = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_create_link_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_create_link_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRING, 0);\n    output.writeString(this.success);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_load_table_binary_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  this.rows = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.rows !== undefined && args.rows !== null) {\n      this.rows = Thrift.copyList(args.rows, [TRow]);\n    }\n  }\n};\nMapD_load_table_binary_args.prototype = {};\nMapD_load_table_binary_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size262 = 0;\n        var _rtmp3266;\n        this.rows = [];\n        var _etype265 = 0;\n        _rtmp3266 = input.readListBegin();\n        _etype265 = _rtmp3266.etype;\n        _size262 = _rtmp3266.size;\n        for (var _i267 = 0; _i267 < _size262; ++_i267)\n        {\n          var elem268 = null;\n          elem268 = new TRow();\n          elem268.read(input);\n          this.rows.push(elem268);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_load_table_binary_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_load_table_binary_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.rows !== null && this.rows !== undefined) {\n    output.writeFieldBegin('rows', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.rows.length);\n    for (var iter269 in this.rows)\n    {\n      if (this.rows.hasOwnProperty(iter269))\n      {\n        iter269 = this.rows[iter269];\n        iter269.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_load_table_binary_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_load_table_binary_result.prototype = {};\nMapD_load_table_binary_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_load_table_binary_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_load_table_binary_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_load_table_binary_columnar_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  this.cols = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.cols !== undefined && args.cols !== null) {\n      this.cols = Thrift.copyList(args.cols, [TColumn]);\n    }\n  }\n};\nMapD_load_table_binary_columnar_args.prototype = {};\nMapD_load_table_binary_columnar_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size270 = 0;\n        var _rtmp3274;\n        this.cols = [];\n        var _etype273 = 0;\n        _rtmp3274 = input.readListBegin();\n        _etype273 = _rtmp3274.etype;\n        _size270 = _rtmp3274.size;\n        for (var _i275 = 0; _i275 < _size270; ++_i275)\n        {\n          var elem276 = null;\n          elem276 = new TColumn();\n          elem276.read(input);\n          this.cols.push(elem276);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_load_table_binary_columnar_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_load_table_binary_columnar_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.cols !== null && this.cols !== undefined) {\n    output.writeFieldBegin('cols', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.cols.length);\n    for (var iter277 in this.cols)\n    {\n      if (this.cols.hasOwnProperty(iter277))\n      {\n        iter277 = this.cols[iter277];\n        iter277.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_load_table_binary_columnar_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_load_table_binary_columnar_result.prototype = {};\nMapD_load_table_binary_columnar_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_load_table_binary_columnar_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_load_table_binary_columnar_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_load_table_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  this.rows = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.rows !== undefined && args.rows !== null) {\n      this.rows = Thrift.copyList(args.rows, [TStringRow]);\n    }\n  }\n};\nMapD_load_table_args.prototype = {};\nMapD_load_table_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size278 = 0;\n        var _rtmp3282;\n        this.rows = [];\n        var _etype281 = 0;\n        _rtmp3282 = input.readListBegin();\n        _etype281 = _rtmp3282.etype;\n        _size278 = _rtmp3282.size;\n        for (var _i283 = 0; _i283 < _size278; ++_i283)\n        {\n          var elem284 = null;\n          elem284 = new TStringRow();\n          elem284.read(input);\n          this.rows.push(elem284);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_load_table_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_load_table_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.rows !== null && this.rows !== undefined) {\n    output.writeFieldBegin('rows', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.rows.length);\n    for (var iter285 in this.rows)\n    {\n      if (this.rows.hasOwnProperty(iter285))\n      {\n        iter285 = this.rows[iter285];\n        iter285.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_load_table_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_load_table_result.prototype = {};\nMapD_load_table_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_load_table_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_load_table_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_detect_column_types_args = function(args) {\n  this.session = null;\n  this.file_name = null;\n  this.copy_params = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.file_name !== undefined && args.file_name !== null) {\n      this.file_name = args.file_name;\n    }\n    if (args.copy_params !== undefined && args.copy_params !== null) {\n      this.copy_params = new TCopyParams(args.copy_params);\n    }\n  }\n};\nMapD_detect_column_types_args.prototype = {};\nMapD_detect_column_types_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.file_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.copy_params = new TCopyParams();\n        this.copy_params.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_detect_column_types_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_detect_column_types_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.file_name !== null && this.file_name !== undefined) {\n    output.writeFieldBegin('file_name', Thrift.Type.STRING, 2);\n    output.writeString(this.file_name);\n    output.writeFieldEnd();\n  }\n  if (this.copy_params !== null && this.copy_params !== undefined) {\n    output.writeFieldBegin('copy_params', Thrift.Type.STRUCT, 3);\n    this.copy_params.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_detect_column_types_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TDetectResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_detect_column_types_result.prototype = {};\nMapD_detect_column_types_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TDetectResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_detect_column_types_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_detect_column_types_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_create_table_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  this.row_desc = null;\n  this.table_type = 0;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.row_desc !== undefined && args.row_desc !== null) {\n      this.row_desc = Thrift.copyList(args.row_desc, [TColumnType]);\n    }\n    if (args.table_type !== undefined && args.table_type !== null) {\n      this.table_type = args.table_type;\n    }\n  }\n};\nMapD_create_table_args.prototype = {};\nMapD_create_table_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size286 = 0;\n        var _rtmp3290;\n        this.row_desc = [];\n        var _etype289 = 0;\n        _rtmp3290 = input.readListBegin();\n        _etype289 = _rtmp3290.etype;\n        _size286 = _rtmp3290.size;\n        for (var _i291 = 0; _i291 < _size286; ++_i291)\n        {\n          var elem292 = null;\n          elem292 = new TColumnType();\n          elem292.read(input);\n          this.row_desc.push(elem292);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.table_type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_create_table_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_create_table_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.row_desc !== null && this.row_desc !== undefined) {\n    output.writeFieldBegin('row_desc', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.row_desc.length);\n    for (var iter293 in this.row_desc)\n    {\n      if (this.row_desc.hasOwnProperty(iter293))\n      {\n        iter293 = this.row_desc[iter293];\n        iter293.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.table_type !== null && this.table_type !== undefined) {\n    output.writeFieldBegin('table_type', Thrift.Type.I32, 4);\n    output.writeI32(this.table_type);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_create_table_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_create_table_result.prototype = {};\nMapD_create_table_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_create_table_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_create_table_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_import_table_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  this.file_name = null;\n  this.copy_params = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.file_name !== undefined && args.file_name !== null) {\n      this.file_name = args.file_name;\n    }\n    if (args.copy_params !== undefined && args.copy_params !== null) {\n      this.copy_params = new TCopyParams(args.copy_params);\n    }\n  }\n};\nMapD_import_table_args.prototype = {};\nMapD_import_table_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.file_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.copy_params = new TCopyParams();\n        this.copy_params.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_import_table_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_import_table_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.file_name !== null && this.file_name !== undefined) {\n    output.writeFieldBegin('file_name', Thrift.Type.STRING, 3);\n    output.writeString(this.file_name);\n    output.writeFieldEnd();\n  }\n  if (this.copy_params !== null && this.copy_params !== undefined) {\n    output.writeFieldBegin('copy_params', Thrift.Type.STRUCT, 4);\n    this.copy_params.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_import_table_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_import_table_result.prototype = {};\nMapD_import_table_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_import_table_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_import_table_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_import_geo_table_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  this.file_name = null;\n  this.copy_params = null;\n  this.row_desc = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.file_name !== undefined && args.file_name !== null) {\n      this.file_name = args.file_name;\n    }\n    if (args.copy_params !== undefined && args.copy_params !== null) {\n      this.copy_params = new TCopyParams(args.copy_params);\n    }\n    if (args.row_desc !== undefined && args.row_desc !== null) {\n      this.row_desc = Thrift.copyList(args.row_desc, [TColumnType]);\n    }\n  }\n};\nMapD_import_geo_table_args.prototype = {};\nMapD_import_geo_table_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.file_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.copy_params = new TCopyParams();\n        this.copy_params.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.LIST) {\n        var _size294 = 0;\n        var _rtmp3298;\n        this.row_desc = [];\n        var _etype297 = 0;\n        _rtmp3298 = input.readListBegin();\n        _etype297 = _rtmp3298.etype;\n        _size294 = _rtmp3298.size;\n        for (var _i299 = 0; _i299 < _size294; ++_i299)\n        {\n          var elem300 = null;\n          elem300 = new TColumnType();\n          elem300.read(input);\n          this.row_desc.push(elem300);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_import_geo_table_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_import_geo_table_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.file_name !== null && this.file_name !== undefined) {\n    output.writeFieldBegin('file_name', Thrift.Type.STRING, 3);\n    output.writeString(this.file_name);\n    output.writeFieldEnd();\n  }\n  if (this.copy_params !== null && this.copy_params !== undefined) {\n    output.writeFieldBegin('copy_params', Thrift.Type.STRUCT, 4);\n    this.copy_params.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.row_desc !== null && this.row_desc !== undefined) {\n    output.writeFieldBegin('row_desc', Thrift.Type.LIST, 5);\n    output.writeListBegin(Thrift.Type.STRUCT, this.row_desc.length);\n    for (var iter301 in this.row_desc)\n    {\n      if (this.row_desc.hasOwnProperty(iter301))\n      {\n        iter301 = this.row_desc[iter301];\n        iter301.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_import_geo_table_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_import_geo_table_result.prototype = {};\nMapD_import_geo_table_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_import_geo_table_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_import_geo_table_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_import_table_status_args = function(args) {\n  this.session = null;\n  this.import_id = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.import_id !== undefined && args.import_id !== null) {\n      this.import_id = args.import_id;\n    }\n  }\n};\nMapD_import_table_status_args.prototype = {};\nMapD_import_table_status_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.import_id = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_import_table_status_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_import_table_status_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.import_id !== null && this.import_id !== undefined) {\n    output.writeFieldBegin('import_id', Thrift.Type.STRING, 2);\n    output.writeString(this.import_id);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_import_table_status_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TImportStatus(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_import_table_status_result.prototype = {};\nMapD_import_table_status_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TImportStatus();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_import_table_status_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_import_table_status_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_start_query_args = function(args) {\n  this.session = null;\n  this.query_ra = null;\n  this.just_explain = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.query_ra !== undefined && args.query_ra !== null) {\n      this.query_ra = args.query_ra;\n    }\n    if (args.just_explain !== undefined && args.just_explain !== null) {\n      this.just_explain = args.just_explain;\n    }\n  }\n};\nMapD_start_query_args.prototype = {};\nMapD_start_query_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.query_ra = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.BOOL) {\n        this.just_explain = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_start_query_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_start_query_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.query_ra !== null && this.query_ra !== undefined) {\n    output.writeFieldBegin('query_ra', Thrift.Type.STRING, 2);\n    output.writeString(this.query_ra);\n    output.writeFieldEnd();\n  }\n  if (this.just_explain !== null && this.just_explain !== undefined) {\n    output.writeFieldBegin('just_explain', Thrift.Type.BOOL, 3);\n    output.writeBool(this.just_explain);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_start_query_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TPendingQuery(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_start_query_result.prototype = {};\nMapD_start_query_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TPendingQuery();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_start_query_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_start_query_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_execute_first_step_args = function(args) {\n  this.pending_query = null;\n  if (args) {\n    if (args.pending_query !== undefined && args.pending_query !== null) {\n      this.pending_query = new TPendingQuery(args.pending_query);\n    }\n  }\n};\nMapD_execute_first_step_args.prototype = {};\nMapD_execute_first_step_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.pending_query = new TPendingQuery();\n        this.pending_query.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_execute_first_step_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_execute_first_step_args');\n  if (this.pending_query !== null && this.pending_query !== undefined) {\n    output.writeFieldBegin('pending_query', Thrift.Type.STRUCT, 1);\n    this.pending_query.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_execute_first_step_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TStepResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_execute_first_step_result.prototype = {};\nMapD_execute_first_step_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TStepResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_execute_first_step_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_execute_first_step_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_broadcast_serialized_rows_args = function(args) {\n  this.serialized_rows = null;\n  this.row_desc = null;\n  this.query_id = null;\n  if (args) {\n    if (args.serialized_rows !== undefined && args.serialized_rows !== null) {\n      this.serialized_rows = args.serialized_rows;\n    }\n    if (args.row_desc !== undefined && args.row_desc !== null) {\n      this.row_desc = Thrift.copyList(args.row_desc, [TColumnType]);\n    }\n    if (args.query_id !== undefined && args.query_id !== null) {\n      this.query_id = args.query_id;\n    }\n  }\n};\nMapD_broadcast_serialized_rows_args.prototype = {};\nMapD_broadcast_serialized_rows_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.serialized_rows = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size302 = 0;\n        var _rtmp3306;\n        this.row_desc = [];\n        var _etype305 = 0;\n        _rtmp3306 = input.readListBegin();\n        _etype305 = _rtmp3306.etype;\n        _size302 = _rtmp3306.size;\n        for (var _i307 = 0; _i307 < _size302; ++_i307)\n        {\n          var elem308 = null;\n          elem308 = new TColumnType();\n          elem308.read(input);\n          this.row_desc.push(elem308);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.query_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_broadcast_serialized_rows_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_broadcast_serialized_rows_args');\n  if (this.serialized_rows !== null && this.serialized_rows !== undefined) {\n    output.writeFieldBegin('serialized_rows', Thrift.Type.STRING, 1);\n    output.writeString(this.serialized_rows);\n    output.writeFieldEnd();\n  }\n  if (this.row_desc !== null && this.row_desc !== undefined) {\n    output.writeFieldBegin('row_desc', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.row_desc.length);\n    for (var iter309 in this.row_desc)\n    {\n      if (this.row_desc.hasOwnProperty(iter309))\n      {\n        iter309 = this.row_desc[iter309];\n        iter309.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.query_id !== null && this.query_id !== undefined) {\n    output.writeFieldBegin('query_id', Thrift.Type.I64, 3);\n    output.writeI64(this.query_id);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_broadcast_serialized_rows_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_broadcast_serialized_rows_result.prototype = {};\nMapD_broadcast_serialized_rows_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_broadcast_serialized_rows_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_broadcast_serialized_rows_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_render_vega_raw_pixels_args = function(args) {\n  this.session = null;\n  this.widget_id = null;\n  this.node_idx = null;\n  this.vega_json = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.widget_id !== undefined && args.widget_id !== null) {\n      this.widget_id = args.widget_id;\n    }\n    if (args.node_idx !== undefined && args.node_idx !== null) {\n      this.node_idx = args.node_idx;\n    }\n    if (args.vega_json !== undefined && args.vega_json !== null) {\n      this.vega_json = args.vega_json;\n    }\n  }\n};\nMapD_render_vega_raw_pixels_args.prototype = {};\nMapD_render_vega_raw_pixels_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.widget_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I16) {\n        this.node_idx = input.readI16().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.vega_json = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_render_vega_raw_pixels_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_render_vega_raw_pixels_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.widget_id !== null && this.widget_id !== undefined) {\n    output.writeFieldBegin('widget_id', Thrift.Type.I64, 2);\n    output.writeI64(this.widget_id);\n    output.writeFieldEnd();\n  }\n  if (this.node_idx !== null && this.node_idx !== undefined) {\n    output.writeFieldBegin('node_idx', Thrift.Type.I16, 3);\n    output.writeI16(this.node_idx);\n    output.writeFieldEnd();\n  }\n  if (this.vega_json !== null && this.vega_json !== undefined) {\n    output.writeFieldBegin('vega_json', Thrift.Type.STRING, 4);\n    output.writeString(this.vega_json);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_render_vega_raw_pixels_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TRawPixelDataResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_render_vega_raw_pixels_result.prototype = {};\nMapD_render_vega_raw_pixels_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TRawPixelDataResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_render_vega_raw_pixels_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_render_vega_raw_pixels_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_insert_data_args = function(args) {\n  this.session = null;\n  this.insert_data = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.insert_data !== undefined && args.insert_data !== null) {\n      this.insert_data = new TInsertData(args.insert_data);\n    }\n  }\n};\nMapD_insert_data_args.prototype = {};\nMapD_insert_data_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.insert_data = new TInsertData();\n        this.insert_data.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_insert_data_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_insert_data_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.insert_data !== null && this.insert_data !== undefined) {\n    output.writeFieldBegin('insert_data', Thrift.Type.STRUCT, 2);\n    this.insert_data.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_insert_data_result = function(args) {\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_insert_data_result.prototype = {};\nMapD_insert_data_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_insert_data_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_insert_data_result');\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_table_descriptor_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n  }\n};\nMapD_get_table_descriptor_args.prototype = {};\nMapD_get_table_descriptor_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_table_descriptor_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_table_descriptor_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_table_descriptor_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyMap(args.success, [TColumnType]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_table_descriptor_result.prototype = {};\nMapD_get_table_descriptor_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.MAP) {\n        var _size310 = 0;\n        var _rtmp3314;\n        this.success = {};\n        var _ktype311 = 0;\n        var _vtype312 = 0;\n        _rtmp3314 = input.readMapBegin();\n        _ktype311 = _rtmp3314.ktype;\n        _vtype312 = _rtmp3314.vtype;\n        _size310 = _rtmp3314.size;\n        for (var _i315 = 0; _i315 < _size310; ++_i315)\n        {\n          if (_i315 > 0 ) {\n            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {\n              input.rstack.pop();\n            }\n          }\n          var key316 = null;\n          var val317 = null;\n          key316 = input.readString().value;\n          val317 = new TColumnType();\n          val317.read(input);\n          this.success[key316] = val317;\n        }\n        input.readMapEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_table_descriptor_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_table_descriptor_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.MAP, 0);\n    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));\n    for (var kiter318 in this.success)\n    {\n      if (this.success.hasOwnProperty(kiter318))\n      {\n        var viter319 = this.success[kiter318];\n        output.writeString(kiter318);\n        viter319.write(output);\n      }\n    }\n    output.writeMapEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_row_descriptor_args = function(args) {\n  this.session = null;\n  this.table_name = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n  }\n};\nMapD_get_row_descriptor_args.prototype = {};\nMapD_get_row_descriptor_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_row_descriptor_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_row_descriptor_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_row_descriptor_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = Thrift.copyList(args.success, [TColumnType]);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_row_descriptor_result.prototype = {};\nMapD_get_row_descriptor_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.LIST) {\n        var _size320 = 0;\n        var _rtmp3324;\n        this.success = [];\n        var _etype323 = 0;\n        _rtmp3324 = input.readListBegin();\n        _etype323 = _rtmp3324.etype;\n        _size320 = _rtmp3324.size;\n        for (var _i325 = 0; _i325 < _size320; ++_i325)\n        {\n          var elem326 = null;\n          elem326 = new TColumnType();\n          elem326.read(input);\n          this.success.push(elem326);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_row_descriptor_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_row_descriptor_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.LIST, 0);\n    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);\n    for (var iter327 in this.success)\n    {\n      if (this.success.hasOwnProperty(iter327))\n      {\n        iter327 = this.success[iter327];\n        iter327.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_render_args = function(args) {\n  this.session = null;\n  this.query = null;\n  this.render_type = null;\n  this.nonce = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.query !== undefined && args.query !== null) {\n      this.query = args.query;\n    }\n    if (args.render_type !== undefined && args.render_type !== null) {\n      this.render_type = args.render_type;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nMapD_render_args.prototype = {};\nMapD_render_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.query = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.render_type = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_render_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_render_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.query !== null && this.query !== undefined) {\n    output.writeFieldBegin('query', Thrift.Type.STRING, 2);\n    output.writeString(this.query);\n    output.writeFieldEnd();\n  }\n  if (this.render_type !== null && this.render_type !== undefined) {\n    output.writeFieldBegin('render_type', Thrift.Type.STRING, 3);\n    output.writeString(this.render_type);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 4);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_render_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TRenderResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_render_result.prototype = {};\nMapD_render_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TRenderResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_render_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_render_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_rows_for_pixels_args = function(args) {\n  this.session = null;\n  this.widget_id = null;\n  this.pixels = null;\n  this.table_name = null;\n  this.col_names = null;\n  this.column_format = null;\n  this.nonce = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.widget_id !== undefined && args.widget_id !== null) {\n      this.widget_id = args.widget_id;\n    }\n    if (args.pixels !== undefined && args.pixels !== null) {\n      this.pixels = Thrift.copyList(args.pixels, [TPixel]);\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.col_names !== undefined && args.col_names !== null) {\n      this.col_names = Thrift.copyList(args.col_names, [null]);\n    }\n    if (args.column_format !== undefined && args.column_format !== null) {\n      this.column_format = args.column_format;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nMapD_get_rows_for_pixels_args.prototype = {};\nMapD_get_rows_for_pixels_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.widget_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size328 = 0;\n        var _rtmp3332;\n        this.pixels = [];\n        var _etype331 = 0;\n        _rtmp3332 = input.readListBegin();\n        _etype331 = _rtmp3332.etype;\n        _size328 = _rtmp3332.size;\n        for (var _i333 = 0; _i333 < _size328; ++_i333)\n        {\n          var elem334 = null;\n          elem334 = new TPixel();\n          elem334.read(input);\n          this.pixels.push(elem334);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.LIST) {\n        var _size335 = 0;\n        var _rtmp3339;\n        this.col_names = [];\n        var _etype338 = 0;\n        _rtmp3339 = input.readListBegin();\n        _etype338 = _rtmp3339.etype;\n        _size335 = _rtmp3339.size;\n        for (var _i340 = 0; _i340 < _size335; ++_i340)\n        {\n          var elem341 = null;\n          elem341 = input.readString().value;\n          this.col_names.push(elem341);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.BOOL) {\n        this.column_format = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_rows_for_pixels_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_rows_for_pixels_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.widget_id !== null && this.widget_id !== undefined) {\n    output.writeFieldBegin('widget_id', Thrift.Type.I64, 2);\n    output.writeI64(this.widget_id);\n    output.writeFieldEnd();\n  }\n  if (this.pixels !== null && this.pixels !== undefined) {\n    output.writeFieldBegin('pixels', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.pixels.length);\n    for (var iter342 in this.pixels)\n    {\n      if (this.pixels.hasOwnProperty(iter342))\n      {\n        iter342 = this.pixels[iter342];\n        iter342.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 4);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.col_names !== null && this.col_names !== undefined) {\n    output.writeFieldBegin('col_names', Thrift.Type.LIST, 5);\n    output.writeListBegin(Thrift.Type.STRING, this.col_names.length);\n    for (var iter343 in this.col_names)\n    {\n      if (this.col_names.hasOwnProperty(iter343))\n      {\n        iter343 = this.col_names[iter343];\n        output.writeString(iter343);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.column_format !== null && this.column_format !== undefined) {\n    output.writeFieldBegin('column_format', Thrift.Type.BOOL, 6);\n    output.writeBool(this.column_format);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 7);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_rows_for_pixels_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TPixelResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_rows_for_pixels_result.prototype = {};\nMapD_get_rows_for_pixels_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TPixelResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_rows_for_pixels_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_rows_for_pixels_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_row_for_pixel_args = function(args) {\n  this.session = null;\n  this.widget_id = null;\n  this.pixel = null;\n  this.table_name = null;\n  this.col_names = null;\n  this.column_format = null;\n  this.pixelRadius = null;\n  this.nonce = null;\n  if (args) {\n    if (args.session !== undefined && args.session !== null) {\n      this.session = args.session;\n    }\n    if (args.widget_id !== undefined && args.widget_id !== null) {\n      this.widget_id = args.widget_id;\n    }\n    if (args.pixel !== undefined && args.pixel !== null) {\n      this.pixel = new TPixel(args.pixel);\n    }\n    if (args.table_name !== undefined && args.table_name !== null) {\n      this.table_name = args.table_name;\n    }\n    if (args.col_names !== undefined && args.col_names !== null) {\n      this.col_names = Thrift.copyList(args.col_names, [null]);\n    }\n    if (args.column_format !== undefined && args.column_format !== null) {\n      this.column_format = args.column_format;\n    }\n    if (args.pixelRadius !== undefined && args.pixelRadius !== null) {\n      this.pixelRadius = args.pixelRadius;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nMapD_get_row_for_pixel_args.prototype = {};\nMapD_get_row_for_pixel_args.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.session = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.widget_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.pixel = new TPixel();\n        this.pixel.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.LIST) {\n        var _size344 = 0;\n        var _rtmp3348;\n        this.col_names = [];\n        var _etype347 = 0;\n        _rtmp3348 = input.readListBegin();\n        _etype347 = _rtmp3348.etype;\n        _size344 = _rtmp3348.size;\n        for (var _i349 = 0; _i349 < _size344; ++_i349)\n        {\n          var elem350 = null;\n          elem350 = input.readString().value;\n          this.col_names.push(elem350);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.BOOL) {\n        this.column_format = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I32) {\n        this.pixelRadius = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_row_for_pixel_args.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_row_for_pixel_args');\n  if (this.session !== null && this.session !== undefined) {\n    output.writeFieldBegin('session', Thrift.Type.STRING, 1);\n    output.writeString(this.session);\n    output.writeFieldEnd();\n  }\n  if (this.widget_id !== null && this.widget_id !== undefined) {\n    output.writeFieldBegin('widget_id', Thrift.Type.I64, 2);\n    output.writeI64(this.widget_id);\n    output.writeFieldEnd();\n  }\n  if (this.pixel !== null && this.pixel !== undefined) {\n    output.writeFieldBegin('pixel', Thrift.Type.STRUCT, 3);\n    this.pixel.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.table_name !== null && this.table_name !== undefined) {\n    output.writeFieldBegin('table_name', Thrift.Type.STRING, 4);\n    output.writeString(this.table_name);\n    output.writeFieldEnd();\n  }\n  if (this.col_names !== null && this.col_names !== undefined) {\n    output.writeFieldBegin('col_names', Thrift.Type.LIST, 5);\n    output.writeListBegin(Thrift.Type.STRING, this.col_names.length);\n    for (var iter351 in this.col_names)\n    {\n      if (this.col_names.hasOwnProperty(iter351))\n      {\n        iter351 = this.col_names[iter351];\n        output.writeString(iter351);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.column_format !== null && this.column_format !== undefined) {\n    output.writeFieldBegin('column_format', Thrift.Type.BOOL, 6);\n    output.writeBool(this.column_format);\n    output.writeFieldEnd();\n  }\n  if (this.pixelRadius !== null && this.pixelRadius !== undefined) {\n    output.writeFieldBegin('pixelRadius', Thrift.Type.I32, 7);\n    output.writeI32(this.pixelRadius);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 8);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapD_get_row_for_pixel_result = function(args) {\n  this.success = null;\n  this.e = null;\n  if (args instanceof TMapDException) {\n    this.e = args;\n    return;\n  }\n  if (args) {\n    if (args.success !== undefined && args.success !== null) {\n      this.success = new TPixelRowResult(args.success);\n    }\n    if (args.e !== undefined && args.e !== null) {\n      this.e = args.e;\n    }\n  }\n};\nMapD_get_row_for_pixel_result.prototype = {};\nMapD_get_row_for_pixel_result.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 0:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.success = new TPixelRowResult();\n        this.success.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.e = new TMapDException();\n        this.e.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nMapD_get_row_for_pixel_result.prototype.write = function(output) {\n  output.writeStructBegin('MapD_get_row_for_pixel_result');\n  if (this.success !== null && this.success !== undefined) {\n    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);\n    this.success.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.e !== null && this.e !== undefined) {\n    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);\n    this.e.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nMapDClient = function(input, output) {\n    this.input = input;\n    this.output = (!output) ? input : output;\n    this.seqid = 0;\n};\nMapDClient.prototype = {};\nMapDClient.prototype.connect = function(user, passwd, dbname, callback) {\n  this.send_connect(user, passwd, dbname, callback);\n  if (!callback) {\n    return this.recv_connect();\n  }\n};\n\nMapDClient.prototype.send_connect = function(user, passwd, dbname, callback) {\n  this.output.writeMessageBegin('connect', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_connect_args();\n  args.user = user;\n  args.passwd = passwd;\n  args.dbname = dbname;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_connect();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_connect = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_connect_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'connect failed: unknown result';\n};\nMapDClient.prototype.disconnect = function(session, callback) {\n  this.send_disconnect(session, callback);\n  if (!callback) {\n  this.recv_disconnect();\n  }\n};\n\nMapDClient.prototype.send_disconnect = function(session, callback) {\n  this.output.writeMessageBegin('disconnect', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_disconnect_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_disconnect();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_disconnect = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_disconnect_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.get_server_status = function(session, callback) {\n  this.send_get_server_status(session, callback);\n  if (!callback) {\n    return this.recv_get_server_status();\n  }\n};\n\nMapDClient.prototype.send_get_server_status = function(session, callback) {\n  this.output.writeMessageBegin('get_server_status', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_server_status_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_server_status();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_server_status = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_server_status_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_server_status failed: unknown result';\n};\nMapDClient.prototype.get_status = function(session, callback) {\n  this.send_get_status(session, callback);\n  if (!callback) {\n    return this.recv_get_status();\n  }\n};\n\nMapDClient.prototype.send_get_status = function(session, callback) {\n  this.output.writeMessageBegin('get_status', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_status_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_status();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_status = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_status_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_status failed: unknown result';\n};\nMapDClient.prototype.get_tables = function(session, callback) {\n  this.send_get_tables(session, callback);\n  if (!callback) {\n    return this.recv_get_tables();\n  }\n};\n\nMapDClient.prototype.send_get_tables = function(session, callback) {\n  this.output.writeMessageBegin('get_tables', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_tables_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_tables();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_tables = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_tables_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_tables failed: unknown result';\n};\nMapDClient.prototype.get_table_details = function(session, table_name, callback) {\n  this.send_get_table_details(session, table_name, callback);\n  if (!callback) {\n    return this.recv_get_table_details();\n  }\n};\n\nMapDClient.prototype.send_get_table_details = function(session, table_name, callback) {\n  this.output.writeMessageBegin('get_table_details', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_table_details_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_table_details();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_table_details = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_table_details_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_table_details failed: unknown result';\n};\nMapDClient.prototype.get_internal_table_details = function(session, table_name, callback) {\n  this.send_get_internal_table_details(session, table_name, callback);\n  if (!callback) {\n    return this.recv_get_internal_table_details();\n  }\n};\n\nMapDClient.prototype.send_get_internal_table_details = function(session, table_name, callback) {\n  this.output.writeMessageBegin('get_internal_table_details', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_internal_table_details_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_internal_table_details();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_internal_table_details = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_internal_table_details_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_internal_table_details failed: unknown result';\n};\nMapDClient.prototype.get_users = function(session, callback) {\n  this.send_get_users(session, callback);\n  if (!callback) {\n    return this.recv_get_users();\n  }\n};\n\nMapDClient.prototype.send_get_users = function(session, callback) {\n  this.output.writeMessageBegin('get_users', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_users_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_users();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_users = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_users_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_users failed: unknown result';\n};\nMapDClient.prototype.get_databases = function(session, callback) {\n  this.send_get_databases(session, callback);\n  if (!callback) {\n    return this.recv_get_databases();\n  }\n};\n\nMapDClient.prototype.send_get_databases = function(session, callback) {\n  this.output.writeMessageBegin('get_databases', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_databases_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_databases();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_databases = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_databases_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_databases failed: unknown result';\n};\nMapDClient.prototype.get_version = function(callback) {\n  this.send_get_version(callback);\n  if (!callback) {\n    return this.recv_get_version();\n  }\n};\n\nMapDClient.prototype.send_get_version = function(callback) {\n  this.output.writeMessageBegin('get_version', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_version_args();\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_version();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_version = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_version_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_version failed: unknown result';\n};\nMapDClient.prototype.start_heap_profile = function(session, callback) {\n  this.send_start_heap_profile(session, callback);\n  if (!callback) {\n  this.recv_start_heap_profile();\n  }\n};\n\nMapDClient.prototype.send_start_heap_profile = function(session, callback) {\n  this.output.writeMessageBegin('start_heap_profile', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_start_heap_profile_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_start_heap_profile();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_start_heap_profile = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_start_heap_profile_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.stop_heap_profile = function(session, callback) {\n  this.send_stop_heap_profile(session, callback);\n  if (!callback) {\n  this.recv_stop_heap_profile();\n  }\n};\n\nMapDClient.prototype.send_stop_heap_profile = function(session, callback) {\n  this.output.writeMessageBegin('stop_heap_profile', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_stop_heap_profile_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_stop_heap_profile();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_stop_heap_profile = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_stop_heap_profile_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.get_heap_profile = function(session, callback) {\n  this.send_get_heap_profile(session, callback);\n  if (!callback) {\n    return this.recv_get_heap_profile();\n  }\n};\n\nMapDClient.prototype.send_get_heap_profile = function(session, callback) {\n  this.output.writeMessageBegin('get_heap_profile', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_heap_profile_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_heap_profile();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_heap_profile = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_heap_profile_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_heap_profile failed: unknown result';\n};\nMapDClient.prototype.get_memory = function(session, memory_level, callback) {\n  this.send_get_memory(session, memory_level, callback);\n  if (!callback) {\n    return this.recv_get_memory();\n  }\n};\n\nMapDClient.prototype.send_get_memory = function(session, memory_level, callback) {\n  this.output.writeMessageBegin('get_memory', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_memory_args();\n  args.session = session;\n  args.memory_level = memory_level;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_memory();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_memory = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_memory_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_memory failed: unknown result';\n};\nMapDClient.prototype.clear_cpu_memory = function(session, callback) {\n  this.send_clear_cpu_memory(session, callback);\n  if (!callback) {\n  this.recv_clear_cpu_memory();\n  }\n};\n\nMapDClient.prototype.send_clear_cpu_memory = function(session, callback) {\n  this.output.writeMessageBegin('clear_cpu_memory', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_clear_cpu_memory_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_clear_cpu_memory();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_clear_cpu_memory = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_clear_cpu_memory_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.clear_gpu_memory = function(session, callback) {\n  this.send_clear_gpu_memory(session, callback);\n  if (!callback) {\n  this.recv_clear_gpu_memory();\n  }\n};\n\nMapDClient.prototype.send_clear_gpu_memory = function(session, callback) {\n  this.output.writeMessageBegin('clear_gpu_memory', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_clear_gpu_memory_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_clear_gpu_memory();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_clear_gpu_memory = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_clear_gpu_memory_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.rollback_table_epoch = function(session, db_id, table_id, new_epoch, callback) {\n  this.send_rollback_table_epoch(session, db_id, table_id, new_epoch, callback);\n  if (!callback) {\n  this.recv_rollback_table_epoch();\n  }\n};\n\nMapDClient.prototype.send_rollback_table_epoch = function(session, db_id, table_id, new_epoch, callback) {\n  this.output.writeMessageBegin('rollback_table_epoch', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_rollback_table_epoch_args();\n  args.session = session;\n  args.db_id = db_id;\n  args.table_id = table_id;\n  args.new_epoch = new_epoch;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_rollback_table_epoch();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_rollback_table_epoch = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_rollback_table_epoch_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.sql_execute = function(session, query, column_format, nonce, first_n, callback) {\n  this.send_sql_execute(session, query, column_format, nonce, first_n, callback);\n  if (!callback) {\n    return this.recv_sql_execute();\n  }\n};\n\nMapDClient.prototype.send_sql_execute = function(session, query, column_format, nonce, first_n, callback) {\n  this.output.writeMessageBegin('sql_execute', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_sql_execute_args();\n  args.session = session;\n  args.query = query;\n  args.column_format = column_format;\n  args.nonce = nonce;\n  args.first_n = first_n;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_sql_execute();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_sql_execute = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_sql_execute_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'sql_execute failed: unknown result';\n};\nMapDClient.prototype.sql_execute_df = function(session, query, device_type, device_id, first_n, callback) {\n  this.send_sql_execute_df(session, query, device_type, device_id, first_n, callback);\n  if (!callback) {\n    return this.recv_sql_execute_df();\n  }\n};\n\nMapDClient.prototype.send_sql_execute_df = function(session, query, device_type, device_id, first_n, callback) {\n  this.output.writeMessageBegin('sql_execute_df', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_sql_execute_df_args();\n  args.session = session;\n  args.query = query;\n  args.device_type = device_type;\n  args.device_id = device_id;\n  args.first_n = first_n;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_sql_execute_df();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_sql_execute_df = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_sql_execute_df_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'sql_execute_df failed: unknown result';\n};\nMapDClient.prototype.sql_execute_gdf = function(session, query, device_id, first_n, callback) {\n  this.send_sql_execute_gdf(session, query, device_id, first_n, callback);\n  if (!callback) {\n    return this.recv_sql_execute_gdf();\n  }\n};\n\nMapDClient.prototype.send_sql_execute_gdf = function(session, query, device_id, first_n, callback) {\n  this.output.writeMessageBegin('sql_execute_gdf', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_sql_execute_gdf_args();\n  args.session = session;\n  args.query = query;\n  args.device_id = device_id;\n  args.first_n = first_n;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_sql_execute_gdf();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_sql_execute_gdf = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_sql_execute_gdf_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'sql_execute_gdf failed: unknown result';\n};\nMapDClient.prototype.interrupt = function(session, callback) {\n  this.send_interrupt(session, callback);\n  if (!callback) {\n  this.recv_interrupt();\n  }\n};\n\nMapDClient.prototype.send_interrupt = function(session, callback) {\n  this.output.writeMessageBegin('interrupt', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_interrupt_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_interrupt();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_interrupt = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_interrupt_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.sql_validate = function(session, query, callback) {\n  this.send_sql_validate(session, query, callback);\n  if (!callback) {\n    return this.recv_sql_validate();\n  }\n};\n\nMapDClient.prototype.send_sql_validate = function(session, query, callback) {\n  this.output.writeMessageBegin('sql_validate', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_sql_validate_args();\n  args.session = session;\n  args.query = query;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_sql_validate();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_sql_validate = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_sql_validate_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'sql_validate failed: unknown result';\n};\nMapDClient.prototype.set_execution_mode = function(session, mode, callback) {\n  this.send_set_execution_mode(session, mode, callback);\n  if (!callback) {\n  this.recv_set_execution_mode();\n  }\n};\n\nMapDClient.prototype.send_set_execution_mode = function(session, mode, callback) {\n  this.output.writeMessageBegin('set_execution_mode', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_set_execution_mode_args();\n  args.session = session;\n  args.mode = mode;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_set_execution_mode();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_set_execution_mode = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_set_execution_mode_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.render_vega = function(session, widget_id, vega_json, compression_level, nonce, callback) {\n  this.send_render_vega(session, widget_id, vega_json, compression_level, nonce, callback);\n  if (!callback) {\n    return this.recv_render_vega();\n  }\n};\n\nMapDClient.prototype.send_render_vega = function(session, widget_id, vega_json, compression_level, nonce, callback) {\n  this.output.writeMessageBegin('render_vega', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_render_vega_args();\n  args.session = session;\n  args.widget_id = widget_id;\n  args.vega_json = vega_json;\n  args.compression_level = compression_level;\n  args.nonce = nonce;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_render_vega();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_render_vega = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_render_vega_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'render_vega failed: unknown result';\n};\nMapDClient.prototype.get_result_row_for_pixel = function(session, widget_id, pixel, table_col_names, column_format, pixelRadius, nonce, callback) {\n  this.send_get_result_row_for_pixel(session, widget_id, pixel, table_col_names, column_format, pixelRadius, nonce, callback);\n  if (!callback) {\n    return this.recv_get_result_row_for_pixel();\n  }\n};\n\nMapDClient.prototype.send_get_result_row_for_pixel = function(session, widget_id, pixel, table_col_names, column_format, pixelRadius, nonce, callback) {\n  this.output.writeMessageBegin('get_result_row_for_pixel', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_result_row_for_pixel_args();\n  args.session = session;\n  args.widget_id = widget_id;\n  args.pixel = pixel;\n  args.table_col_names = table_col_names;\n  args.column_format = column_format;\n  args.pixelRadius = pixelRadius;\n  args.nonce = nonce;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_result_row_for_pixel();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_result_row_for_pixel = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_result_row_for_pixel_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_result_row_for_pixel failed: unknown result';\n};\nMapDClient.prototype.get_frontend_view = function(session, view_name, callback) {\n  this.send_get_frontend_view(session, view_name, callback);\n  if (!callback) {\n    return this.recv_get_frontend_view();\n  }\n};\n\nMapDClient.prototype.send_get_frontend_view = function(session, view_name, callback) {\n  this.output.writeMessageBegin('get_frontend_view', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_frontend_view_args();\n  args.session = session;\n  args.view_name = view_name;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_frontend_view();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_frontend_view = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_frontend_view_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_frontend_view failed: unknown result';\n};\nMapDClient.prototype.get_frontend_views = function(session, callback) {\n  this.send_get_frontend_views(session, callback);\n  if (!callback) {\n    return this.recv_get_frontend_views();\n  }\n};\n\nMapDClient.prototype.send_get_frontend_views = function(session, callback) {\n  this.output.writeMessageBegin('get_frontend_views', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_frontend_views_args();\n  args.session = session;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_frontend_views();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_frontend_views = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_frontend_views_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_frontend_views failed: unknown result';\n};\nMapDClient.prototype.create_frontend_view = function(session, view_name, view_state, image_hash, view_metadata, callback) {\n  this.send_create_frontend_view(session, view_name, view_state, image_hash, view_metadata, callback);\n  if (!callback) {\n  this.recv_create_frontend_view();\n  }\n};\n\nMapDClient.prototype.send_create_frontend_view = function(session, view_name, view_state, image_hash, view_metadata, callback) {\n  this.output.writeMessageBegin('create_frontend_view', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_create_frontend_view_args();\n  args.session = session;\n  args.view_name = view_name;\n  args.view_state = view_state;\n  args.image_hash = image_hash;\n  args.view_metadata = view_metadata;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_create_frontend_view();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_create_frontend_view = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_create_frontend_view_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.delete_frontend_view = function(session, view_name, callback) {\n  this.send_delete_frontend_view(session, view_name, callback);\n  if (!callback) {\n  this.recv_delete_frontend_view();\n  }\n};\n\nMapDClient.prototype.send_delete_frontend_view = function(session, view_name, callback) {\n  this.output.writeMessageBegin('delete_frontend_view', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_delete_frontend_view_args();\n  args.session = session;\n  args.view_name = view_name;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_delete_frontend_view();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_delete_frontend_view = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_delete_frontend_view_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.get_link_view = function(session, link, callback) {\n  this.send_get_link_view(session, link, callback);\n  if (!callback) {\n    return this.recv_get_link_view();\n  }\n};\n\nMapDClient.prototype.send_get_link_view = function(session, link, callback) {\n  this.output.writeMessageBegin('get_link_view', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_link_view_args();\n  args.session = session;\n  args.link = link;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_link_view();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_link_view = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_link_view_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_link_view failed: unknown result';\n};\nMapDClient.prototype.create_link = function(session, view_state, view_metadata, callback) {\n  this.send_create_link(session, view_state, view_metadata, callback);\n  if (!callback) {\n    return this.recv_create_link();\n  }\n};\n\nMapDClient.prototype.send_create_link = function(session, view_state, view_metadata, callback) {\n  this.output.writeMessageBegin('create_link', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_create_link_args();\n  args.session = session;\n  args.view_state = view_state;\n  args.view_metadata = view_metadata;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_create_link();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_create_link = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_create_link_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'create_link failed: unknown result';\n};\nMapDClient.prototype.load_table_binary = function(session, table_name, rows, callback) {\n  this.send_load_table_binary(session, table_name, rows, callback);\n  if (!callback) {\n  this.recv_load_table_binary();\n  }\n};\n\nMapDClient.prototype.send_load_table_binary = function(session, table_name, rows, callback) {\n  this.output.writeMessageBegin('load_table_binary', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_load_table_binary_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.rows = rows;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_load_table_binary();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_load_table_binary = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_load_table_binary_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.load_table_binary_columnar = function(session, table_name, cols, callback) {\n  this.send_load_table_binary_columnar(session, table_name, cols, callback);\n  if (!callback) {\n  this.recv_load_table_binary_columnar();\n  }\n};\n\nMapDClient.prototype.send_load_table_binary_columnar = function(session, table_name, cols, callback) {\n  this.output.writeMessageBegin('load_table_binary_columnar', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_load_table_binary_columnar_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.cols = cols;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_load_table_binary_columnar();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_load_table_binary_columnar = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_load_table_binary_columnar_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.load_table = function(session, table_name, rows, callback) {\n  this.send_load_table(session, table_name, rows, callback);\n  if (!callback) {\n  this.recv_load_table();\n  }\n};\n\nMapDClient.prototype.send_load_table = function(session, table_name, rows, callback) {\n  this.output.writeMessageBegin('load_table', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_load_table_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.rows = rows;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_load_table();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_load_table = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_load_table_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.detect_column_types = function(session, file_name, copy_params, callback) {\n  this.send_detect_column_types(session, file_name, copy_params, callback);\n  if (!callback) {\n    return this.recv_detect_column_types();\n  }\n};\n\nMapDClient.prototype.send_detect_column_types = function(session, file_name, copy_params, callback) {\n  this.output.writeMessageBegin('detect_column_types', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_detect_column_types_args();\n  args.session = session;\n  args.file_name = file_name;\n  args.copy_params = copy_params;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_detect_column_types();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_detect_column_types = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_detect_column_types_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'detect_column_types failed: unknown result';\n};\nMapDClient.prototype.create_table = function(session, table_name, row_desc, table_type, callback) {\n  this.send_create_table(session, table_name, row_desc, table_type, callback);\n  if (!callback) {\n  this.recv_create_table();\n  }\n};\n\nMapDClient.prototype.send_create_table = function(session, table_name, row_desc, table_type, callback) {\n  this.output.writeMessageBegin('create_table', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_create_table_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.row_desc = row_desc;\n  args.table_type = table_type;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_create_table();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_create_table = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_create_table_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.import_table = function(session, table_name, file_name, copy_params, callback) {\n  this.send_import_table(session, table_name, file_name, copy_params, callback);\n  if (!callback) {\n  this.recv_import_table();\n  }\n};\n\nMapDClient.prototype.send_import_table = function(session, table_name, file_name, copy_params, callback) {\n  this.output.writeMessageBegin('import_table', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_import_table_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.file_name = file_name;\n  args.copy_params = copy_params;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_import_table();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_import_table = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_import_table_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.import_geo_table = function(session, table_name, file_name, copy_params, row_desc, callback) {\n  this.send_import_geo_table(session, table_name, file_name, copy_params, row_desc, callback);\n  if (!callback) {\n  this.recv_import_geo_table();\n  }\n};\n\nMapDClient.prototype.send_import_geo_table = function(session, table_name, file_name, copy_params, row_desc, callback) {\n  this.output.writeMessageBegin('import_geo_table', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_import_geo_table_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.file_name = file_name;\n  args.copy_params = copy_params;\n  args.row_desc = row_desc;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_import_geo_table();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_import_geo_table = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_import_geo_table_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.import_table_status = function(session, import_id, callback) {\n  this.send_import_table_status(session, import_id, callback);\n  if (!callback) {\n    return this.recv_import_table_status();\n  }\n};\n\nMapDClient.prototype.send_import_table_status = function(session, import_id, callback) {\n  this.output.writeMessageBegin('import_table_status', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_import_table_status_args();\n  args.session = session;\n  args.import_id = import_id;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_import_table_status();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_import_table_status = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_import_table_status_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'import_table_status failed: unknown result';\n};\nMapDClient.prototype.start_query = function(session, query_ra, just_explain, callback) {\n  this.send_start_query(session, query_ra, just_explain, callback);\n  if (!callback) {\n    return this.recv_start_query();\n  }\n};\n\nMapDClient.prototype.send_start_query = function(session, query_ra, just_explain, callback) {\n  this.output.writeMessageBegin('start_query', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_start_query_args();\n  args.session = session;\n  args.query_ra = query_ra;\n  args.just_explain = just_explain;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_start_query();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_start_query = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_start_query_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'start_query failed: unknown result';\n};\nMapDClient.prototype.execute_first_step = function(pending_query, callback) {\n  this.send_execute_first_step(pending_query, callback);\n  if (!callback) {\n    return this.recv_execute_first_step();\n  }\n};\n\nMapDClient.prototype.send_execute_first_step = function(pending_query, callback) {\n  this.output.writeMessageBegin('execute_first_step', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_execute_first_step_args();\n  args.pending_query = pending_query;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_execute_first_step();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_execute_first_step = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_execute_first_step_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'execute_first_step failed: unknown result';\n};\nMapDClient.prototype.broadcast_serialized_rows = function(serialized_rows, row_desc, query_id, callback) {\n  this.send_broadcast_serialized_rows(serialized_rows, row_desc, query_id, callback);\n  if (!callback) {\n  this.recv_broadcast_serialized_rows();\n  }\n};\n\nMapDClient.prototype.send_broadcast_serialized_rows = function(serialized_rows, row_desc, query_id, callback) {\n  this.output.writeMessageBegin('broadcast_serialized_rows', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_broadcast_serialized_rows_args();\n  args.serialized_rows = serialized_rows;\n  args.row_desc = row_desc;\n  args.query_id = query_id;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_broadcast_serialized_rows();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_broadcast_serialized_rows = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_broadcast_serialized_rows_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.render_vega_raw_pixels = function(session, widget_id, node_idx, vega_json, callback) {\n  this.send_render_vega_raw_pixels(session, widget_id, node_idx, vega_json, callback);\n  if (!callback) {\n    return this.recv_render_vega_raw_pixels();\n  }\n};\n\nMapDClient.prototype.send_render_vega_raw_pixels = function(session, widget_id, node_idx, vega_json, callback) {\n  this.output.writeMessageBegin('render_vega_raw_pixels', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_render_vega_raw_pixels_args();\n  args.session = session;\n  args.widget_id = widget_id;\n  args.node_idx = node_idx;\n  args.vega_json = vega_json;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_render_vega_raw_pixels();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_render_vega_raw_pixels = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_render_vega_raw_pixels_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'render_vega_raw_pixels failed: unknown result';\n};\nMapDClient.prototype.insert_data = function(session, insert_data, callback) {\n  this.send_insert_data(session, insert_data, callback);\n  if (!callback) {\n  this.recv_insert_data();\n  }\n};\n\nMapDClient.prototype.send_insert_data = function(session, insert_data, callback) {\n  this.output.writeMessageBegin('insert_data', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_insert_data_args();\n  args.session = session;\n  args.insert_data = insert_data;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_insert_data();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_insert_data = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_insert_data_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  return;\n};\nMapDClient.prototype.get_table_descriptor = function(session, table_name, callback) {\n  this.send_get_table_descriptor(session, table_name, callback);\n  if (!callback) {\n    return this.recv_get_table_descriptor();\n  }\n};\n\nMapDClient.prototype.send_get_table_descriptor = function(session, table_name, callback) {\n  this.output.writeMessageBegin('get_table_descriptor', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_table_descriptor_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_table_descriptor();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_table_descriptor = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_table_descriptor_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_table_descriptor failed: unknown result';\n};\nMapDClient.prototype.get_row_descriptor = function(session, table_name, callback) {\n  this.send_get_row_descriptor(session, table_name, callback);\n  if (!callback) {\n    return this.recv_get_row_descriptor();\n  }\n};\n\nMapDClient.prototype.send_get_row_descriptor = function(session, table_name, callback) {\n  this.output.writeMessageBegin('get_row_descriptor', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_row_descriptor_args();\n  args.session = session;\n  args.table_name = table_name;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_row_descriptor();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_row_descriptor = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_row_descriptor_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_row_descriptor failed: unknown result';\n};\nMapDClient.prototype.render = function(session, query, render_type, nonce, callback) {\n  this.send_render(session, query, render_type, nonce, callback);\n  if (!callback) {\n    return this.recv_render();\n  }\n};\n\nMapDClient.prototype.send_render = function(session, query, render_type, nonce, callback) {\n  this.output.writeMessageBegin('render', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_render_args();\n  args.session = session;\n  args.query = query;\n  args.render_type = render_type;\n  args.nonce = nonce;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_render();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_render = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_render_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'render failed: unknown result';\n};\nMapDClient.prototype.get_rows_for_pixels = function(session, widget_id, pixels, table_name, col_names, column_format, nonce, callback) {\n  this.send_get_rows_for_pixels(session, widget_id, pixels, table_name, col_names, column_format, nonce, callback);\n  if (!callback) {\n    return this.recv_get_rows_for_pixels();\n  }\n};\n\nMapDClient.prototype.send_get_rows_for_pixels = function(session, widget_id, pixels, table_name, col_names, column_format, nonce, callback) {\n  this.output.writeMessageBegin('get_rows_for_pixels', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_rows_for_pixels_args();\n  args.session = session;\n  args.widget_id = widget_id;\n  args.pixels = pixels;\n  args.table_name = table_name;\n  args.col_names = col_names;\n  args.column_format = column_format;\n  args.nonce = nonce;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_rows_for_pixels();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_rows_for_pixels = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_rows_for_pixels_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_rows_for_pixels failed: unknown result';\n};\nMapDClient.prototype.get_row_for_pixel = function(session, widget_id, pixel, table_name, col_names, column_format, pixelRadius, nonce, callback) {\n  this.send_get_row_for_pixel(session, widget_id, pixel, table_name, col_names, column_format, pixelRadius, nonce, callback);\n  if (!callback) {\n    return this.recv_get_row_for_pixel();\n  }\n};\n\nMapDClient.prototype.send_get_row_for_pixel = function(session, widget_id, pixel, table_name, col_names, column_format, pixelRadius, nonce, callback) {\n  this.output.writeMessageBegin('get_row_for_pixel', Thrift.MessageType.CALL, this.seqid);\n  var args = new MapD_get_row_for_pixel_args();\n  args.session = session;\n  args.widget_id = widget_id;\n  args.pixel = pixel;\n  args.table_name = table_name;\n  args.col_names = col_names;\n  args.column_format = column_format;\n  args.pixelRadius = pixelRadius;\n  args.nonce = nonce;\n  args.write(this.output);\n  this.output.writeMessageEnd();\n  if (callback) {\n    var self = this;\n    this.output.getTransport().flush(true, function() {\n      var result = null;\n      try {\n        result = self.recv_get_row_for_pixel();\n      } catch (e) {\n        result = e;\n      }\n      callback(result);\n    });\n  } else {\n    return this.output.getTransport().flush();\n  }\n};\n\nMapDClient.prototype.recv_get_row_for_pixel = function() {\n  var ret = this.input.readMessageBegin();\n  var fname = ret.fname;\n  var mtype = ret.mtype;\n  var rseqid = ret.rseqid;\n  if (mtype == Thrift.MessageType.EXCEPTION) {\n    var x = new Thrift.TApplicationException();\n    x.read(this.input);\n    this.input.readMessageEnd();\n    throw x;\n  }\n  var result = new MapD_get_row_for_pixel_result();\n  result.read(this.input);\n  this.input.readMessageEnd();\n\n  if (null !== result.e) {\n    throw result.e;\n  }\n  if (null !== result.success) {\n    return result.success;\n  }\n  throw 'get_row_for_pixel failed: unknown result';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/thrift-layer/lib/mapd.thrift.js\n// module id = 47\n// module chunks = 0","//\n// Autogenerated by Thrift Compiler (0.10.0)\n//\n// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n//\n\n\nTDatumType = {\n  'SMALLINT' : 0,\n  'INT' : 1,\n  'BIGINT' : 2,\n  'FLOAT' : 3,\n  'DECIMAL' : 4,\n  'DOUBLE' : 5,\n  'STR' : 6,\n  'TIME' : 7,\n  'TIMESTAMP' : 8,\n  'DATE' : 9,\n  'BOOL' : 10,\n  'INTERVAL_DAY_TIME' : 11,\n  'INTERVAL_YEAR_MONTH' : 12\n};\nTEncodingType = {\n  'NONE' : 0,\n  'FIXED' : 1,\n  'RL' : 2,\n  'DIFF' : 3,\n  'DICT' : 4,\n  'SPARSE' : 5\n};\nTExecuteMode = {\n  'HYBRID' : 0,\n  'GPU' : 1,\n  'CPU' : 2\n};\nTDeviceType = {\n  'CPU' : 0,\n  'GPU' : 1\n};\nTTableType = {\n  'DELIMITED' : 0,\n  'POLYGON' : 1\n};\nTMergeType = {\n  'UNION' : 0,\n  'REDUCE' : 1\n};\nTExpressionRangeType = {\n  'INVALID' : 0,\n  'INTEGER' : 1,\n  'FLOAT' : 2,\n  'DOUBLE' : 3\n};\nTDatumVal = function(args) {\n  this.int_val = null;\n  this.real_val = null;\n  this.str_val = null;\n  this.arr_val = null;\n  if (args) {\n    if (args.int_val !== undefined && args.int_val !== null) {\n      this.int_val = args.int_val;\n    }\n    if (args.real_val !== undefined && args.real_val !== null) {\n      this.real_val = args.real_val;\n    }\n    if (args.str_val !== undefined && args.str_val !== null) {\n      this.str_val = args.str_val;\n    }\n    if (args.arr_val !== undefined && args.arr_val !== null) {\n      this.arr_val = Thrift.copyList(args.arr_val, [null]);\n    }\n  }\n};\nTDatumVal.prototype = {};\nTDatumVal.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.int_val = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.DOUBLE) {\n        this.real_val = input.readDouble().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.str_val = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size0 = 0;\n        var _rtmp34;\n        this.arr_val = [];\n        var _etype3 = 0;\n        _rtmp34 = input.readListBegin();\n        _etype3 = _rtmp34.etype;\n        _size0 = _rtmp34.size;\n        for (var _i5 = 0; _i5 < _size0; ++_i5)\n        {\n          var elem6 = null;\n          elem6 = new TDatum();\n          elem6.read(input);\n          this.arr_val.push(elem6);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDatumVal.prototype.write = function(output) {\n  output.writeStructBegin('TDatumVal');\n  if (this.int_val !== null && this.int_val !== undefined) {\n    output.writeFieldBegin('int_val', Thrift.Type.I64, 1);\n    output.writeI64(this.int_val);\n    output.writeFieldEnd();\n  }\n  if (this.real_val !== null && this.real_val !== undefined) {\n    output.writeFieldBegin('real_val', Thrift.Type.DOUBLE, 2);\n    output.writeDouble(this.real_val);\n    output.writeFieldEnd();\n  }\n  if (this.str_val !== null && this.str_val !== undefined) {\n    output.writeFieldBegin('str_val', Thrift.Type.STRING, 3);\n    output.writeString(this.str_val);\n    output.writeFieldEnd();\n  }\n  if (this.arr_val !== null && this.arr_val !== undefined) {\n    output.writeFieldBegin('arr_val', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.arr_val.length);\n    for (var iter7 in this.arr_val)\n    {\n      if (this.arr_val.hasOwnProperty(iter7))\n      {\n        iter7 = this.arr_val[iter7];\n        iter7.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTDatum = function(args) {\n  this.val = null;\n  this.is_null = null;\n  if (args) {\n    if (args.val !== undefined && args.val !== null) {\n      this.val = new TDatumVal(args.val);\n    }\n    if (args.is_null !== undefined && args.is_null !== null) {\n      this.is_null = args.is_null;\n    }\n  }\n};\nTDatum.prototype = {};\nTDatum.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.val = new TDatumVal();\n        this.val.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_null = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDatum.prototype.write = function(output) {\n  output.writeStructBegin('TDatum');\n  if (this.val !== null && this.val !== undefined) {\n    output.writeFieldBegin('val', Thrift.Type.STRUCT, 1);\n    this.val.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.is_null !== null && this.is_null !== undefined) {\n    output.writeFieldBegin('is_null', Thrift.Type.BOOL, 2);\n    output.writeBool(this.is_null);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTStringValue = function(args) {\n  this.str_val = null;\n  this.is_null = null;\n  if (args) {\n    if (args.str_val !== undefined && args.str_val !== null) {\n      this.str_val = args.str_val;\n    }\n    if (args.is_null !== undefined && args.is_null !== null) {\n      this.is_null = args.is_null;\n    }\n  }\n};\nTStringValue.prototype = {};\nTStringValue.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.str_val = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_null = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTStringValue.prototype.write = function(output) {\n  output.writeStructBegin('TStringValue');\n  if (this.str_val !== null && this.str_val !== undefined) {\n    output.writeFieldBegin('str_val', Thrift.Type.STRING, 1);\n    output.writeString(this.str_val);\n    output.writeFieldEnd();\n  }\n  if (this.is_null !== null && this.is_null !== undefined) {\n    output.writeFieldBegin('is_null', Thrift.Type.BOOL, 2);\n    output.writeBool(this.is_null);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTTypeInfo = function(args) {\n  this.type = null;\n  this.encoding = null;\n  this.nullable = null;\n  this.is_array = null;\n  this.precision = null;\n  this.scale = null;\n  this.comp_param = null;\n  if (args) {\n    if (args.type !== undefined && args.type !== null) {\n      this.type = args.type;\n    }\n    if (args.encoding !== undefined && args.encoding !== null) {\n      this.encoding = args.encoding;\n    }\n    if (args.nullable !== undefined && args.nullable !== null) {\n      this.nullable = args.nullable;\n    }\n    if (args.is_array !== undefined && args.is_array !== null) {\n      this.is_array = args.is_array;\n    }\n    if (args.precision !== undefined && args.precision !== null) {\n      this.precision = args.precision;\n    }\n    if (args.scale !== undefined && args.scale !== null) {\n      this.scale = args.scale;\n    }\n    if (args.comp_param !== undefined && args.comp_param !== null) {\n      this.comp_param = args.comp_param;\n    }\n  }\n};\nTTypeInfo.prototype = {};\nTTypeInfo.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.encoding = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.BOOL) {\n        this.nullable = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_array = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I32) {\n        this.precision = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I32) {\n        this.scale = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I32) {\n        this.comp_param = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTTypeInfo.prototype.write = function(output) {\n  output.writeStructBegin('TTypeInfo');\n  if (this.type !== null && this.type !== undefined) {\n    output.writeFieldBegin('type', Thrift.Type.I32, 1);\n    output.writeI32(this.type);\n    output.writeFieldEnd();\n  }\n  if (this.encoding !== null && this.encoding !== undefined) {\n    output.writeFieldBegin('encoding', Thrift.Type.I32, 4);\n    output.writeI32(this.encoding);\n    output.writeFieldEnd();\n  }\n  if (this.nullable !== null && this.nullable !== undefined) {\n    output.writeFieldBegin('nullable', Thrift.Type.BOOL, 2);\n    output.writeBool(this.nullable);\n    output.writeFieldEnd();\n  }\n  if (this.is_array !== null && this.is_array !== undefined) {\n    output.writeFieldBegin('is_array', Thrift.Type.BOOL, 3);\n    output.writeBool(this.is_array);\n    output.writeFieldEnd();\n  }\n  if (this.precision !== null && this.precision !== undefined) {\n    output.writeFieldBegin('precision', Thrift.Type.I32, 5);\n    output.writeI32(this.precision);\n    output.writeFieldEnd();\n  }\n  if (this.scale !== null && this.scale !== undefined) {\n    output.writeFieldBegin('scale', Thrift.Type.I32, 6);\n    output.writeI32(this.scale);\n    output.writeFieldEnd();\n  }\n  if (this.comp_param !== null && this.comp_param !== undefined) {\n    output.writeFieldBegin('comp_param', Thrift.Type.I32, 7);\n    output.writeI32(this.comp_param);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTColumnType = function(args) {\n  this.col_name = null;\n  this.col_type = null;\n  this.is_reserved_keyword = null;\n  this.src_name = null;\n  this.is_system = null;\n  if (args) {\n    if (args.col_name !== undefined && args.col_name !== null) {\n      this.col_name = args.col_name;\n    }\n    if (args.col_type !== undefined && args.col_type !== null) {\n      this.col_type = new TTypeInfo(args.col_type);\n    }\n    if (args.is_reserved_keyword !== undefined && args.is_reserved_keyword !== null) {\n      this.is_reserved_keyword = args.is_reserved_keyword;\n    }\n    if (args.src_name !== undefined && args.src_name !== null) {\n      this.src_name = args.src_name;\n    }\n    if (args.is_system !== undefined && args.is_system !== null) {\n      this.is_system = args.is_system;\n    }\n  }\n};\nTColumnType.prototype = {};\nTColumnType.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.col_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.col_type = new TTypeInfo();\n        this.col_type.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_reserved_keyword = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.src_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_system = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTColumnType.prototype.write = function(output) {\n  output.writeStructBegin('TColumnType');\n  if (this.col_name !== null && this.col_name !== undefined) {\n    output.writeFieldBegin('col_name', Thrift.Type.STRING, 1);\n    output.writeString(this.col_name);\n    output.writeFieldEnd();\n  }\n  if (this.col_type !== null && this.col_type !== undefined) {\n    output.writeFieldBegin('col_type', Thrift.Type.STRUCT, 2);\n    this.col_type.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.is_reserved_keyword !== null && this.is_reserved_keyword !== undefined) {\n    output.writeFieldBegin('is_reserved_keyword', Thrift.Type.BOOL, 3);\n    output.writeBool(this.is_reserved_keyword);\n    output.writeFieldEnd();\n  }\n  if (this.src_name !== null && this.src_name !== undefined) {\n    output.writeFieldBegin('src_name', Thrift.Type.STRING, 4);\n    output.writeString(this.src_name);\n    output.writeFieldEnd();\n  }\n  if (this.is_system !== null && this.is_system !== undefined) {\n    output.writeFieldBegin('is_system', Thrift.Type.BOOL, 5);\n    output.writeBool(this.is_system);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTRow = function(args) {\n  this.cols = null;\n  if (args) {\n    if (args.cols !== undefined && args.cols !== null) {\n      this.cols = Thrift.copyList(args.cols, [TDatum]);\n    }\n  }\n};\nTRow.prototype = {};\nTRow.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size8 = 0;\n        var _rtmp312;\n        this.cols = [];\n        var _etype11 = 0;\n        _rtmp312 = input.readListBegin();\n        _etype11 = _rtmp312.etype;\n        _size8 = _rtmp312.size;\n        for (var _i13 = 0; _i13 < _size8; ++_i13)\n        {\n          var elem14 = null;\n          elem14 = new TDatum();\n          elem14.read(input);\n          this.cols.push(elem14);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTRow.prototype.write = function(output) {\n  output.writeStructBegin('TRow');\n  if (this.cols !== null && this.cols !== undefined) {\n    output.writeFieldBegin('cols', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.cols.length);\n    for (var iter15 in this.cols)\n    {\n      if (this.cols.hasOwnProperty(iter15))\n      {\n        iter15 = this.cols[iter15];\n        iter15.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTColumnData = function(args) {\n  this.int_col = null;\n  this.real_col = null;\n  this.str_col = null;\n  this.arr_col = null;\n  if (args) {\n    if (args.int_col !== undefined && args.int_col !== null) {\n      this.int_col = Thrift.copyList(args.int_col, [null]);\n    }\n    if (args.real_col !== undefined && args.real_col !== null) {\n      this.real_col = Thrift.copyList(args.real_col, [null]);\n    }\n    if (args.str_col !== undefined && args.str_col !== null) {\n      this.str_col = Thrift.copyList(args.str_col, [null]);\n    }\n    if (args.arr_col !== undefined && args.arr_col !== null) {\n      this.arr_col = Thrift.copyList(args.arr_col, [null]);\n    }\n  }\n};\nTColumnData.prototype = {};\nTColumnData.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size16 = 0;\n        var _rtmp320;\n        this.int_col = [];\n        var _etype19 = 0;\n        _rtmp320 = input.readListBegin();\n        _etype19 = _rtmp320.etype;\n        _size16 = _rtmp320.size;\n        for (var _i21 = 0; _i21 < _size16; ++_i21)\n        {\n          var elem22 = null;\n          elem22 = input.readI64().value;\n          this.int_col.push(elem22);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size23 = 0;\n        var _rtmp327;\n        this.real_col = [];\n        var _etype26 = 0;\n        _rtmp327 = input.readListBegin();\n        _etype26 = _rtmp327.etype;\n        _size23 = _rtmp327.size;\n        for (var _i28 = 0; _i28 < _size23; ++_i28)\n        {\n          var elem29 = null;\n          elem29 = input.readDouble().value;\n          this.real_col.push(elem29);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size30 = 0;\n        var _rtmp334;\n        this.str_col = [];\n        var _etype33 = 0;\n        _rtmp334 = input.readListBegin();\n        _etype33 = _rtmp334.etype;\n        _size30 = _rtmp334.size;\n        for (var _i35 = 0; _i35 < _size30; ++_i35)\n        {\n          var elem36 = null;\n          elem36 = input.readString().value;\n          this.str_col.push(elem36);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size37 = 0;\n        var _rtmp341;\n        this.arr_col = [];\n        var _etype40 = 0;\n        _rtmp341 = input.readListBegin();\n        _etype40 = _rtmp341.etype;\n        _size37 = _rtmp341.size;\n        for (var _i42 = 0; _i42 < _size37; ++_i42)\n        {\n          var elem43 = null;\n          elem43 = new TColumn();\n          elem43.read(input);\n          this.arr_col.push(elem43);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTColumnData.prototype.write = function(output) {\n  output.writeStructBegin('TColumnData');\n  if (this.int_col !== null && this.int_col !== undefined) {\n    output.writeFieldBegin('int_col', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.I64, this.int_col.length);\n    for (var iter44 in this.int_col)\n    {\n      if (this.int_col.hasOwnProperty(iter44))\n      {\n        iter44 = this.int_col[iter44];\n        output.writeI64(iter44);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.real_col !== null && this.real_col !== undefined) {\n    output.writeFieldBegin('real_col', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.DOUBLE, this.real_col.length);\n    for (var iter45 in this.real_col)\n    {\n      if (this.real_col.hasOwnProperty(iter45))\n      {\n        iter45 = this.real_col[iter45];\n        output.writeDouble(iter45);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.str_col !== null && this.str_col !== undefined) {\n    output.writeFieldBegin('str_col', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRING, this.str_col.length);\n    for (var iter46 in this.str_col)\n    {\n      if (this.str_col.hasOwnProperty(iter46))\n      {\n        iter46 = this.str_col[iter46];\n        output.writeString(iter46);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.arr_col !== null && this.arr_col !== undefined) {\n    output.writeFieldBegin('arr_col', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.arr_col.length);\n    for (var iter47 in this.arr_col)\n    {\n      if (this.arr_col.hasOwnProperty(iter47))\n      {\n        iter47 = this.arr_col[iter47];\n        iter47.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTColumn = function(args) {\n  this.data = null;\n  this.nulls = null;\n  if (args) {\n    if (args.data !== undefined && args.data !== null) {\n      this.data = new TColumnData(args.data);\n    }\n    if (args.nulls !== undefined && args.nulls !== null) {\n      this.nulls = Thrift.copyList(args.nulls, [null]);\n    }\n  }\n};\nTColumn.prototype = {};\nTColumn.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.data = new TColumnData();\n        this.data.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size48 = 0;\n        var _rtmp352;\n        this.nulls = [];\n        var _etype51 = 0;\n        _rtmp352 = input.readListBegin();\n        _etype51 = _rtmp352.etype;\n        _size48 = _rtmp352.size;\n        for (var _i53 = 0; _i53 < _size48; ++_i53)\n        {\n          var elem54 = null;\n          elem54 = input.readBool().value;\n          this.nulls.push(elem54);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTColumn.prototype.write = function(output) {\n  output.writeStructBegin('TColumn');\n  if (this.data !== null && this.data !== undefined) {\n    output.writeFieldBegin('data', Thrift.Type.STRUCT, 1);\n    this.data.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.nulls !== null && this.nulls !== undefined) {\n    output.writeFieldBegin('nulls', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.BOOL, this.nulls.length);\n    for (var iter55 in this.nulls)\n    {\n      if (this.nulls.hasOwnProperty(iter55))\n      {\n        iter55 = this.nulls[iter55];\n        output.writeBool(iter55);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTStringRow = function(args) {\n  this.cols = null;\n  if (args) {\n    if (args.cols !== undefined && args.cols !== null) {\n      this.cols = Thrift.copyList(args.cols, [TStringValue]);\n    }\n  }\n};\nTStringRow.prototype = {};\nTStringRow.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size56 = 0;\n        var _rtmp360;\n        this.cols = [];\n        var _etype59 = 0;\n        _rtmp360 = input.readListBegin();\n        _etype59 = _rtmp360.etype;\n        _size56 = _rtmp360.size;\n        for (var _i61 = 0; _i61 < _size56; ++_i61)\n        {\n          var elem62 = null;\n          elem62 = new TStringValue();\n          elem62.read(input);\n          this.cols.push(elem62);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTStringRow.prototype.write = function(output) {\n  output.writeStructBegin('TStringRow');\n  if (this.cols !== null && this.cols !== undefined) {\n    output.writeFieldBegin('cols', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.cols.length);\n    for (var iter63 in this.cols)\n    {\n      if (this.cols.hasOwnProperty(iter63))\n      {\n        iter63 = this.cols[iter63];\n        iter63.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTStepResult = function(args) {\n  this.serialized_rows = null;\n  this.execution_finished = null;\n  this.merge_type = null;\n  this.sharded = null;\n  this.row_desc = null;\n  this.node_id = null;\n  if (args) {\n    if (args.serialized_rows !== undefined && args.serialized_rows !== null) {\n      this.serialized_rows = args.serialized_rows;\n    }\n    if (args.execution_finished !== undefined && args.execution_finished !== null) {\n      this.execution_finished = args.execution_finished;\n    }\n    if (args.merge_type !== undefined && args.merge_type !== null) {\n      this.merge_type = args.merge_type;\n    }\n    if (args.sharded !== undefined && args.sharded !== null) {\n      this.sharded = args.sharded;\n    }\n    if (args.row_desc !== undefined && args.row_desc !== null) {\n      this.row_desc = Thrift.copyList(args.row_desc, [TColumnType]);\n    }\n    if (args.node_id !== undefined && args.node_id !== null) {\n      this.node_id = args.node_id;\n    }\n  }\n};\nTStepResult.prototype = {};\nTStepResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.serialized_rows = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.BOOL) {\n        this.execution_finished = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I32) {\n        this.merge_type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.BOOL) {\n        this.sharded = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.LIST) {\n        var _size64 = 0;\n        var _rtmp368;\n        this.row_desc = [];\n        var _etype67 = 0;\n        _rtmp368 = input.readListBegin();\n        _etype67 = _rtmp368.etype;\n        _size64 = _rtmp368.size;\n        for (var _i69 = 0; _i69 < _size64; ++_i69)\n        {\n          var elem70 = null;\n          elem70 = new TColumnType();\n          elem70.read(input);\n          this.row_desc.push(elem70);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I32) {\n        this.node_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTStepResult.prototype.write = function(output) {\n  output.writeStructBegin('TStepResult');\n  if (this.serialized_rows !== null && this.serialized_rows !== undefined) {\n    output.writeFieldBegin('serialized_rows', Thrift.Type.STRING, 1);\n    output.writeString(this.serialized_rows);\n    output.writeFieldEnd();\n  }\n  if (this.execution_finished !== null && this.execution_finished !== undefined) {\n    output.writeFieldBegin('execution_finished', Thrift.Type.BOOL, 2);\n    output.writeBool(this.execution_finished);\n    output.writeFieldEnd();\n  }\n  if (this.merge_type !== null && this.merge_type !== undefined) {\n    output.writeFieldBegin('merge_type', Thrift.Type.I32, 3);\n    output.writeI32(this.merge_type);\n    output.writeFieldEnd();\n  }\n  if (this.sharded !== null && this.sharded !== undefined) {\n    output.writeFieldBegin('sharded', Thrift.Type.BOOL, 4);\n    output.writeBool(this.sharded);\n    output.writeFieldEnd();\n  }\n  if (this.row_desc !== null && this.row_desc !== undefined) {\n    output.writeFieldBegin('row_desc', Thrift.Type.LIST, 5);\n    output.writeListBegin(Thrift.Type.STRUCT, this.row_desc.length);\n    for (var iter71 in this.row_desc)\n    {\n      if (this.row_desc.hasOwnProperty(iter71))\n      {\n        iter71 = this.row_desc[iter71];\n        iter71.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.node_id !== null && this.node_id !== undefined) {\n    output.writeFieldBegin('node_id', Thrift.Type.I32, 6);\n    output.writeI32(this.node_id);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTRowSet = function(args) {\n  this.row_desc = null;\n  this.rows = null;\n  this.columns = null;\n  this.is_columnar = null;\n  if (args) {\n    if (args.row_desc !== undefined && args.row_desc !== null) {\n      this.row_desc = Thrift.copyList(args.row_desc, [TColumnType]);\n    }\n    if (args.rows !== undefined && args.rows !== null) {\n      this.rows = Thrift.copyList(args.rows, [TRow]);\n    }\n    if (args.columns !== undefined && args.columns !== null) {\n      this.columns = Thrift.copyList(args.columns, [TColumn]);\n    }\n    if (args.is_columnar !== undefined && args.is_columnar !== null) {\n      this.is_columnar = args.is_columnar;\n    }\n  }\n};\nTRowSet.prototype = {};\nTRowSet.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size72 = 0;\n        var _rtmp376;\n        this.row_desc = [];\n        var _etype75 = 0;\n        _rtmp376 = input.readListBegin();\n        _etype75 = _rtmp376.etype;\n        _size72 = _rtmp376.size;\n        for (var _i77 = 0; _i77 < _size72; ++_i77)\n        {\n          var elem78 = null;\n          elem78 = new TColumnType();\n          elem78.read(input);\n          this.row_desc.push(elem78);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size79 = 0;\n        var _rtmp383;\n        this.rows = [];\n        var _etype82 = 0;\n        _rtmp383 = input.readListBegin();\n        _etype82 = _rtmp383.etype;\n        _size79 = _rtmp383.size;\n        for (var _i84 = 0; _i84 < _size79; ++_i84)\n        {\n          var elem85 = null;\n          elem85 = new TRow();\n          elem85.read(input);\n          this.rows.push(elem85);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size86 = 0;\n        var _rtmp390;\n        this.columns = [];\n        var _etype89 = 0;\n        _rtmp390 = input.readListBegin();\n        _etype89 = _rtmp390.etype;\n        _size86 = _rtmp390.size;\n        for (var _i91 = 0; _i91 < _size86; ++_i91)\n        {\n          var elem92 = null;\n          elem92 = new TColumn();\n          elem92.read(input);\n          this.columns.push(elem92);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_columnar = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTRowSet.prototype.write = function(output) {\n  output.writeStructBegin('TRowSet');\n  if (this.row_desc !== null && this.row_desc !== undefined) {\n    output.writeFieldBegin('row_desc', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.row_desc.length);\n    for (var iter93 in this.row_desc)\n    {\n      if (this.row_desc.hasOwnProperty(iter93))\n      {\n        iter93 = this.row_desc[iter93];\n        iter93.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.rows !== null && this.rows !== undefined) {\n    output.writeFieldBegin('rows', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.rows.length);\n    for (var iter94 in this.rows)\n    {\n      if (this.rows.hasOwnProperty(iter94))\n      {\n        iter94 = this.rows[iter94];\n        iter94.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.columns !== null && this.columns !== undefined) {\n    output.writeFieldBegin('columns', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.columns.length);\n    for (var iter95 in this.columns)\n    {\n      if (this.columns.hasOwnProperty(iter95))\n      {\n        iter95 = this.columns[iter95];\n        iter95.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.is_columnar !== null && this.is_columnar !== undefined) {\n    output.writeFieldBegin('is_columnar', Thrift.Type.BOOL, 4);\n    output.writeBool(this.is_columnar);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTQueryResult = function(args) {\n  this.row_set = null;\n  this.execution_time_ms = null;\n  this.total_time_ms = null;\n  this.nonce = null;\n  if (args) {\n    if (args.row_set !== undefined && args.row_set !== null) {\n      this.row_set = new TRowSet(args.row_set);\n    }\n    if (args.execution_time_ms !== undefined && args.execution_time_ms !== null) {\n      this.execution_time_ms = args.execution_time_ms;\n    }\n    if (args.total_time_ms !== undefined && args.total_time_ms !== null) {\n      this.total_time_ms = args.total_time_ms;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nTQueryResult.prototype = {};\nTQueryResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.row_set = new TRowSet();\n        this.row_set.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.execution_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.total_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTQueryResult.prototype.write = function(output) {\n  output.writeStructBegin('TQueryResult');\n  if (this.row_set !== null && this.row_set !== undefined) {\n    output.writeFieldBegin('row_set', Thrift.Type.STRUCT, 1);\n    this.row_set.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.execution_time_ms !== null && this.execution_time_ms !== undefined) {\n    output.writeFieldBegin('execution_time_ms', Thrift.Type.I64, 2);\n    output.writeI64(this.execution_time_ms);\n    output.writeFieldEnd();\n  }\n  if (this.total_time_ms !== null && this.total_time_ms !== undefined) {\n    output.writeFieldBegin('total_time_ms', Thrift.Type.I64, 3);\n    output.writeI64(this.total_time_ms);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 4);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTDataFrame = function(args) {\n  this.sm_handle = null;\n  this.sm_size = null;\n  this.df_handle = null;\n  this.df_size = null;\n  if (args) {\n    if (args.sm_handle !== undefined && args.sm_handle !== null) {\n      this.sm_handle = args.sm_handle;\n    }\n    if (args.sm_size !== undefined && args.sm_size !== null) {\n      this.sm_size = args.sm_size;\n    }\n    if (args.df_handle !== undefined && args.df_handle !== null) {\n      this.df_handle = args.df_handle;\n    }\n    if (args.df_size !== undefined && args.df_size !== null) {\n      this.df_size = args.df_size;\n    }\n  }\n};\nTDataFrame.prototype = {};\nTDataFrame.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.sm_handle = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.sm_size = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.df_handle = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.df_size = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDataFrame.prototype.write = function(output) {\n  output.writeStructBegin('TDataFrame');\n  if (this.sm_handle !== null && this.sm_handle !== undefined) {\n    output.writeFieldBegin('sm_handle', Thrift.Type.STRING, 1);\n    output.writeBinary(this.sm_handle);\n    output.writeFieldEnd();\n  }\n  if (this.sm_size !== null && this.sm_size !== undefined) {\n    output.writeFieldBegin('sm_size', Thrift.Type.I64, 2);\n    output.writeI64(this.sm_size);\n    output.writeFieldEnd();\n  }\n  if (this.df_handle !== null && this.df_handle !== undefined) {\n    output.writeFieldBegin('df_handle', Thrift.Type.STRING, 3);\n    output.writeBinary(this.df_handle);\n    output.writeFieldEnd();\n  }\n  if (this.df_size !== null && this.df_size !== undefined) {\n    output.writeFieldBegin('df_size', Thrift.Type.I64, 4);\n    output.writeI64(this.df_size);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTDBInfo = function(args) {\n  this.db_name = null;\n  this.db_owner = null;\n  if (args) {\n    if (args.db_name !== undefined && args.db_name !== null) {\n      this.db_name = args.db_name;\n    }\n    if (args.db_owner !== undefined && args.db_owner !== null) {\n      this.db_owner = args.db_owner;\n    }\n  }\n};\nTDBInfo.prototype = {};\nTDBInfo.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.db_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.db_owner = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDBInfo.prototype.write = function(output) {\n  output.writeStructBegin('TDBInfo');\n  if (this.db_name !== null && this.db_name !== undefined) {\n    output.writeFieldBegin('db_name', Thrift.Type.STRING, 1);\n    output.writeString(this.db_name);\n    output.writeFieldEnd();\n  }\n  if (this.db_owner !== null && this.db_owner !== undefined) {\n    output.writeFieldBegin('db_owner', Thrift.Type.STRING, 2);\n    output.writeString(this.db_owner);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTMapDException = function(args) {\n  this.error_msg = null;\n  if (args) {\n    if (args.error_msg !== undefined && args.error_msg !== null) {\n      this.error_msg = args.error_msg;\n    }\n  }\n};\nThrift.inherits(TMapDException, Thrift.TException);\nTMapDException.prototype.name = 'TMapDException';\nTMapDException.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.error_msg = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTMapDException.prototype.write = function(output) {\n  output.writeStructBegin('TMapDException');\n  if (this.error_msg !== null && this.error_msg !== undefined) {\n    output.writeFieldBegin('error_msg', Thrift.Type.STRING, 1);\n    output.writeString(this.error_msg);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTRenderProperty = function(args) {\n  this.property_type = null;\n  this.property_value = null;\n  if (args) {\n    if (args.property_type !== undefined && args.property_type !== null) {\n      this.property_type = args.property_type;\n    }\n    if (args.property_value !== undefined && args.property_value !== null) {\n      this.property_value = new TDatumVal(args.property_value);\n    }\n  }\n};\nTRenderProperty.prototype = {};\nTRenderProperty.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.property_type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.property_value = new TDatumVal();\n        this.property_value.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTRenderProperty.prototype.write = function(output) {\n  output.writeStructBegin('TRenderProperty');\n  if (this.property_type !== null && this.property_type !== undefined) {\n    output.writeFieldBegin('property_type', Thrift.Type.I32, 1);\n    output.writeI32(this.property_type);\n    output.writeFieldEnd();\n  }\n  if (this.property_value !== null && this.property_value !== undefined) {\n    output.writeFieldBegin('property_value', Thrift.Type.STRUCT, 2);\n    this.property_value.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTCopyParams = function(args) {\n  this.delimiter = null;\n  this.null_str = null;\n  this.has_header = null;\n  this.quoted = null;\n  this.quote = null;\n  this.escape = null;\n  this.line_delim = null;\n  this.array_delim = null;\n  this.array_begin = null;\n  this.array_end = null;\n  this.threads = null;\n  this.table_type = 0;\n  if (args) {\n    if (args.delimiter !== undefined && args.delimiter !== null) {\n      this.delimiter = args.delimiter;\n    }\n    if (args.null_str !== undefined && args.null_str !== null) {\n      this.null_str = args.null_str;\n    }\n    if (args.has_header !== undefined && args.has_header !== null) {\n      this.has_header = args.has_header;\n    }\n    if (args.quoted !== undefined && args.quoted !== null) {\n      this.quoted = args.quoted;\n    }\n    if (args.quote !== undefined && args.quote !== null) {\n      this.quote = args.quote;\n    }\n    if (args.escape !== undefined && args.escape !== null) {\n      this.escape = args.escape;\n    }\n    if (args.line_delim !== undefined && args.line_delim !== null) {\n      this.line_delim = args.line_delim;\n    }\n    if (args.array_delim !== undefined && args.array_delim !== null) {\n      this.array_delim = args.array_delim;\n    }\n    if (args.array_begin !== undefined && args.array_begin !== null) {\n      this.array_begin = args.array_begin;\n    }\n    if (args.array_end !== undefined && args.array_end !== null) {\n      this.array_end = args.array_end;\n    }\n    if (args.threads !== undefined && args.threads !== null) {\n      this.threads = args.threads;\n    }\n    if (args.table_type !== undefined && args.table_type !== null) {\n      this.table_type = args.table_type;\n    }\n  }\n};\nTCopyParams.prototype = {};\nTCopyParams.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.delimiter = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.null_str = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.BOOL) {\n        this.has_header = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.BOOL) {\n        this.quoted = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.quote = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.escape = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.STRING) {\n        this.line_delim = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.STRING) {\n        this.array_delim = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.STRING) {\n        this.array_begin = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.STRING) {\n        this.array_end = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.I32) {\n        this.threads = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 12:\n      if (ftype == Thrift.Type.I32) {\n        this.table_type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTCopyParams.prototype.write = function(output) {\n  output.writeStructBegin('TCopyParams');\n  if (this.delimiter !== null && this.delimiter !== undefined) {\n    output.writeFieldBegin('delimiter', Thrift.Type.STRING, 1);\n    output.writeString(this.delimiter);\n    output.writeFieldEnd();\n  }\n  if (this.null_str !== null && this.null_str !== undefined) {\n    output.writeFieldBegin('null_str', Thrift.Type.STRING, 2);\n    output.writeString(this.null_str);\n    output.writeFieldEnd();\n  }\n  if (this.has_header !== null && this.has_header !== undefined) {\n    output.writeFieldBegin('has_header', Thrift.Type.BOOL, 3);\n    output.writeBool(this.has_header);\n    output.writeFieldEnd();\n  }\n  if (this.quoted !== null && this.quoted !== undefined) {\n    output.writeFieldBegin('quoted', Thrift.Type.BOOL, 4);\n    output.writeBool(this.quoted);\n    output.writeFieldEnd();\n  }\n  if (this.quote !== null && this.quote !== undefined) {\n    output.writeFieldBegin('quote', Thrift.Type.STRING, 5);\n    output.writeString(this.quote);\n    output.writeFieldEnd();\n  }\n  if (this.escape !== null && this.escape !== undefined) {\n    output.writeFieldBegin('escape', Thrift.Type.STRING, 6);\n    output.writeString(this.escape);\n    output.writeFieldEnd();\n  }\n  if (this.line_delim !== null && this.line_delim !== undefined) {\n    output.writeFieldBegin('line_delim', Thrift.Type.STRING, 7);\n    output.writeString(this.line_delim);\n    output.writeFieldEnd();\n  }\n  if (this.array_delim !== null && this.array_delim !== undefined) {\n    output.writeFieldBegin('array_delim', Thrift.Type.STRING, 8);\n    output.writeString(this.array_delim);\n    output.writeFieldEnd();\n  }\n  if (this.array_begin !== null && this.array_begin !== undefined) {\n    output.writeFieldBegin('array_begin', Thrift.Type.STRING, 9);\n    output.writeString(this.array_begin);\n    output.writeFieldEnd();\n  }\n  if (this.array_end !== null && this.array_end !== undefined) {\n    output.writeFieldBegin('array_end', Thrift.Type.STRING, 10);\n    output.writeString(this.array_end);\n    output.writeFieldEnd();\n  }\n  if (this.threads !== null && this.threads !== undefined) {\n    output.writeFieldBegin('threads', Thrift.Type.I32, 11);\n    output.writeI32(this.threads);\n    output.writeFieldEnd();\n  }\n  if (this.table_type !== null && this.table_type !== undefined) {\n    output.writeFieldBegin('table_type', Thrift.Type.I32, 12);\n    output.writeI32(this.table_type);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTDetectResult = function(args) {\n  this.row_set = null;\n  this.copy_params = null;\n  if (args) {\n    if (args.row_set !== undefined && args.row_set !== null) {\n      this.row_set = new TRowSet(args.row_set);\n    }\n    if (args.copy_params !== undefined && args.copy_params !== null) {\n      this.copy_params = new TCopyParams(args.copy_params);\n    }\n  }\n};\nTDetectResult.prototype = {};\nTDetectResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.row_set = new TRowSet();\n        this.row_set.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.copy_params = new TCopyParams();\n        this.copy_params.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDetectResult.prototype.write = function(output) {\n  output.writeStructBegin('TDetectResult');\n  if (this.row_set !== null && this.row_set !== undefined) {\n    output.writeFieldBegin('row_set', Thrift.Type.STRUCT, 1);\n    this.row_set.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.copy_params !== null && this.copy_params !== undefined) {\n    output.writeFieldBegin('copy_params', Thrift.Type.STRUCT, 2);\n    this.copy_params.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTImportStatus = function(args) {\n  this.elapsed = null;\n  this.rows_completed = null;\n  this.rows_estimated = null;\n  this.rows_rejected = null;\n  if (args) {\n    if (args.elapsed !== undefined && args.elapsed !== null) {\n      this.elapsed = args.elapsed;\n    }\n    if (args.rows_completed !== undefined && args.rows_completed !== null) {\n      this.rows_completed = args.rows_completed;\n    }\n    if (args.rows_estimated !== undefined && args.rows_estimated !== null) {\n      this.rows_estimated = args.rows_estimated;\n    }\n    if (args.rows_rejected !== undefined && args.rows_rejected !== null) {\n      this.rows_rejected = args.rows_rejected;\n    }\n  }\n};\nTImportStatus.prototype = {};\nTImportStatus.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.elapsed = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.rows_completed = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.rows_estimated = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.rows_rejected = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTImportStatus.prototype.write = function(output) {\n  output.writeStructBegin('TImportStatus');\n  if (this.elapsed !== null && this.elapsed !== undefined) {\n    output.writeFieldBegin('elapsed', Thrift.Type.I64, 1);\n    output.writeI64(this.elapsed);\n    output.writeFieldEnd();\n  }\n  if (this.rows_completed !== null && this.rows_completed !== undefined) {\n    output.writeFieldBegin('rows_completed', Thrift.Type.I64, 2);\n    output.writeI64(this.rows_completed);\n    output.writeFieldEnd();\n  }\n  if (this.rows_estimated !== null && this.rows_estimated !== undefined) {\n    output.writeFieldBegin('rows_estimated', Thrift.Type.I64, 3);\n    output.writeI64(this.rows_estimated);\n    output.writeFieldEnd();\n  }\n  if (this.rows_rejected !== null && this.rows_rejected !== undefined) {\n    output.writeFieldBegin('rows_rejected', Thrift.Type.I64, 4);\n    output.writeI64(this.rows_rejected);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTFrontendView = function(args) {\n  this.view_name = null;\n  this.view_state = null;\n  this.image_hash = null;\n  this.update_time = null;\n  this.view_metadata = null;\n  if (args) {\n    if (args.view_name !== undefined && args.view_name !== null) {\n      this.view_name = args.view_name;\n    }\n    if (args.view_state !== undefined && args.view_state !== null) {\n      this.view_state = args.view_state;\n    }\n    if (args.image_hash !== undefined && args.image_hash !== null) {\n      this.image_hash = args.image_hash;\n    }\n    if (args.update_time !== undefined && args.update_time !== null) {\n      this.update_time = args.update_time;\n    }\n    if (args.view_metadata !== undefined && args.view_metadata !== null) {\n      this.view_metadata = args.view_metadata;\n    }\n  }\n};\nTFrontendView.prototype = {};\nTFrontendView.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_state = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.image_hash = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.update_time = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_metadata = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTFrontendView.prototype.write = function(output) {\n  output.writeStructBegin('TFrontendView');\n  if (this.view_name !== null && this.view_name !== undefined) {\n    output.writeFieldBegin('view_name', Thrift.Type.STRING, 1);\n    output.writeString(this.view_name);\n    output.writeFieldEnd();\n  }\n  if (this.view_state !== null && this.view_state !== undefined) {\n    output.writeFieldBegin('view_state', Thrift.Type.STRING, 2);\n    output.writeString(this.view_state);\n    output.writeFieldEnd();\n  }\n  if (this.image_hash !== null && this.image_hash !== undefined) {\n    output.writeFieldBegin('image_hash', Thrift.Type.STRING, 3);\n    output.writeString(this.image_hash);\n    output.writeFieldEnd();\n  }\n  if (this.update_time !== null && this.update_time !== undefined) {\n    output.writeFieldBegin('update_time', Thrift.Type.STRING, 4);\n    output.writeString(this.update_time);\n    output.writeFieldEnd();\n  }\n  if (this.view_metadata !== null && this.view_metadata !== undefined) {\n    output.writeFieldBegin('view_metadata', Thrift.Type.STRING, 5);\n    output.writeString(this.view_metadata);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTServerStatus = function(args) {\n  this.read_only = null;\n  this.version = null;\n  this.rendering_enabled = null;\n  this.start_time = null;\n  this.edition = null;\n  this.host_name = null;\n  if (args) {\n    if (args.read_only !== undefined && args.read_only !== null) {\n      this.read_only = args.read_only;\n    }\n    if (args.version !== undefined && args.version !== null) {\n      this.version = args.version;\n    }\n    if (args.rendering_enabled !== undefined && args.rendering_enabled !== null) {\n      this.rendering_enabled = args.rendering_enabled;\n    }\n    if (args.start_time !== undefined && args.start_time !== null) {\n      this.start_time = args.start_time;\n    }\n    if (args.edition !== undefined && args.edition !== null) {\n      this.edition = args.edition;\n    }\n    if (args.host_name !== undefined && args.host_name !== null) {\n      this.host_name = args.host_name;\n    }\n  }\n};\nTServerStatus.prototype = {};\nTServerStatus.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.BOOL) {\n        this.read_only = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.version = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.BOOL) {\n        this.rendering_enabled = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.start_time = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.edition = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.host_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTServerStatus.prototype.write = function(output) {\n  output.writeStructBegin('TServerStatus');\n  if (this.read_only !== null && this.read_only !== undefined) {\n    output.writeFieldBegin('read_only', Thrift.Type.BOOL, 1);\n    output.writeBool(this.read_only);\n    output.writeFieldEnd();\n  }\n  if (this.version !== null && this.version !== undefined) {\n    output.writeFieldBegin('version', Thrift.Type.STRING, 2);\n    output.writeString(this.version);\n    output.writeFieldEnd();\n  }\n  if (this.rendering_enabled !== null && this.rendering_enabled !== undefined) {\n    output.writeFieldBegin('rendering_enabled', Thrift.Type.BOOL, 3);\n    output.writeBool(this.rendering_enabled);\n    output.writeFieldEnd();\n  }\n  if (this.start_time !== null && this.start_time !== undefined) {\n    output.writeFieldBegin('start_time', Thrift.Type.I64, 4);\n    output.writeI64(this.start_time);\n    output.writeFieldEnd();\n  }\n  if (this.edition !== null && this.edition !== undefined) {\n    output.writeFieldBegin('edition', Thrift.Type.STRING, 5);\n    output.writeString(this.edition);\n    output.writeFieldEnd();\n  }\n  if (this.host_name !== null && this.host_name !== undefined) {\n    output.writeFieldBegin('host_name', Thrift.Type.STRING, 6);\n    output.writeString(this.host_name);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTPixel = function(args) {\n  this.x = null;\n  this.y = null;\n  if (args) {\n    if (args.x !== undefined && args.x !== null) {\n      this.x = args.x;\n    }\n    if (args.y !== undefined && args.y !== null) {\n      this.y = args.y;\n    }\n  }\n};\nTPixel.prototype = {};\nTPixel.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.x = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.y = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTPixel.prototype.write = function(output) {\n  output.writeStructBegin('TPixel');\n  if (this.x !== null && this.x !== undefined) {\n    output.writeFieldBegin('x', Thrift.Type.I64, 1);\n    output.writeI64(this.x);\n    output.writeFieldEnd();\n  }\n  if (this.y !== null && this.y !== undefined) {\n    output.writeFieldBegin('y', Thrift.Type.I64, 2);\n    output.writeI64(this.y);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTPixelRowResult = function(args) {\n  this.pixel = null;\n  this.row_id = null;\n  this.row_set = null;\n  this.nonce = null;\n  if (args) {\n    if (args.pixel !== undefined && args.pixel !== null) {\n      this.pixel = new TPixel(args.pixel);\n    }\n    if (args.row_id !== undefined && args.row_id !== null) {\n      this.row_id = args.row_id;\n    }\n    if (args.row_set !== undefined && args.row_set !== null) {\n      this.row_set = new TRowSet(args.row_set);\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nTPixelRowResult.prototype = {};\nTPixelRowResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.pixel = new TPixel();\n        this.pixel.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.row_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.row_set = new TRowSet();\n        this.row_set.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTPixelRowResult.prototype.write = function(output) {\n  output.writeStructBegin('TPixelRowResult');\n  if (this.pixel !== null && this.pixel !== undefined) {\n    output.writeFieldBegin('pixel', Thrift.Type.STRUCT, 1);\n    this.pixel.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.row_id !== null && this.row_id !== undefined) {\n    output.writeFieldBegin('row_id', Thrift.Type.I64, 2);\n    output.writeI64(this.row_id);\n    output.writeFieldEnd();\n  }\n  if (this.row_set !== null && this.row_set !== undefined) {\n    output.writeFieldBegin('row_set', Thrift.Type.STRUCT, 3);\n    this.row_set.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 4);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTPixelTableRowResult = function(args) {\n  this.pixel = null;\n  this.vega_table_name = null;\n  this.table_id = null;\n  this.row_id = null;\n  this.row_set = null;\n  this.nonce = null;\n  if (args) {\n    if (args.pixel !== undefined && args.pixel !== null) {\n      this.pixel = new TPixel(args.pixel);\n    }\n    if (args.vega_table_name !== undefined && args.vega_table_name !== null) {\n      this.vega_table_name = args.vega_table_name;\n    }\n    if (args.table_id !== undefined && args.table_id !== null) {\n      this.table_id = args.table_id;\n    }\n    if (args.row_id !== undefined && args.row_id !== null) {\n      this.row_id = args.row_id;\n    }\n    if (args.row_set !== undefined && args.row_set !== null) {\n      this.row_set = new TRowSet(args.row_set);\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nTPixelTableRowResult.prototype = {};\nTPixelTableRowResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.pixel = new TPixel();\n        this.pixel.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.vega_table_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.table_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.row_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.row_set = new TRowSet();\n        this.row_set.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTPixelTableRowResult.prototype.write = function(output) {\n  output.writeStructBegin('TPixelTableRowResult');\n  if (this.pixel !== null && this.pixel !== undefined) {\n    output.writeFieldBegin('pixel', Thrift.Type.STRUCT, 1);\n    this.pixel.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.vega_table_name !== null && this.vega_table_name !== undefined) {\n    output.writeFieldBegin('vega_table_name', Thrift.Type.STRING, 2);\n    output.writeString(this.vega_table_name);\n    output.writeFieldEnd();\n  }\n  if (this.table_id !== null && this.table_id !== undefined) {\n    output.writeFieldBegin('table_id', Thrift.Type.I64, 3);\n    output.writeI64(this.table_id);\n    output.writeFieldEnd();\n  }\n  if (this.row_id !== null && this.row_id !== undefined) {\n    output.writeFieldBegin('row_id', Thrift.Type.I64, 4);\n    output.writeI64(this.row_id);\n    output.writeFieldEnd();\n  }\n  if (this.row_set !== null && this.row_set !== undefined) {\n    output.writeFieldBegin('row_set', Thrift.Type.STRUCT, 5);\n    this.row_set.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 6);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTPixelRows = function(args) {\n  this.pixel = null;\n  this.row_set = null;\n  if (args) {\n    if (args.pixel !== undefined && args.pixel !== null) {\n      this.pixel = new TPixel(args.pixel);\n    }\n    if (args.row_set !== undefined && args.row_set !== null) {\n      this.row_set = new TRowSet(args.row_set);\n    }\n  }\n};\nTPixelRows.prototype = {};\nTPixelRows.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.pixel = new TPixel();\n        this.pixel.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.row_set = new TRowSet();\n        this.row_set.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTPixelRows.prototype.write = function(output) {\n  output.writeStructBegin('TPixelRows');\n  if (this.pixel !== null && this.pixel !== undefined) {\n    output.writeFieldBegin('pixel', Thrift.Type.STRUCT, 1);\n    this.pixel.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.row_set !== null && this.row_set !== undefined) {\n    output.writeFieldBegin('row_set', Thrift.Type.STRUCT, 2);\n    this.row_set.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTPixelResult = function(args) {\n  this.pixel_rows = null;\n  this.nonce = null;\n  if (args) {\n    if (args.pixel_rows !== undefined && args.pixel_rows !== null) {\n      this.pixel_rows = Thrift.copyList(args.pixel_rows, [TPixelRows]);\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n  }\n};\nTPixelResult.prototype = {};\nTPixelResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size96 = 0;\n        var _rtmp3100;\n        this.pixel_rows = [];\n        var _etype99 = 0;\n        _rtmp3100 = input.readListBegin();\n        _etype99 = _rtmp3100.etype;\n        _size96 = _rtmp3100.size;\n        for (var _i101 = 0; _i101 < _size96; ++_i101)\n        {\n          var elem102 = null;\n          elem102 = new TPixelRows();\n          elem102.read(input);\n          this.pixel_rows.push(elem102);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTPixelResult.prototype.write = function(output) {\n  output.writeStructBegin('TPixelResult');\n  if (this.pixel_rows !== null && this.pixel_rows !== undefined) {\n    output.writeFieldBegin('pixel_rows', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.pixel_rows.length);\n    for (var iter103 in this.pixel_rows)\n    {\n      if (this.pixel_rows.hasOwnProperty(iter103))\n      {\n        iter103 = this.pixel_rows[iter103];\n        iter103.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 2);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTRenderResult = function(args) {\n  this.image = null;\n  this.nonce = null;\n  this.execution_time_ms = null;\n  this.render_time_ms = null;\n  this.total_time_ms = null;\n  if (args) {\n    if (args.image !== undefined && args.image !== null) {\n      this.image = args.image;\n    }\n    if (args.nonce !== undefined && args.nonce !== null) {\n      this.nonce = args.nonce;\n    }\n    if (args.execution_time_ms !== undefined && args.execution_time_ms !== null) {\n      this.execution_time_ms = args.execution_time_ms;\n    }\n    if (args.render_time_ms !== undefined && args.render_time_ms !== null) {\n      this.render_time_ms = args.render_time_ms;\n    }\n    if (args.total_time_ms !== undefined && args.total_time_ms !== null) {\n      this.total_time_ms = args.total_time_ms;\n    }\n  }\n};\nTRenderResult.prototype = {};\nTRenderResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.image = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.nonce = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.execution_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.render_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.total_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTRenderResult.prototype.write = function(output) {\n  output.writeStructBegin('TRenderResult');\n  if (this.image !== null && this.image !== undefined) {\n    output.writeFieldBegin('image', Thrift.Type.STRING, 1);\n    output.writeBinary(this.image);\n    output.writeFieldEnd();\n  }\n  if (this.nonce !== null && this.nonce !== undefined) {\n    output.writeFieldBegin('nonce', Thrift.Type.STRING, 2);\n    output.writeString(this.nonce);\n    output.writeFieldEnd();\n  }\n  if (this.execution_time_ms !== null && this.execution_time_ms !== undefined) {\n    output.writeFieldBegin('execution_time_ms', Thrift.Type.I64, 3);\n    output.writeI64(this.execution_time_ms);\n    output.writeFieldEnd();\n  }\n  if (this.render_time_ms !== null && this.render_time_ms !== undefined) {\n    output.writeFieldBegin('render_time_ms', Thrift.Type.I64, 4);\n    output.writeI64(this.render_time_ms);\n    output.writeFieldEnd();\n  }\n  if (this.total_time_ms !== null && this.total_time_ms !== undefined) {\n    output.writeFieldBegin('total_time_ms', Thrift.Type.I64, 5);\n    output.writeI64(this.total_time_ms);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTMemoryData = function(args) {\n  this.slab = null;\n  this.start_page = null;\n  this.num_pages = null;\n  this.touch = null;\n  this.chunk_key = null;\n  this.buffer_epoch = null;\n  this.is_free = null;\n  if (args) {\n    if (args.slab !== undefined && args.slab !== null) {\n      this.slab = args.slab;\n    }\n    if (args.start_page !== undefined && args.start_page !== null) {\n      this.start_page = args.start_page;\n    }\n    if (args.num_pages !== undefined && args.num_pages !== null) {\n      this.num_pages = args.num_pages;\n    }\n    if (args.touch !== undefined && args.touch !== null) {\n      this.touch = args.touch;\n    }\n    if (args.chunk_key !== undefined && args.chunk_key !== null) {\n      this.chunk_key = Thrift.copyList(args.chunk_key, [null]);\n    }\n    if (args.buffer_epoch !== undefined && args.buffer_epoch !== null) {\n      this.buffer_epoch = args.buffer_epoch;\n    }\n    if (args.is_free !== undefined && args.is_free !== null) {\n      this.is_free = args.is_free;\n    }\n  }\n};\nTMemoryData.prototype = {};\nTMemoryData.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.slab = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I32) {\n        this.start_page = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.num_pages = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I32) {\n        this.touch = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.LIST) {\n        var _size104 = 0;\n        var _rtmp3108;\n        this.chunk_key = [];\n        var _etype107 = 0;\n        _rtmp3108 = input.readListBegin();\n        _etype107 = _rtmp3108.etype;\n        _size104 = _rtmp3108.size;\n        for (var _i109 = 0; _i109 < _size104; ++_i109)\n        {\n          var elem110 = null;\n          elem110 = input.readI64().value;\n          this.chunk_key.push(elem110);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I32) {\n        this.buffer_epoch = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_free = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTMemoryData.prototype.write = function(output) {\n  output.writeStructBegin('TMemoryData');\n  if (this.slab !== null && this.slab !== undefined) {\n    output.writeFieldBegin('slab', Thrift.Type.I64, 1);\n    output.writeI64(this.slab);\n    output.writeFieldEnd();\n  }\n  if (this.start_page !== null && this.start_page !== undefined) {\n    output.writeFieldBegin('start_page', Thrift.Type.I32, 2);\n    output.writeI32(this.start_page);\n    output.writeFieldEnd();\n  }\n  if (this.num_pages !== null && this.num_pages !== undefined) {\n    output.writeFieldBegin('num_pages', Thrift.Type.I64, 3);\n    output.writeI64(this.num_pages);\n    output.writeFieldEnd();\n  }\n  if (this.touch !== null && this.touch !== undefined) {\n    output.writeFieldBegin('touch', Thrift.Type.I32, 4);\n    output.writeI32(this.touch);\n    output.writeFieldEnd();\n  }\n  if (this.chunk_key !== null && this.chunk_key !== undefined) {\n    output.writeFieldBegin('chunk_key', Thrift.Type.LIST, 5);\n    output.writeListBegin(Thrift.Type.I64, this.chunk_key.length);\n    for (var iter111 in this.chunk_key)\n    {\n      if (this.chunk_key.hasOwnProperty(iter111))\n      {\n        iter111 = this.chunk_key[iter111];\n        output.writeI64(iter111);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.buffer_epoch !== null && this.buffer_epoch !== undefined) {\n    output.writeFieldBegin('buffer_epoch', Thrift.Type.I32, 6);\n    output.writeI32(this.buffer_epoch);\n    output.writeFieldEnd();\n  }\n  if (this.is_free !== null && this.is_free !== undefined) {\n    output.writeFieldBegin('is_free', Thrift.Type.BOOL, 7);\n    output.writeBool(this.is_free);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTNodeMemoryInfo = function(args) {\n  this.host_name = null;\n  this.page_size = null;\n  this.max_num_pages = null;\n  this.num_pages_allocated = null;\n  this.is_allocation_capped = null;\n  this.node_memory_data = null;\n  if (args) {\n    if (args.host_name !== undefined && args.host_name !== null) {\n      this.host_name = args.host_name;\n    }\n    if (args.page_size !== undefined && args.page_size !== null) {\n      this.page_size = args.page_size;\n    }\n    if (args.max_num_pages !== undefined && args.max_num_pages !== null) {\n      this.max_num_pages = args.max_num_pages;\n    }\n    if (args.num_pages_allocated !== undefined && args.num_pages_allocated !== null) {\n      this.num_pages_allocated = args.num_pages_allocated;\n    }\n    if (args.is_allocation_capped !== undefined && args.is_allocation_capped !== null) {\n      this.is_allocation_capped = args.is_allocation_capped;\n    }\n    if (args.node_memory_data !== undefined && args.node_memory_data !== null) {\n      this.node_memory_data = Thrift.copyList(args.node_memory_data, [TMemoryData]);\n    }\n  }\n};\nTNodeMemoryInfo.prototype = {};\nTNodeMemoryInfo.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.host_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.page_size = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.max_num_pages = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.num_pages_allocated = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_allocation_capped = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.LIST) {\n        var _size112 = 0;\n        var _rtmp3116;\n        this.node_memory_data = [];\n        var _etype115 = 0;\n        _rtmp3116 = input.readListBegin();\n        _etype115 = _rtmp3116.etype;\n        _size112 = _rtmp3116.size;\n        for (var _i117 = 0; _i117 < _size112; ++_i117)\n        {\n          var elem118 = null;\n          elem118 = new TMemoryData();\n          elem118.read(input);\n          this.node_memory_data.push(elem118);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTNodeMemoryInfo.prototype.write = function(output) {\n  output.writeStructBegin('TNodeMemoryInfo');\n  if (this.host_name !== null && this.host_name !== undefined) {\n    output.writeFieldBegin('host_name', Thrift.Type.STRING, 1);\n    output.writeString(this.host_name);\n    output.writeFieldEnd();\n  }\n  if (this.page_size !== null && this.page_size !== undefined) {\n    output.writeFieldBegin('page_size', Thrift.Type.I64, 2);\n    output.writeI64(this.page_size);\n    output.writeFieldEnd();\n  }\n  if (this.max_num_pages !== null && this.max_num_pages !== undefined) {\n    output.writeFieldBegin('max_num_pages', Thrift.Type.I64, 3);\n    output.writeI64(this.max_num_pages);\n    output.writeFieldEnd();\n  }\n  if (this.num_pages_allocated !== null && this.num_pages_allocated !== undefined) {\n    output.writeFieldBegin('num_pages_allocated', Thrift.Type.I64, 4);\n    output.writeI64(this.num_pages_allocated);\n    output.writeFieldEnd();\n  }\n  if (this.is_allocation_capped !== null && this.is_allocation_capped !== undefined) {\n    output.writeFieldBegin('is_allocation_capped', Thrift.Type.BOOL, 5);\n    output.writeBool(this.is_allocation_capped);\n    output.writeFieldEnd();\n  }\n  if (this.node_memory_data !== null && this.node_memory_data !== undefined) {\n    output.writeFieldBegin('node_memory_data', Thrift.Type.LIST, 6);\n    output.writeListBegin(Thrift.Type.STRUCT, this.node_memory_data.length);\n    for (var iter119 in this.node_memory_data)\n    {\n      if (this.node_memory_data.hasOwnProperty(iter119))\n      {\n        iter119 = this.node_memory_data[iter119];\n        iter119.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTTableDetails = function(args) {\n  this.row_desc = null;\n  this.fragment_size = null;\n  this.page_size = null;\n  this.max_rows = null;\n  this.view_sql = null;\n  this.shard_count = null;\n  this.key_metainfo = null;\n  this.is_temporary = null;\n  if (args) {\n    if (args.row_desc !== undefined && args.row_desc !== null) {\n      this.row_desc = Thrift.copyList(args.row_desc, [TColumnType]);\n    }\n    if (args.fragment_size !== undefined && args.fragment_size !== null) {\n      this.fragment_size = args.fragment_size;\n    }\n    if (args.page_size !== undefined && args.page_size !== null) {\n      this.page_size = args.page_size;\n    }\n    if (args.max_rows !== undefined && args.max_rows !== null) {\n      this.max_rows = args.max_rows;\n    }\n    if (args.view_sql !== undefined && args.view_sql !== null) {\n      this.view_sql = args.view_sql;\n    }\n    if (args.shard_count !== undefined && args.shard_count !== null) {\n      this.shard_count = args.shard_count;\n    }\n    if (args.key_metainfo !== undefined && args.key_metainfo !== null) {\n      this.key_metainfo = args.key_metainfo;\n    }\n    if (args.is_temporary !== undefined && args.is_temporary !== null) {\n      this.is_temporary = args.is_temporary;\n    }\n  }\n};\nTTableDetails.prototype = {};\nTTableDetails.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size120 = 0;\n        var _rtmp3124;\n        this.row_desc = [];\n        var _etype123 = 0;\n        _rtmp3124 = input.readListBegin();\n        _etype123 = _rtmp3124.etype;\n        _size120 = _rtmp3124.size;\n        for (var _i125 = 0; _i125 < _size120; ++_i125)\n        {\n          var elem126 = null;\n          elem126 = new TColumnType();\n          elem126.read(input);\n          this.row_desc.push(elem126);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.fragment_size = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.page_size = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.I64) {\n        this.max_rows = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.view_sql = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I64) {\n        this.shard_count = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.STRING) {\n        this.key_metainfo = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_temporary = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTTableDetails.prototype.write = function(output) {\n  output.writeStructBegin('TTableDetails');\n  if (this.row_desc !== null && this.row_desc !== undefined) {\n    output.writeFieldBegin('row_desc', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.row_desc.length);\n    for (var iter127 in this.row_desc)\n    {\n      if (this.row_desc.hasOwnProperty(iter127))\n      {\n        iter127 = this.row_desc[iter127];\n        iter127.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.fragment_size !== null && this.fragment_size !== undefined) {\n    output.writeFieldBegin('fragment_size', Thrift.Type.I64, 2);\n    output.writeI64(this.fragment_size);\n    output.writeFieldEnd();\n  }\n  if (this.page_size !== null && this.page_size !== undefined) {\n    output.writeFieldBegin('page_size', Thrift.Type.I64, 3);\n    output.writeI64(this.page_size);\n    output.writeFieldEnd();\n  }\n  if (this.max_rows !== null && this.max_rows !== undefined) {\n    output.writeFieldBegin('max_rows', Thrift.Type.I64, 4);\n    output.writeI64(this.max_rows);\n    output.writeFieldEnd();\n  }\n  if (this.view_sql !== null && this.view_sql !== undefined) {\n    output.writeFieldBegin('view_sql', Thrift.Type.STRING, 5);\n    output.writeString(this.view_sql);\n    output.writeFieldEnd();\n  }\n  if (this.shard_count !== null && this.shard_count !== undefined) {\n    output.writeFieldBegin('shard_count', Thrift.Type.I64, 6);\n    output.writeI64(this.shard_count);\n    output.writeFieldEnd();\n  }\n  if (this.key_metainfo !== null && this.key_metainfo !== undefined) {\n    output.writeFieldBegin('key_metainfo', Thrift.Type.STRING, 7);\n    output.writeString(this.key_metainfo);\n    output.writeFieldEnd();\n  }\n  if (this.is_temporary !== null && this.is_temporary !== undefined) {\n    output.writeFieldBegin('is_temporary', Thrift.Type.BOOL, 8);\n    output.writeBool(this.is_temporary);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTColumnRange = function(args) {\n  this.type = null;\n  this.col_id = null;\n  this.table_id = null;\n  this.has_nulls = null;\n  this.int_min = null;\n  this.int_max = null;\n  this.bucket = null;\n  this.fp_min = null;\n  this.fp_max = null;\n  if (args) {\n    if (args.type !== undefined && args.type !== null) {\n      this.type = args.type;\n    }\n    if (args.col_id !== undefined && args.col_id !== null) {\n      this.col_id = args.col_id;\n    }\n    if (args.table_id !== undefined && args.table_id !== null) {\n      this.table_id = args.table_id;\n    }\n    if (args.has_nulls !== undefined && args.has_nulls !== null) {\n      this.has_nulls = args.has_nulls;\n    }\n    if (args.int_min !== undefined && args.int_min !== null) {\n      this.int_min = args.int_min;\n    }\n    if (args.int_max !== undefined && args.int_max !== null) {\n      this.int_max = args.int_max;\n    }\n    if (args.bucket !== undefined && args.bucket !== null) {\n      this.bucket = args.bucket;\n    }\n    if (args.fp_min !== undefined && args.fp_min !== null) {\n      this.fp_min = args.fp_min;\n    }\n    if (args.fp_max !== undefined && args.fp_max !== null) {\n      this.fp_max = args.fp_max;\n    }\n  }\n};\nTColumnRange.prototype = {};\nTColumnRange.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.type = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I32) {\n        this.col_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I32) {\n        this.table_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.BOOL) {\n        this.has_nulls = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.int_min = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I64) {\n        this.int_max = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.bucket = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.DOUBLE) {\n        this.fp_min = input.readDouble().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.DOUBLE) {\n        this.fp_max = input.readDouble().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTColumnRange.prototype.write = function(output) {\n  output.writeStructBegin('TColumnRange');\n  if (this.type !== null && this.type !== undefined) {\n    output.writeFieldBegin('type', Thrift.Type.I32, 1);\n    output.writeI32(this.type);\n    output.writeFieldEnd();\n  }\n  if (this.col_id !== null && this.col_id !== undefined) {\n    output.writeFieldBegin('col_id', Thrift.Type.I32, 2);\n    output.writeI32(this.col_id);\n    output.writeFieldEnd();\n  }\n  if (this.table_id !== null && this.table_id !== undefined) {\n    output.writeFieldBegin('table_id', Thrift.Type.I32, 3);\n    output.writeI32(this.table_id);\n    output.writeFieldEnd();\n  }\n  if (this.has_nulls !== null && this.has_nulls !== undefined) {\n    output.writeFieldBegin('has_nulls', Thrift.Type.BOOL, 4);\n    output.writeBool(this.has_nulls);\n    output.writeFieldEnd();\n  }\n  if (this.int_min !== null && this.int_min !== undefined) {\n    output.writeFieldBegin('int_min', Thrift.Type.I64, 5);\n    output.writeI64(this.int_min);\n    output.writeFieldEnd();\n  }\n  if (this.int_max !== null && this.int_max !== undefined) {\n    output.writeFieldBegin('int_max', Thrift.Type.I64, 6);\n    output.writeI64(this.int_max);\n    output.writeFieldEnd();\n  }\n  if (this.bucket !== null && this.bucket !== undefined) {\n    output.writeFieldBegin('bucket', Thrift.Type.I64, 7);\n    output.writeI64(this.bucket);\n    output.writeFieldEnd();\n  }\n  if (this.fp_min !== null && this.fp_min !== undefined) {\n    output.writeFieldBegin('fp_min', Thrift.Type.DOUBLE, 8);\n    output.writeDouble(this.fp_min);\n    output.writeFieldEnd();\n  }\n  if (this.fp_max !== null && this.fp_max !== undefined) {\n    output.writeFieldBegin('fp_max', Thrift.Type.DOUBLE, 9);\n    output.writeDouble(this.fp_max);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTDictionaryGeneration = function(args) {\n  this.dict_id = null;\n  this.entry_count = null;\n  if (args) {\n    if (args.dict_id !== undefined && args.dict_id !== null) {\n      this.dict_id = args.dict_id;\n    }\n    if (args.entry_count !== undefined && args.entry_count !== null) {\n      this.entry_count = args.entry_count;\n    }\n  }\n};\nTDictionaryGeneration.prototype = {};\nTDictionaryGeneration.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.dict_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.entry_count = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDictionaryGeneration.prototype.write = function(output) {\n  output.writeStructBegin('TDictionaryGeneration');\n  if (this.dict_id !== null && this.dict_id !== undefined) {\n    output.writeFieldBegin('dict_id', Thrift.Type.I32, 1);\n    output.writeI32(this.dict_id);\n    output.writeFieldEnd();\n  }\n  if (this.entry_count !== null && this.entry_count !== undefined) {\n    output.writeFieldBegin('entry_count', Thrift.Type.I64, 2);\n    output.writeI64(this.entry_count);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTTableGeneration = function(args) {\n  this.table_id = null;\n  this.tuple_count = null;\n  this.start_rowid = null;\n  if (args) {\n    if (args.table_id !== undefined && args.table_id !== null) {\n      this.table_id = args.table_id;\n    }\n    if (args.tuple_count !== undefined && args.tuple_count !== null) {\n      this.tuple_count = args.tuple_count;\n    }\n    if (args.start_rowid !== undefined && args.start_rowid !== null) {\n      this.start_rowid = args.start_rowid;\n    }\n  }\n};\nTTableGeneration.prototype = {};\nTTableGeneration.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.table_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.tuple_count = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.start_rowid = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTTableGeneration.prototype.write = function(output) {\n  output.writeStructBegin('TTableGeneration');\n  if (this.table_id !== null && this.table_id !== undefined) {\n    output.writeFieldBegin('table_id', Thrift.Type.I32, 1);\n    output.writeI32(this.table_id);\n    output.writeFieldEnd();\n  }\n  if (this.tuple_count !== null && this.tuple_count !== undefined) {\n    output.writeFieldBegin('tuple_count', Thrift.Type.I64, 2);\n    output.writeI64(this.tuple_count);\n    output.writeFieldEnd();\n  }\n  if (this.start_rowid !== null && this.start_rowid !== undefined) {\n    output.writeFieldBegin('start_rowid', Thrift.Type.I64, 3);\n    output.writeI64(this.start_rowid);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTPendingQuery = function(args) {\n  this.id = null;\n  this.column_ranges = null;\n  this.dictionary_generations = null;\n  this.table_generations = null;\n  if (args) {\n    if (args.id !== undefined && args.id !== null) {\n      this.id = args.id;\n    }\n    if (args.column_ranges !== undefined && args.column_ranges !== null) {\n      this.column_ranges = Thrift.copyList(args.column_ranges, [TColumnRange]);\n    }\n    if (args.dictionary_generations !== undefined && args.dictionary_generations !== null) {\n      this.dictionary_generations = Thrift.copyList(args.dictionary_generations, [TDictionaryGeneration]);\n    }\n    if (args.table_generations !== undefined && args.table_generations !== null) {\n      this.table_generations = Thrift.copyList(args.table_generations, [TTableGeneration]);\n    }\n  }\n};\nTPendingQuery.prototype = {};\nTPendingQuery.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size128 = 0;\n        var _rtmp3132;\n        this.column_ranges = [];\n        var _etype131 = 0;\n        _rtmp3132 = input.readListBegin();\n        _etype131 = _rtmp3132.etype;\n        _size128 = _rtmp3132.size;\n        for (var _i133 = 0; _i133 < _size128; ++_i133)\n        {\n          var elem134 = null;\n          elem134 = new TColumnRange();\n          elem134.read(input);\n          this.column_ranges.push(elem134);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size135 = 0;\n        var _rtmp3139;\n        this.dictionary_generations = [];\n        var _etype138 = 0;\n        _rtmp3139 = input.readListBegin();\n        _etype138 = _rtmp3139.etype;\n        _size135 = _rtmp3139.size;\n        for (var _i140 = 0; _i140 < _size135; ++_i140)\n        {\n          var elem141 = null;\n          elem141 = new TDictionaryGeneration();\n          elem141.read(input);\n          this.dictionary_generations.push(elem141);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size142 = 0;\n        var _rtmp3146;\n        this.table_generations = [];\n        var _etype145 = 0;\n        _rtmp3146 = input.readListBegin();\n        _etype145 = _rtmp3146.etype;\n        _size142 = _rtmp3146.size;\n        for (var _i147 = 0; _i147 < _size142; ++_i147)\n        {\n          var elem148 = null;\n          elem148 = new TTableGeneration();\n          elem148.read(input);\n          this.table_generations.push(elem148);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTPendingQuery.prototype.write = function(output) {\n  output.writeStructBegin('TPendingQuery');\n  if (this.id !== null && this.id !== undefined) {\n    output.writeFieldBegin('id', Thrift.Type.I64, 1);\n    output.writeI64(this.id);\n    output.writeFieldEnd();\n  }\n  if (this.column_ranges !== null && this.column_ranges !== undefined) {\n    output.writeFieldBegin('column_ranges', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.column_ranges.length);\n    for (var iter149 in this.column_ranges)\n    {\n      if (this.column_ranges.hasOwnProperty(iter149))\n      {\n        iter149 = this.column_ranges[iter149];\n        iter149.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.dictionary_generations !== null && this.dictionary_generations !== undefined) {\n    output.writeFieldBegin('dictionary_generations', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.dictionary_generations.length);\n    for (var iter150 in this.dictionary_generations)\n    {\n      if (this.dictionary_generations.hasOwnProperty(iter150))\n      {\n        iter150 = this.dictionary_generations[iter150];\n        iter150.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.table_generations !== null && this.table_generations !== undefined) {\n    output.writeFieldBegin('table_generations', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.table_generations.length);\n    for (var iter151 in this.table_generations)\n    {\n      if (this.table_generations.hasOwnProperty(iter151))\n      {\n        iter151 = this.table_generations[iter151];\n        iter151.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTVarLen = function(args) {\n  this.payload = null;\n  this.is_null = null;\n  if (args) {\n    if (args.payload !== undefined && args.payload !== null) {\n      this.payload = args.payload;\n    }\n    if (args.is_null !== undefined && args.is_null !== null) {\n      this.is_null = args.is_null;\n    }\n  }\n};\nTVarLen.prototype = {};\nTVarLen.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.payload = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.BOOL) {\n        this.is_null = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTVarLen.prototype.write = function(output) {\n  output.writeStructBegin('TVarLen');\n  if (this.payload !== null && this.payload !== undefined) {\n    output.writeFieldBegin('payload', Thrift.Type.STRING, 1);\n    output.writeBinary(this.payload);\n    output.writeFieldEnd();\n  }\n  if (this.is_null !== null && this.is_null !== undefined) {\n    output.writeFieldBegin('is_null', Thrift.Type.BOOL, 2);\n    output.writeBool(this.is_null);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTDataBlockPtr = function(args) {\n  this.fixed_len_data = null;\n  this.var_len_data = null;\n  if (args) {\n    if (args.fixed_len_data !== undefined && args.fixed_len_data !== null) {\n      this.fixed_len_data = args.fixed_len_data;\n    }\n    if (args.var_len_data !== undefined && args.var_len_data !== null) {\n      this.var_len_data = Thrift.copyList(args.var_len_data, [TVarLen]);\n    }\n  }\n};\nTDataBlockPtr.prototype = {};\nTDataBlockPtr.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.fixed_len_data = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size152 = 0;\n        var _rtmp3156;\n        this.var_len_data = [];\n        var _etype155 = 0;\n        _rtmp3156 = input.readListBegin();\n        _etype155 = _rtmp3156.etype;\n        _size152 = _rtmp3156.size;\n        for (var _i157 = 0; _i157 < _size152; ++_i157)\n        {\n          var elem158 = null;\n          elem158 = new TVarLen();\n          elem158.read(input);\n          this.var_len_data.push(elem158);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTDataBlockPtr.prototype.write = function(output) {\n  output.writeStructBegin('TDataBlockPtr');\n  if (this.fixed_len_data !== null && this.fixed_len_data !== undefined) {\n    output.writeFieldBegin('fixed_len_data', Thrift.Type.STRING, 1);\n    output.writeBinary(this.fixed_len_data);\n    output.writeFieldEnd();\n  }\n  if (this.var_len_data !== null && this.var_len_data !== undefined) {\n    output.writeFieldBegin('var_len_data', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.var_len_data.length);\n    for (var iter159 in this.var_len_data)\n    {\n      if (this.var_len_data.hasOwnProperty(iter159))\n      {\n        iter159 = this.var_len_data[iter159];\n        iter159.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTInsertData = function(args) {\n  this.db_id = null;\n  this.table_id = null;\n  this.column_ids = null;\n  this.data = null;\n  this.num_rows = null;\n  if (args) {\n    if (args.db_id !== undefined && args.db_id !== null) {\n      this.db_id = args.db_id;\n    }\n    if (args.table_id !== undefined && args.table_id !== null) {\n      this.table_id = args.table_id;\n    }\n    if (args.column_ids !== undefined && args.column_ids !== null) {\n      this.column_ids = Thrift.copyList(args.column_ids, [null]);\n    }\n    if (args.data !== undefined && args.data !== null) {\n      this.data = Thrift.copyList(args.data, [TDataBlockPtr]);\n    }\n    if (args.num_rows !== undefined && args.num_rows !== null) {\n      this.num_rows = args.num_rows;\n    }\n  }\n};\nTInsertData.prototype = {};\nTInsertData.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.db_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I32) {\n        this.table_id = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size160 = 0;\n        var _rtmp3164;\n        this.column_ids = [];\n        var _etype163 = 0;\n        _rtmp3164 = input.readListBegin();\n        _etype163 = _rtmp3164.etype;\n        _size160 = _rtmp3164.size;\n        for (var _i165 = 0; _i165 < _size160; ++_i165)\n        {\n          var elem166 = null;\n          elem166 = input.readI32().value;\n          this.column_ids.push(elem166);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size167 = 0;\n        var _rtmp3171;\n        this.data = [];\n        var _etype170 = 0;\n        _rtmp3171 = input.readListBegin();\n        _etype170 = _rtmp3171.etype;\n        _size167 = _rtmp3171.size;\n        for (var _i172 = 0; _i172 < _size167; ++_i172)\n        {\n          var elem173 = null;\n          elem173 = new TDataBlockPtr();\n          elem173.read(input);\n          this.data.push(elem173);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.num_rows = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTInsertData.prototype.write = function(output) {\n  output.writeStructBegin('TInsertData');\n  if (this.db_id !== null && this.db_id !== undefined) {\n    output.writeFieldBegin('db_id', Thrift.Type.I32, 1);\n    output.writeI32(this.db_id);\n    output.writeFieldEnd();\n  }\n  if (this.table_id !== null && this.table_id !== undefined) {\n    output.writeFieldBegin('table_id', Thrift.Type.I32, 2);\n    output.writeI32(this.table_id);\n    output.writeFieldEnd();\n  }\n  if (this.column_ids !== null && this.column_ids !== undefined) {\n    output.writeFieldBegin('column_ids', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.I32, this.column_ids.length);\n    for (var iter174 in this.column_ids)\n    {\n      if (this.column_ids.hasOwnProperty(iter174))\n      {\n        iter174 = this.column_ids[iter174];\n        output.writeI32(iter174);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.data !== null && this.data !== undefined) {\n    output.writeFieldBegin('data', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.data.length);\n    for (var iter175 in this.data)\n    {\n      if (this.data.hasOwnProperty(iter175))\n      {\n        iter175 = this.data[iter175];\n        iter175.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.num_rows !== null && this.num_rows !== undefined) {\n    output.writeFieldBegin('num_rows', Thrift.Type.I64, 5);\n    output.writeI64(this.num_rows);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTRawRenderPassDataResult = function(args) {\n  this.num_channels = null;\n  this.pixels = null;\n  this.row_ids_A = null;\n  this.row_ids_B = null;\n  this.table_ids = null;\n  this.accum_data = null;\n  if (args) {\n    if (args.num_channels !== undefined && args.num_channels !== null) {\n      this.num_channels = args.num_channels;\n    }\n    if (args.pixels !== undefined && args.pixels !== null) {\n      this.pixels = args.pixels;\n    }\n    if (args.row_ids_A !== undefined && args.row_ids_A !== null) {\n      this.row_ids_A = args.row_ids_A;\n    }\n    if (args.row_ids_B !== undefined && args.row_ids_B !== null) {\n      this.row_ids_B = args.row_ids_B;\n    }\n    if (args.table_ids !== undefined && args.table_ids !== null) {\n      this.table_ids = args.table_ids;\n    }\n    if (args.accum_data !== undefined && args.accum_data !== null) {\n      this.accum_data = args.accum_data;\n    }\n  }\n};\nTRawRenderPassDataResult.prototype = {};\nTRawRenderPassDataResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.num_channels = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.pixels = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.row_ids_A = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.row_ids_B = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.table_ids = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.accum_data = input.readBinary().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTRawRenderPassDataResult.prototype.write = function(output) {\n  output.writeStructBegin('TRawRenderPassDataResult');\n  if (this.num_channels !== null && this.num_channels !== undefined) {\n    output.writeFieldBegin('num_channels', Thrift.Type.I32, 1);\n    output.writeI32(this.num_channels);\n    output.writeFieldEnd();\n  }\n  if (this.pixels !== null && this.pixels !== undefined) {\n    output.writeFieldBegin('pixels', Thrift.Type.STRING, 2);\n    output.writeBinary(this.pixels);\n    output.writeFieldEnd();\n  }\n  if (this.row_ids_A !== null && this.row_ids_A !== undefined) {\n    output.writeFieldBegin('row_ids_A', Thrift.Type.STRING, 3);\n    output.writeBinary(this.row_ids_A);\n    output.writeFieldEnd();\n  }\n  if (this.row_ids_B !== null && this.row_ids_B !== undefined) {\n    output.writeFieldBegin('row_ids_B', Thrift.Type.STRING, 4);\n    output.writeBinary(this.row_ids_B);\n    output.writeFieldEnd();\n  }\n  if (this.table_ids !== null && this.table_ids !== undefined) {\n    output.writeFieldBegin('table_ids', Thrift.Type.STRING, 5);\n    output.writeBinary(this.table_ids);\n    output.writeFieldEnd();\n  }\n  if (this.accum_data !== null && this.accum_data !== undefined) {\n    output.writeFieldBegin('accum_data', Thrift.Type.STRING, 6);\n    output.writeBinary(this.accum_data);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\nTRawPixelDataResult = function(args) {\n  this.width = null;\n  this.height = null;\n  this.render_pass_map = null;\n  this.execution_time_ms = null;\n  this.render_time_ms = null;\n  this.total_time_ms = null;\n  if (args) {\n    if (args.width !== undefined && args.width !== null) {\n      this.width = args.width;\n    }\n    if (args.height !== undefined && args.height !== null) {\n      this.height = args.height;\n    }\n    if (args.render_pass_map !== undefined && args.render_pass_map !== null) {\n      this.render_pass_map = Thrift.copyMap(args.render_pass_map, [TRawRenderPassDataResult]);\n    }\n    if (args.execution_time_ms !== undefined && args.execution_time_ms !== null) {\n      this.execution_time_ms = args.execution_time_ms;\n    }\n    if (args.render_time_ms !== undefined && args.render_time_ms !== null) {\n      this.render_time_ms = args.render_time_ms;\n    }\n    if (args.total_time_ms !== undefined && args.total_time_ms !== null) {\n      this.total_time_ms = args.total_time_ms;\n    }\n  }\n};\nTRawPixelDataResult.prototype = {};\nTRawPixelDataResult.prototype.read = function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I32) {\n        this.width = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I32) {\n        this.height = input.readI32().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.MAP) {\n        var _size176 = 0;\n        var _rtmp3180;\n        this.render_pass_map = {};\n        var _ktype177 = 0;\n        var _vtype178 = 0;\n        _rtmp3180 = input.readMapBegin();\n        _ktype177 = _rtmp3180.ktype;\n        _vtype178 = _rtmp3180.vtype;\n        _size176 = _rtmp3180.size;\n        for (var _i181 = 0; _i181 < _size176; ++_i181)\n        {\n          if (_i181 > 0 ) {\n            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {\n              input.rstack.pop();\n            }\n          }\n          var key182 = null;\n          var val183 = null;\n          key182 = input.readI32().value;\n          val183 = new TRawRenderPassDataResult();\n          val183.read(input);\n          this.render_pass_map[key182] = val183;\n        }\n        input.readMapEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.I64) {\n        this.execution_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.I64) {\n        this.render_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.I64) {\n        this.total_time_ms = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\nTRawPixelDataResult.prototype.write = function(output) {\n  output.writeStructBegin('TRawPixelDataResult');\n  if (this.width !== null && this.width !== undefined) {\n    output.writeFieldBegin('width', Thrift.Type.I32, 1);\n    output.writeI32(this.width);\n    output.writeFieldEnd();\n  }\n  if (this.height !== null && this.height !== undefined) {\n    output.writeFieldBegin('height', Thrift.Type.I32, 2);\n    output.writeI32(this.height);\n    output.writeFieldEnd();\n  }\n  if (this.render_pass_map !== null && this.render_pass_map !== undefined) {\n    output.writeFieldBegin('render_pass_map', Thrift.Type.MAP, 3);\n    output.writeMapBegin(Thrift.Type.I32, Thrift.Type.STRUCT, Thrift.objectLength(this.render_pass_map));\n    for (var kiter184 in this.render_pass_map)\n    {\n      if (this.render_pass_map.hasOwnProperty(kiter184))\n      {\n        var viter185 = this.render_pass_map[kiter184];\n        output.writeI32(kiter184);\n        viter185.write(output);\n      }\n    }\n    output.writeMapEnd();\n    output.writeFieldEnd();\n  }\n  if (this.execution_time_ms !== null && this.execution_time_ms !== undefined) {\n    output.writeFieldBegin('execution_time_ms', Thrift.Type.I64, 8);\n    output.writeI64(this.execution_time_ms);\n    output.writeFieldEnd();\n  }\n  if (this.render_time_ms !== null && this.render_time_ms !== undefined) {\n    output.writeFieldBegin('render_time_ms', Thrift.Type.I64, 9);\n    output.writeI64(this.render_time_ms);\n    output.writeFieldEnd();\n  }\n  if (this.total_time_ms !== null && this.total_time_ms !== undefined) {\n    output.writeFieldBegin('total_time_ms', Thrift.Type.I64, 10);\n    output.writeI64(this.total_time_ms);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/thrift-layer/lib/mapd_types.js\n// module id = 48\n// module chunks = 0","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jshint evil:true*/\n\n/**\n * The Thrift namespace houses the Apache Thrift JavaScript library\n * elements providing JavaScript bindings for the Apache Thrift RPC\n * system. End users will typically only directly make use of the\n * Transport (TXHRTransport/TWebSocketTransport) and Protocol\n * (TJSONPRotocol/TBinaryProtocol) constructors.\n *\n * Object methods beginning with a __ (e.g. __onOpen()) are internal\n * and should not be called outside of the object's own methods.\n *\n * This library creates one global object: Thrift\n * Code in this library must never create additional global identifiers,\n * all features must be scoped within the Thrift namespace.\n * @namespace\n * @example\n *     var transport = new Thrift.Transport(\"http://localhost:8585\");\n *     var protocol  = new Thrift.Protocol(transport);\n *     var client = new MyThriftSvcClient(protocol);\n *     var result = client.MyMethod();\n */\nThrift = {\n    /**\n     * Thrift JavaScript library version.\n     * @readonly\n     * @const {string} Version\n     * @memberof Thrift\n     */\n    Version: '0.9.3',\n\n    /**\n     * Thrift IDL type string to Id mapping.\n     * @readonly\n     * @property {number}  STOP   - End of a set of fields.\n     * @property {number}  VOID   - No value (only legal for return types).\n     * @property {number}  BOOL   - True/False integer.\n     * @property {number}  BYTE   - Signed 8 bit integer.\n     * @property {number}  I08    - Signed 8 bit integer.\n     * @property {number}  DOUBLE - 64 bit IEEE 854 floating point.\n     * @property {number}  I16    - Signed 16 bit integer.\n     * @property {number}  I32    - Signed 32 bit integer.\n     * @property {number}  I64    - Signed 64 bit integer.\n     * @property {number}  STRING - Array of bytes representing a string of characters.\n     * @property {number}  UTF7   - Array of bytes representing a string of UTF7 encoded characters.\n     * @property {number}  STRUCT - A multifield type.\n     * @property {number}  MAP    - A collection type (map/associative-array/dictionary).\n     * @property {number}  SET    - A collection type (unordered and without repeated values).\n     * @property {number}  LIST   - A collection type (unordered).\n     * @property {number}  UTF8   - Array of bytes representing a string of UTF8 encoded characters.\n     * @property {number}  UTF16  - Array of bytes representing a string of UTF16 encoded characters.\n     */\n    Type: {\n        'STOP' : 0,\n        'VOID' : 1,\n        'BOOL' : 2,\n        'BYTE' : 3,\n        'I08' : 3,\n        'DOUBLE' : 4,\n        'I16' : 6,\n        'I32' : 8,\n        'I64' : 10,\n        'STRING' : 11,\n        'UTF7' : 11,\n        'STRUCT' : 12,\n        'MAP' : 13,\n        'SET' : 14,\n        'LIST' : 15,\n        'UTF8' : 16,\n        'UTF16' : 17\n    },\n\n    /**\n     * Thrift RPC message type string to Id mapping.\n     * @readonly\n     * @property {number}  CALL      - RPC call sent from client to server.\n     * @property {number}  REPLY     - RPC call normal response from server to client.\n     * @property {number}  EXCEPTION - RPC call exception response from server to client.\n     * @property {number}  ONEWAY    - Oneway RPC call from client to server with no response.\n     */\n    MessageType: {\n        'CALL' : 1,\n        'REPLY' : 2,\n        'EXCEPTION' : 3,\n        'ONEWAY' : 4\n    },\n\n    /**\n     * Utility function returning the count of an object's own properties.\n     * @param {object} obj - Object to test.\n     * @returns {number} number of object's own properties\n     */\n    objectLength: function(obj) {\n        var length = 0;\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                length++;\n            }\n        }\n        return length;\n    },\n\n    /**\n     * Utility function to establish prototype inheritance.\n     * @see {@link http://javascript.crockford.com/prototypal.html|Prototypal Inheritance}\n     * @param {function} constructor - Contstructor function to set as derived.\n     * @param {function} superConstructor - Contstructor function to set as base.\n     * @param {string} [name] - Type name to set as name property in derived prototype.\n     */\n    inherits: function(constructor, superConstructor, name) {\n      function F() {}\n      F.prototype = superConstructor.prototype;\n      constructor.prototype = new F();\n      constructor.prototype.name = name || \"\";\n    }\n};\n\n/**\n * Initializes a Thrift TException instance.\n * @constructor\n * @augments Error\n * @param {string} message - The TException message (distinct from the Error message).\n * @classdesc TException is the base class for all Thrift exceptions types.\n */\nThrift.TException = function(message) {\n    this.message = message;\n};\nThrift.inherits(Thrift.TException, Error, 'TException');\n\n/**\n * Returns the message set on the exception.\n * @readonly\n * @returns {string} exception message\n */\nThrift.TException.prototype.getMessage = function() {\n    return this.message;\n};\n\n/**\n * Thrift Application Exception type string to Id mapping.\n * @readonly\n * @property {number}  UNKNOWN                 - Unknown/undefined.\n * @property {number}  UNKNOWN_METHOD          - Client attempted to call a method unknown to the server.\n * @property {number}  INVALID_MESSAGE_TYPE    - Client passed an unknown/unsupported MessageType.\n * @property {number}  WRONG_METHOD_NAME       - Unused.\n * @property {number}  BAD_SEQUENCE_ID         - Unused in Thrift RPC, used to flag proprietary sequence number errors.\n * @property {number}  MISSING_RESULT          - Raised by a server processor if a handler fails to supply the required return result.\n * @property {number}  INTERNAL_ERROR          - Something bad happened.\n * @property {number}  PROTOCOL_ERROR          - The protocol layer failed to serialize or deserialize data.\n * @property {number}  INVALID_TRANSFORM       - Unused.\n * @property {number}  INVALID_PROTOCOL        - The protocol (or version) is not supported.\n * @property {number}  UNSUPPORTED_CLIENT_TYPE - Unused.\n */\nThrift.TApplicationExceptionType = {\n    'UNKNOWN' : 0,\n    'UNKNOWN_METHOD' : 1,\n    'INVALID_MESSAGE_TYPE' : 2,\n    'WRONG_METHOD_NAME' : 3,\n    'BAD_SEQUENCE_ID' : 4,\n    'MISSING_RESULT' : 5,\n    'INTERNAL_ERROR' : 6,\n    'PROTOCOL_ERROR' : 7,\n    'INVALID_TRANSFORM' : 8,\n    'INVALID_PROTOCOL' : 9,\n    'UNSUPPORTED_CLIENT_TYPE' : 10\n};\n\n/**\n * Initializes a Thrift TApplicationException instance.\n * @constructor\n * @augments Thrift.TException\n * @param {string} message - The TApplicationException message (distinct from the Error message).\n * @param {Thrift.TApplicationExceptionType} [code] - The TApplicationExceptionType code.\n * @classdesc TApplicationException is the exception class used to propagate exceptions from an RPC server back to a calling client.\n*/\nThrift.TApplicationException = function(message, code) {\n    this.message = message;\n    this.code = typeof code === \"number\" ? code : 0;\n};\nThrift.inherits(Thrift.TApplicationException, Thrift.TException, 'TApplicationException');\n\n/**\n * Read a TApplicationException from the supplied protocol.\n * @param {object} input - The input protocol to read from.\n */\nThrift.TApplicationException.prototype.read = function(input) {\n    while (1) {\n        var ret = input.readFieldBegin();\n\n        if (ret.ftype == Thrift.Type.STOP) {\n            break;\n        }\n\n        var fid = ret.fid;\n\n        switch (fid) {\n            case 1:\n                if (ret.ftype == Thrift.Type.STRING) {\n                    ret = input.readString();\n                    this.message = ret.value;\n                } else {\n                    ret = input.skip(ret.ftype);\n                }\n                break;\n            case 2:\n                if (ret.ftype == Thrift.Type.I32) {\n                    ret = input.readI32();\n                    this.code = ret.value;\n                } else {\n                    ret = input.skip(ret.ftype);\n                }\n                break;\n           default:\n                ret = input.skip(ret.ftype);\n                break;\n        }\n\n        input.readFieldEnd();\n    }\n\n    input.readStructEnd();\n};\n\n/**\n * Wite a TApplicationException to the supplied protocol.\n * @param {object} output - The output protocol to write to.\n */\nThrift.TApplicationException.prototype.write = function(output) {\n    output.writeStructBegin('TApplicationException');\n\n    if (this.message) {\n        output.writeFieldBegin('message', Thrift.Type.STRING, 1);\n        output.writeString(this.getMessage());\n        output.writeFieldEnd();\n    }\n\n    if (this.code) {\n        output.writeFieldBegin('type', Thrift.Type.I32, 2);\n        output.writeI32(this.code);\n        output.writeFieldEnd();\n    }\n\n    output.writeFieldStop();\n    output.writeStructEnd();\n};\n\n/**\n * Returns the application exception code set on the exception.\n * @readonly\n * @returns {Thrift.TApplicationExceptionType} exception code\n */\nThrift.TApplicationException.prototype.getCode = function() {\n    return this.code;\n};\n\n/**\n * Constructor Function for the XHR transport.\n * If you do not specify a url then you must handle XHR operations on\n * your own. This type can also be constructed using the Transport alias\n * for backward compatibility.\n * @constructor\n * @param {string} [url] - The URL to connect to.\n * @classdesc The Apache Thrift Transport layer performs byte level I/O\n * between RPC clients and servers. The JavaScript TXHRTransport object\n * uses Http[s]/XHR. Target servers must implement the http[s] transport\n * (see: node.js example server_http.js).\n * @example\n *     var transport = new Thrift.TXHRTransport(\"http://localhost:8585\");\n */\nThrift.Transport = Thrift.TXHRTransport = function(url, options) {\n    this.url = url;\n    this.wpos = 0;\n    this.rpos = 0;\n    this.useCORS = (options && options.useCORS);\n    this.send_buf = '';\n    this.recv_buf = '';\n};\n\nThrift.TXHRTransport.prototype = {\n    /**\n     * Gets the browser specific XmlHttpRequest Object.\n     * @returns {object} the browser XHR interface object\n     */\n    getXmlHttpRequestObject: function() {\n        try { return new XMLHttpRequest(); } catch (e1) { }\n        try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch (e2) { }\n        try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch (e3) { }\n\n        throw \"Your browser doesn't support XHR.\";\n    },\n\n    /**\n     * Sends the current XRH request if the transport was created with a URL\n     * and the async parameter is false. If the transport was not created with\n     * a URL, or the async parameter is True and no callback is provided, or\n     * the URL is an empty string, the current send buffer is returned.\n     * @param {object} async - If true the current send buffer is returned.\n     * @param {object} callback - Optional async completion callback\n     * @returns {undefined|string} Nothing or the current send buffer.\n     * @throws {string} If XHR fails.\n     */\n    flush: function(async, callback) {\n        var self = this;\n        if ((async && !callback) || this.url === undefined || this.url === '') {\n            return this.send_buf;\n        }\n\n        var xreq = this.getXmlHttpRequestObject();\n\n        if (xreq.overrideMimeType) {\n            xreq.overrideMimeType('application/vnd.apache.thrift.json; charset=utf-8');\n        }\n\n        if (callback) {\n            //Ignore XHR callbacks until the data arrives, then call the\n            //  client's callback\n            xreq.onreadystatechange =\n              (function() {\n                var clientCallback = callback;\n                return function() {\n                  if (this.readyState == 4 && this.status == 200) {\n                    self.setRecvBuffer(this.responseText);\n                    clientCallback();\n                  }\n                };\n              }());\n        }\n\n        xreq.open('POST', this.url, !!async);\n\n        if (xreq.setRequestHeader) {\n            xreq.setRequestHeader('Accept', 'application/vnd.apache.thrift.json; charset=utf-8');\n            xreq.setRequestHeader('Content-Type', 'application/vnd.apache.thrift.json; charset=utf-8');\n        }\n\n        xreq.send(this.send_buf);\n        if (async && callback) {\n            return;\n        }\n\n        if (xreq.readyState != 4) {\n            throw 'encountered an unknown ajax ready state: ' + xreq.readyState;\n        }\n\n        if (xreq.status != 200) {\n            throw 'encountered a unknown request status: ' + xreq.status;\n        }\n\n        this.recv_buf = xreq.responseText;\n        this.recv_buf_sz = this.recv_buf.length;\n        this.wpos = this.recv_buf.length;\n        this.rpos = 0;\n    },\n\n    /**\n     * Creates a jQuery XHR object to be used for a Thrift server call.\n     * @param {object} client - The Thrift Service client object generated by the IDL compiler.\n     * @param {object} postData - The message to send to the server.\n     * @param {function} args - The original call arguments with the success call back at the end.\n     * @param {function} recv_method - The Thrift Service Client receive method for the call.\n     * @returns {object} A new jQuery XHR object.\n     * @throws {string} If the jQuery version is prior to 1.5 or if jQuery is not found.\n     */\n    jqRequest: function(client, postData, args, recv_method) {\n        if (typeof jQuery === 'undefined' ||\n            typeof jQuery.Deferred === 'undefined') {\n            throw 'Thrift.js requires jQuery 1.5+ to use asynchronous requests';\n        }\n\n        var thriftTransport = this;\n\n        var jqXHR = jQuery.ajax({\n            url: this.url,\n            data: postData,\n            type: 'POST',\n            cache: false,\n            contentType: 'application/vnd.apache.thrift.json; charset=utf-8',\n            dataType: 'text thrift',\n            converters: {\n                'text thrift' : function(responseData) {\n                    thriftTransport.setRecvBuffer(responseData);\n                    var value = recv_method.call(client);\n                    return value;\n                }\n            },\n            context: client,\n            success: jQuery.makeArray(args).pop()\n        });\n\n        return jqXHR;\n    },\n\n    /**\n     * Sets the buffer to provide the protocol when deserializing.\n     * @param {string} buf - The buffer to supply the protocol.\n     */\n    setRecvBuffer: function(buf) {\n        this.recv_buf = buf;\n        this.recv_buf_sz = this.recv_buf.length;\n        this.wpos = this.recv_buf.length;\n        this.rpos = 0;\n    },\n\n    /**\n     * Returns true if the transport is open, XHR always returns true.\n     * @readonly\n     * @returns {boolean} Always True.\n     */\n    isOpen: function() {\n        return true;\n    },\n\n    /**\n     * Opens the transport connection, with XHR this is a nop.\n     */\n    open: function() {},\n\n    /**\n     * Closes the transport connection, with XHR this is a nop.\n     */\n    close: function() {},\n\n    /**\n     * Returns the specified number of characters from the response\n     * buffer.\n     * @param {number} len - The number of characters to return.\n     * @returns {string} Characters sent by the server.\n     */\n    read: function(len) {\n        var avail = this.wpos - this.rpos;\n\n        if (avail === 0) {\n            return '';\n        }\n\n        var give = len;\n\n        if (avail < len) {\n            give = avail;\n        }\n\n        var ret = this.read_buf.substr(this.rpos, give);\n        this.rpos += give;\n\n        //clear buf when complete?\n        return ret;\n    },\n\n    /**\n     * Returns the entire response buffer.\n     * @returns {string} Characters sent by the server.\n     */\n    readAll: function() {\n        return this.recv_buf;\n    },\n\n    /**\n     * Sets the send buffer to buf.\n     * @param {string} buf - The buffer to send.\n     */\n    write: function(buf) {\n        this.send_buf = buf;\n    },\n\n    /**\n     * Returns the send buffer.\n     * @readonly\n     * @returns {string} The send buffer.\n     */\n    getSendBuffer: function() {\n        return this.send_buf;\n    }\n\n};\n\n\n/**\n * Constructor Function for the WebSocket transport.\n * @constructor\n * @param {string} [url] - The URL to connect to.\n * @classdesc The Apache Thrift Transport layer performs byte level I/O\n * between RPC clients and servers. The JavaScript TWebSocketTransport object\n * uses the WebSocket protocol. Target servers must implement WebSocket.\n * (see: node.js example server_http.js).\n * @example\n *   var transport = new Thrift.TWebSocketTransport(\"http://localhost:8585\");\n */\nThrift.TWebSocketTransport = function(url) {\n    this.__reset(url);\n};\n\nThrift.TWebSocketTransport.prototype = {\n    __reset: function(url) {\n      this.url = url;             //Where to connect\n      this.socket = null;         //The web socket\n      this.callbacks = [];        //Pending callbacks\n      this.send_pending = [];     //Buffers/Callback pairs waiting to be sent\n      this.send_buf = '';         //Outbound data, immutable until sent\n      this.recv_buf = '';         //Inbound data\n      this.rb_wpos = 0;           //Network write position in receive buffer\n      this.rb_rpos = 0;           //Client read position in receive buffer\n    },\n\n    /**\n     * Sends the current WS request and registers callback. The async\n     * parameter is ignored (WS flush is always async) and the callback\n     * function parameter is required.\n     * @param {object} async - Ignored.\n     * @param {object} callback - The client completion callback.\n     * @returns {undefined|string} Nothing (undefined)\n     */\n    flush: function(async, callback) {\n      var self = this;\n      if (this.isOpen()) {\n        //Send data and register a callback to invoke the client callback\n        this.socket.send(this.send_buf);\n        this.callbacks.push((function() {\n          var clientCallback = callback;\n          return function(msg) {\n            self.setRecvBuffer(msg);\n            clientCallback();\n          };\n        }()));\n      } else {\n        //Queue the send to go out __onOpen\n        this.send_pending.push({\n          buf: this.send_buf,\n          cb:  callback\n        });\n      }\n    },\n\n    __onOpen: function() {\n       var self = this;\n       if (this.send_pending.length > 0) {\n          //If the user made calls before the connection was fully\n          //open, send them now\n          this.send_pending.forEach(function(elem) {\n             this.socket.send(elem.buf);\n             this.callbacks.push((function() {\n               var clientCallback = elem.cb;\n               return function(msg) {\n                  self.setRecvBuffer(msg);\n                  clientCallback();\n               };\n             }()));\n          });\n          this.send_pending = [];\n       }\n    },\n\n    __onClose: function(evt) {\n      this.__reset(this.url);\n    },\n\n    __onMessage: function(evt) {\n      if (this.callbacks.length) {\n        this.callbacks.shift()(evt.data);\n      }\n    },\n\n    __onError: function(evt) {\n      console.log(\"Thrift WebSocket Error: \" + evt.toString());\n      this.socket.close();\n    },\n\n    /**\n     * Sets the buffer to use when receiving server responses.\n     * @param {string} buf - The buffer to receive server responses.\n     */\n    setRecvBuffer: function(buf) {\n        this.recv_buf = buf;\n        this.recv_buf_sz = this.recv_buf.length;\n        this.wpos = this.recv_buf.length;\n        this.rpos = 0;\n    },\n\n    /**\n     * Returns true if the transport is open\n     * @readonly\n     * @returns {boolean}\n     */\n    isOpen: function() {\n        return this.socket && this.socket.readyState == this.socket.OPEN;\n    },\n\n    /**\n     * Opens the transport connection\n     */\n    open: function() {\n      //If OPEN/CONNECTING/CLOSING ignore additional opens\n      if (this.socket && this.socket.readyState != this.socket.CLOSED) {\n        return;\n      }\n      //If there is no socket or the socket is closed:\n      this.socket = new WebSocket(this.url);\n      this.socket.onopen = this.__onOpen.bind(this);\n      this.socket.onmessage = this.__onMessage.bind(this);\n      this.socket.onerror = this.__onError.bind(this);\n      this.socket.onclose = this.__onClose.bind(this);\n    },\n\n    /**\n     * Closes the transport connection\n     */\n    close: function() {\n      this.socket.close();\n    },\n\n    /**\n     * Returns the specified number of characters from the response\n     * buffer.\n     * @param {number} len - The number of characters to return.\n     * @returns {string} Characters sent by the server.\n     */\n    read: function(len) {\n        var avail = this.wpos - this.rpos;\n\n        if (avail === 0) {\n            return '';\n        }\n\n        var give = len;\n\n        if (avail < len) {\n            give = avail;\n        }\n\n        var ret = this.read_buf.substr(this.rpos, give);\n        this.rpos += give;\n\n        //clear buf when complete?\n        return ret;\n    },\n\n    /**\n     * Returns the entire response buffer.\n     * @returns {string} Characters sent by the server.\n     */\n    readAll: function() {\n        return this.recv_buf;\n    },\n\n    /**\n     * Sets the send buffer to buf.\n     * @param {string} buf - The buffer to send.\n     */\n    write: function(buf) {\n        this.send_buf = buf;\n    },\n\n    /**\n     * Returns the send buffer.\n     * @readonly\n     * @returns {string} The send buffer.\n     */\n    getSendBuffer: function() {\n        return this.send_buf;\n    }\n\n};\n\n/**\n * Initializes a Thrift JSON protocol instance.\n * @constructor\n * @param {Thrift.Transport} transport - The transport to serialize to/from.\n * @classdesc Apache Thrift Protocols perform serialization which enables cross\n * language RPC. The Protocol type is the JavaScript browser implementation\n * of the Apache Thrift TJSONProtocol.\n * @example\n *     var protocol  = new Thrift.Protocol(transport);\n */\nThrift.TJSONProtocol = Thrift.Protocol = function(transport) {\n    this.tstack = [];\n    this.tpos = [];\n    this.transport = transport;\n};\n\n/**\n * Thrift IDL type Id to string mapping.\n * @readonly\n * @see {@link Thrift.Type}\n */\nThrift.Protocol.Type = {};\nThrift.Protocol.Type[Thrift.Type.BOOL] = '\"tf\"';\nThrift.Protocol.Type[Thrift.Type.BYTE] = '\"i8\"';\nThrift.Protocol.Type[Thrift.Type.I16] = '\"i16\"';\nThrift.Protocol.Type[Thrift.Type.I32] = '\"i32\"';\nThrift.Protocol.Type[Thrift.Type.I64] = '\"i64\"';\nThrift.Protocol.Type[Thrift.Type.DOUBLE] = '\"dbl\"';\nThrift.Protocol.Type[Thrift.Type.STRUCT] = '\"rec\"';\nThrift.Protocol.Type[Thrift.Type.STRING] = '\"str\"';\nThrift.Protocol.Type[Thrift.Type.MAP] = '\"map\"';\nThrift.Protocol.Type[Thrift.Type.LIST] = '\"lst\"';\nThrift.Protocol.Type[Thrift.Type.SET] = '\"set\"';\n\n/**\n * Thrift IDL type string to Id mapping.\n * @readonly\n * @see {@link Thrift.Type}\n */\nThrift.Protocol.RType = {};\nThrift.Protocol.RType.tf = Thrift.Type.BOOL;\nThrift.Protocol.RType.i8 = Thrift.Type.BYTE;\nThrift.Protocol.RType.i16 = Thrift.Type.I16;\nThrift.Protocol.RType.i32 = Thrift.Type.I32;\nThrift.Protocol.RType.i64 = Thrift.Type.I64;\nThrift.Protocol.RType.dbl = Thrift.Type.DOUBLE;\nThrift.Protocol.RType.rec = Thrift.Type.STRUCT;\nThrift.Protocol.RType.str = Thrift.Type.STRING;\nThrift.Protocol.RType.map = Thrift.Type.MAP;\nThrift.Protocol.RType.lst = Thrift.Type.LIST;\nThrift.Protocol.RType.set = Thrift.Type.SET;\n\n/**\n * The TJSONProtocol version number.\n * @readonly\n * @const {number} Version\n * @memberof Thrift.Protocol\n */\n Thrift.Protocol.Version = 1;\n\nThrift.Protocol.prototype = {\n    /**\n     * Returns the underlying transport.\n     * @readonly\n     * @returns {Thrift.Transport} The underlying transport.\n     */\n    getTransport: function() {\n        return this.transport;\n    },\n\n    /**\n     * Serializes the beginning of a Thrift RPC message.\n     * @param {string} name - The service method to call.\n     * @param {Thrift.MessageType} messageType - The type of method call.\n     * @param {number} seqid - The sequence number of this call (always 0 in Apache Thrift).\n     */\n    writeMessageBegin: function(name, messageType, seqid) {\n        this.tstack = [];\n        this.tpos = [];\n\n        this.tstack.push([Thrift.Protocol.Version, '\"' +\n            name + '\"', messageType, seqid]);\n    },\n\n    /**\n     * Serializes the end of a Thrift RPC message.\n     */\n    writeMessageEnd: function() {\n        var obj = this.tstack.pop();\n\n        this.wobj = this.tstack.pop();\n        this.wobj.push(obj);\n\n        this.wbuf = '[' + this.wobj.join(',') + ']';\n\n        this.transport.write(this.wbuf);\n     },\n\n\n    /**\n     * Serializes the beginning of a struct.\n     * @param {string} name - The name of the struct.\n     */\n    writeStructBegin: function(name) {\n        this.tpos.push(this.tstack.length);\n        this.tstack.push({});\n    },\n\n    /**\n     * Serializes the end of a struct.\n     */\n    writeStructEnd: function() {\n\n        var p = this.tpos.pop();\n        var struct = this.tstack[p];\n        var str = '{';\n        var first = true;\n        for (var key in struct) {\n            if (first) {\n                first = false;\n            } else {\n                str += ',';\n            }\n\n            str += key + ':' + struct[key];\n        }\n\n        str += '}';\n        this.tstack[p] = str;\n    },\n\n    /**\n     * Serializes the beginning of a struct field.\n     * @param {string} name - The name of the field.\n     * @param {Thrift.Protocol.Type} fieldType - The data type of the field.\n     * @param {number} fieldId - The field's unique identifier.\n     */\n    writeFieldBegin: function(name, fieldType, fieldId) {\n        this.tpos.push(this.tstack.length);\n        this.tstack.push({ 'fieldId': '\"' +\n            fieldId + '\"', 'fieldType': Thrift.Protocol.Type[fieldType]\n        });\n\n    },\n\n    /**\n     * Serializes the end of a field.\n     */\n    writeFieldEnd: function() {\n        var value = this.tstack.pop();\n        var fieldInfo = this.tstack.pop();\n\n        this.tstack[this.tstack.length - 1][fieldInfo.fieldId] = '{' +\n            fieldInfo.fieldType + ':' + value + '}';\n        this.tpos.pop();\n    },\n\n    /**\n     * Serializes the end of the set of fields for a struct.\n     */\n    writeFieldStop: function() {\n        //na\n    },\n\n    /**\n     * Serializes the beginning of a map collection.\n     * @param {Thrift.Type} keyType - The data type of the key.\n     * @param {Thrift.Type} valType - The data type of the value.\n     * @param {number} [size] - The number of elements in the map (ignored).\n     */\n    writeMapBegin: function(keyType, valType, size) {\n        this.tpos.push(this.tstack.length);\n        this.tstack.push([Thrift.Protocol.Type[keyType],\n            Thrift.Protocol.Type[valType], 0]);\n    },\n\n    /**\n     * Serializes the end of a map.\n     */\n    writeMapEnd: function() {\n        var p = this.tpos.pop();\n\n        if (p == this.tstack.length) {\n            return;\n        }\n\n        if ((this.tstack.length - p - 1) % 2 !== 0) {\n            this.tstack.push('');\n        }\n\n        var size = (this.tstack.length - p - 1) / 2;\n\n        this.tstack[p][this.tstack[p].length - 1] = size;\n\n        var map = '}';\n        var first = true;\n        while (this.tstack.length > p + 1) {\n            var v = this.tstack.pop();\n            var k = this.tstack.pop();\n            if (first) {\n                first = false;\n            } else {\n                map = ',' + map;\n            }\n\n            if (! isNaN(k)) { k = '\"' + k + '\"'; } //json \"keys\" need to be strings\n            map = k + ':' + v + map;\n        }\n        map = '{' + map;\n\n        this.tstack[p].push(map);\n        this.tstack[p] = '[' + this.tstack[p].join(',') + ']';\n    },\n\n    /**\n     * Serializes the beginning of a list collection.\n     * @param {Thrift.Type} elemType - The data type of the elements.\n     * @param {number} size - The number of elements in the list.\n     */\n    writeListBegin: function(elemType, size) {\n        this.tpos.push(this.tstack.length);\n        this.tstack.push([Thrift.Protocol.Type[elemType], size]);\n    },\n\n    /**\n     * Serializes the end of a list.\n     */\n    writeListEnd: function() {\n        var p = this.tpos.pop();\n\n        while (this.tstack.length > p + 1) {\n            var tmpVal = this.tstack[p + 1];\n            this.tstack.splice(p + 1, 1);\n            this.tstack[p].push(tmpVal);\n        }\n\n        this.tstack[p] = '[' + this.tstack[p].join(',') + ']';\n    },\n\n    /**\n     * Serializes the beginning of a set collection.\n     * @param {Thrift.Type} elemType - The data type of the elements.\n     * @param {number} size - The number of elements in the list.\n     */\n    writeSetBegin: function(elemType, size) {\n        this.tpos.push(this.tstack.length);\n        this.tstack.push([Thrift.Protocol.Type[elemType], size]);\n    },\n\n    /**\n     * Serializes the end of a set.\n     */\n    writeSetEnd: function() {\n        var p = this.tpos.pop();\n\n        while (this.tstack.length > p + 1) {\n            var tmpVal = this.tstack[p + 1];\n            this.tstack.splice(p + 1, 1);\n            this.tstack[p].push(tmpVal);\n        }\n\n        this.tstack[p] = '[' + this.tstack[p].join(',') + ']';\n    },\n\n    /** Serializes a boolean */\n    writeBool: function(value) {\n        this.tstack.push(value ? 1 : 0);\n    },\n\n    /** Serializes a number */\n    writeByte: function(i8) {\n        this.tstack.push(i8);\n    },\n\n    /** Serializes a number */\n    writeI16: function(i16) {\n        this.tstack.push(i16);\n    },\n\n    /** Serializes a number */\n    writeI32: function(i32) {\n        this.tstack.push(i32);\n    },\n\n    /** Serializes a number */\n    writeI64: function(i64) {\n        this.tstack.push(i64);\n    },\n\n    /** Serializes a number */\n    writeDouble: function(dbl) {\n        this.tstack.push(dbl);\n    },\n\n    /** Serializes a string */\n    writeString: function(str) {\n        // We do not encode uri components for wire transfer:\n        if (str === null) {\n            this.tstack.push(null);\n        } else {\n            // concat may be slower than building a byte buffer\n            var escapedString = '';\n            for (var i = 0; i < str.length; i++) {\n                var ch = str.charAt(i);      // a single double quote: \"\n                if (ch === '\\\"') {\n                    escapedString += '\\\\\\\"'; // write out as: \\\"\n                } else if (ch === '\\\\') {    // a single backslash\n                    escapedString += '\\\\\\\\'; // write out as double backslash\n                } else if (ch === '\\b') {    // a single backspace: invisible\n                    escapedString += '\\\\b';  // write out as: \\b\"\n                } else if (ch === '\\f') {    // a single formfeed: invisible\n                    escapedString += '\\\\f';  // write out as: \\f\"\n                } else if (ch === '\\n') {    // a single newline: invisible\n                    escapedString += '\\\\n';  // write out as: \\n\"\n                } else if (ch === '\\r') {    // a single return: invisible\n                    escapedString += '\\\\r';  // write out as: \\r\"\n                } else if (ch === '\\t') {    // a single tab: invisible\n                    escapedString += '\\\\t';  // write out as: \\t\"\n                } else {\n                    escapedString += ch;     // Else it need not be escaped\n                }\n            }\n            this.tstack.push('\"' + escapedString + '\"');\n        }\n    },\n\n    /** Serializes a string */\n    writeBinary: function(str) {\n        this.writeString(str);\n    },\n\n    /**\n       @class\n       @name AnonReadMessageBeginReturn\n       @property {string} fname - The name of the service method.\n       @property {Thrift.MessageType} mtype - The type of message call.\n       @property {number} rseqid - The sequence number of the message (0 in Thrift RPC).\n     */\n    /**\n     * Deserializes the beginning of a message.\n     * @returns {AnonReadMessageBeginReturn}\n     */\n    readMessageBegin: function() {\n        this.rstack = [];\n        this.rpos = [];\n\n        if (typeof JSON !== 'undefined' && typeof JSON.parse === 'function') {\n            this.robj = JSON.parse(this.transport.readAll());\n        } else if (typeof jQuery !== 'undefined') {\n            this.robj = jQuery.parseJSON(this.transport.readAll());\n        } else {\n            this.robj = eval(this.transport.readAll());\n        }\n\n        var r = {};\n        var version = this.robj.shift();\n\n        if (version != Thrift.Protocol.Version) {\n            throw 'Wrong thrift protocol version: ' + version;\n        }\n\n        r.fname = this.robj.shift();\n        r.mtype = this.robj.shift();\n        r.rseqid = this.robj.shift();\n\n\n        //get to the main obj\n        this.rstack.push(this.robj.shift());\n\n        return r;\n    },\n\n    /** Deserializes the end of a message. */\n    readMessageEnd: function() {\n    },\n\n    /**\n     * Deserializes the beginning of a struct.\n     * @param {string} [name] - The name of the struct (ignored)\n     * @returns {object} - An object with an empty string fname property\n     */\n    readStructBegin: function(name) {\n        var r = {};\n        r.fname = '';\n\n        //incase this is an array of structs\n        if (this.rstack[this.rstack.length - 1] instanceof Array) {\n            this.rstack.push(this.rstack[this.rstack.length - 1].shift());\n        }\n\n        return r;\n    },\n\n    /** Deserializes the end of a struct. */\n    readStructEnd: function() {\n        if (this.rstack[this.rstack.length - 2] instanceof Array) {\n            this.rstack.pop();\n        }\n    },\n\n    /**\n       @class\n       @name AnonReadFieldBeginReturn\n       @property {string} fname - The name of the field (always '').\n       @property {Thrift.Type} ftype - The data type of the field.\n       @property {number} fid - The unique identifier of the field.\n     */\n    /**\n     * Deserializes the beginning of a field.\n     * @returns {AnonReadFieldBeginReturn}\n     */\n    readFieldBegin: function() {\n        var r = {};\n\n        var fid = -1;\n        var ftype = Thrift.Type.STOP;\n\n        //get a fieldId\n        for (var f in (this.rstack[this.rstack.length - 1])) {\n            if (f === null) {\n              continue;\n            }\n\n            fid = parseInt(f, 10);\n            this.rpos.push(this.rstack.length);\n\n            var field = this.rstack[this.rstack.length - 1][fid];\n\n            //remove so we don't see it again\n            delete this.rstack[this.rstack.length - 1][fid];\n\n            this.rstack.push(field);\n\n            break;\n        }\n\n        if (fid != -1) {\n\n            //should only be 1 of these but this is the only\n            //way to match a key\n            for (var i in (this.rstack[this.rstack.length - 1])) {\n                if (Thrift.Protocol.RType[i] === null) {\n                    continue;\n                }\n\n                ftype = Thrift.Protocol.RType[i];\n                this.rstack[this.rstack.length - 1] =\n                    this.rstack[this.rstack.length - 1][i];\n            }\n        }\n\n        r.fname = '';\n        r.ftype = ftype;\n        r.fid = fid;\n\n        return r;\n    },\n\n    /** Deserializes the end of a field. */\n    readFieldEnd: function() {\n        var pos = this.rpos.pop();\n\n        //get back to the right place in the stack\n        while (this.rstack.length > pos) {\n            this.rstack.pop();\n        }\n\n    },\n\n    /**\n       @class\n       @name AnonReadMapBeginReturn\n       @property {Thrift.Type} ktype - The data type of the key.\n       @property {Thrift.Type} vtype - The data type of the value.\n       @property {number} size - The number of elements in the map.\n     */\n    /**\n     * Deserializes the beginning of a map.\n     * @returns {AnonReadMapBeginReturn}\n     */\n    readMapBegin: function() {\n        var map = this.rstack.pop();\n        var first = map.shift();\n        if (first instanceof Array) {\n          this.rstack.push(map);\n          map = first;\n          first = map.shift();\n        }\n\n        var r = {};\n        r.ktype = Thrift.Protocol.RType[first];\n        r.vtype = Thrift.Protocol.RType[map.shift()];\n        r.size = map.shift();\n\n\n        this.rpos.push(this.rstack.length);\n        this.rstack.push(map.shift());\n\n        return r;\n    },\n\n    /** Deserializes the end of a map. */\n    readMapEnd: function() {\n        this.readFieldEnd();\n    },\n\n    /**\n       @class\n       @name AnonReadColBeginReturn\n       @property {Thrift.Type} etype - The data type of the element.\n       @property {number} size - The number of elements in the collection.\n     */\n    /**\n     * Deserializes the beginning of a list.\n     * @returns {AnonReadColBeginReturn}\n     */\n    readListBegin: function() {\n        var list = this.rstack[this.rstack.length - 1];\n\n        var r = {};\n        r.etype = Thrift.Protocol.RType[list.shift()];\n        r.size = list.shift();\n\n        this.rpos.push(this.rstack.length);\n        this.rstack.push(list.shift());\n\n        return r;\n    },\n\n    /** Deserializes the end of a list. */\n    readListEnd: function() {\n        this.readFieldEnd();\n    },\n\n    /**\n     * Deserializes the beginning of a set.\n     * @returns {AnonReadColBeginReturn}\n     */\n    readSetBegin: function(elemType, size) {\n        return this.readListBegin(elemType, size);\n    },\n\n    /** Deserializes the end of a set. */\n    readSetEnd: function() {\n        return this.readListEnd();\n    },\n\n    /** Returns an object with a value property set to\n     *  False unless the next number in the protocol buffer\n     *  is 1, in which case the value property is True */\n    readBool: function() {\n        var r = this.readI32();\n\n        if (r !== null && r.value == '1') {\n            r.value = true;\n        } else {\n            r.value = false;\n        }\n\n        return r;\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readByte: function() {\n        return this.readI32();\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readI16: function() {\n        return this.readI32();\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readI32: function(f) {\n        if (f === undefined) {\n            f = this.rstack[this.rstack.length - 1];\n        }\n\n        var r = {};\n\n        if (f instanceof Array) {\n            if (f.length === 0) {\n                r.value = undefined;\n            } else {\n                r.value = f.shift();\n            }\n        } else if (f instanceof Object) {\n           for (var i in f) {\n                if (i === null) {\n                  continue;\n                }\n                this.rstack.push(f[i]);\n                delete f[i];\n\n                r.value = i;\n                break;\n           }\n        } else {\n            r.value = f;\n            this.rstack.pop();\n        }\n\n        return r;\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readI64: function() {\n        return this.readI32();\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readDouble: function() {\n        return this.readI32();\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readString: function() {\n        var r = this.readI32();\n        return r;\n    },\n\n    /** Returns the an object with a value property set to the\n        next value found in the protocol buffer */\n    readBinary: function() {\n        return this.readString();\n    },\n\n    /**\n     * Method to arbitrarily skip over data */\n    skip: function(type) {\n        var ret, i;\n        switch (type) {\n            case Thrift.Type.STOP:\n                return null;\n\n            case Thrift.Type.BOOL:\n                return this.readBool();\n\n            case Thrift.Type.BYTE:\n                return this.readByte();\n\n            case Thrift.Type.I16:\n                return this.readI16();\n\n            case Thrift.Type.I32:\n                return this.readI32();\n\n            case Thrift.Type.I64:\n                return this.readI64();\n\n            case Thrift.Type.DOUBLE:\n                return this.readDouble();\n\n            case Thrift.Type.STRING:\n                return this.readString();\n\n            case Thrift.Type.STRUCT:\n                this.readStructBegin();\n                while (true) {\n                    ret = this.readFieldBegin();\n                    if (ret.ftype == Thrift.Type.STOP) {\n                        break;\n                    }\n                    this.skip(ret.ftype);\n                    this.readFieldEnd();\n                }\n                this.readStructEnd();\n                return null;\n\n            case Thrift.Type.MAP:\n                ret = this.readMapBegin();\n                for (i = 0; i < ret.size; i++) {\n                    if (i > 0) {\n                        if (this.rstack.length > this.rpos[this.rpos.length - 1] + 1) {\n                            this.rstack.pop();\n                        }\n                    }\n                    this.skip(ret.ktype);\n                    this.skip(ret.vtype);\n                }\n                this.readMapEnd();\n                return null;\n\n            case Thrift.Type.SET:\n                ret = this.readSetBegin();\n                for (i = 0; i < ret.size; i++) {\n                    this.skip(ret.etype);\n                }\n                this.readSetEnd();\n                return null;\n\n            case Thrift.Type.LIST:\n                ret = this.readListBegin();\n                for (i = 0; i < ret.size; i++) {\n                    this.skip(ret.etype);\n                }\n                this.readListEnd();\n                return null;\n        }\n    }\n};\n\n\n/**\n * Initializes a MutilplexProtocol Implementation as a Wrapper for Thrift.Protocol\n * @constructor\n */\nThrift.MultiplexProtocol = function (srvName, trans, strictRead, strictWrite) {\n    Thrift.Protocol.call(this, trans, strictRead, strictWrite);\n    this.serviceName = srvName;\n};\nThrift.inherits(Thrift.MultiplexProtocol, Thrift.Protocol, 'multiplexProtocol');\n\n/** Override writeMessageBegin method of prototype*/\nThrift.MultiplexProtocol.prototype.writeMessageBegin = function (name, type, seqid) {\n\n    if (type === Thrift.MessageType.CALL || type === Thrift.MessageType.ONEWAY) {\n        Thrift.Protocol.prototype.writeMessageBegin.call(this, this.serviceName + \":\" + name, type, seqid);\n    } else {\n        Thrift.Protocol.prototype.writeMessageBegin.call(this, name, type, seqid);\n    }\n};\n\nThrift.Multiplexer = function () {\n    this.seqid = 0;\n};\n\n/** Instantiates a multiplexed client for a specific service\n * @constructor\n * @param {String} serviceName - The transport to serialize to/from.\n * @param {Thrift.ServiceClient} SCl - The Service Client Class\n * @param {Thrift.Transport} transport - Thrift.Transport instance which provides remote host:port\n * @example\n *    var mp = new Thrift.Multiplexer();\n *    var transport = new Thrift.Transport(\"http://localhost:9090/foo.thrift\");\n *    var protocol = new Thrift.Protocol(transport);\n *    var client = mp.createClient('AuthService', AuthServiceClient, transport);\n*/\nThrift.Multiplexer.prototype.createClient = function (serviceName, SCl, transport) {\n    if (SCl.Client) {\n        SCl = SCl.Client;\n    }\n    var self = this;\n    SCl.prototype.new_seqid = function () {\n        self.seqid += 1;\n        return self.seqid;\n    };\n    var client = new SCl(new Thrift.MultiplexProtocol(serviceName, transport));\n\n    return client;\n};\n\n\n\nvar copyList, copyMap;\n\ncopyList = function(lst, types) {\n\n  if (!lst) {return lst; }\n\n  var type;\n\n  if (types.shift === undefined) {\n    type = types;\n  }\n  else {\n    type = types[0];\n  }\n  var Type = type;\n\n  var len = lst.length, result = [], i, val;\n  for (i = 0; i < len; i++) {\n    val = lst[i];\n    if (type === null) {\n      result.push(val);\n    }\n    else if (type === copyMap || type === copyList) {\n      result.push(type(val, types.slice(1)));\n    }\n    else {\n      result.push(new Type(val));\n    }\n  }\n  return result;\n};\n\ncopyMap = function(obj, types){\n\n  if (!obj) {return obj; }\n\n  var type;\n\n  if (types.shift === undefined) {\n    type = types;\n  }\n  else {\n    type = types[0];\n  }\n  var Type = type;\n\n  var result = {}, val;\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      val = obj[prop];\n      if (type === null) {\n        result[prop] = val;\n      }\n      else if (type === copyMap || type === copyList) {\n        result[prop] = type(val, types.slice(1));\n      }\n      else {\n        result[prop] = new Type(val);\n      }\n    }\n  }\n  return result;\n};\n\nThrift.copyMap = copyMap;\nThrift.copyList = copyList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/thrift-layer/lib/thrift.js\n// module id = 49\n// module chunks = 0"],"sourceRoot":""}